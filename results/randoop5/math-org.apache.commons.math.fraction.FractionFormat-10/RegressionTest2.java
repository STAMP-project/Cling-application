import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        fractionFormat22.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        java.lang.Object obj57 = numberFormat56.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat68);
        java.text.NumberFormat numberFormat71 = fractionFormat70.getNumeratorFormat();
        fractionFormat50.setDenominatorFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj76 = fractionFormat74.parseObject("0 / 1");
        java.lang.Object obj78 = fractionFormat74.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj82 = fractionFormat80.parseObject("0 / 1");
        java.text.NumberFormat numberFormat83 = fractionFormat80.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat79, numberFormat83);
        java.lang.Object obj86 = numberFormat83.parseObject("-1 / 1");
        java.lang.Object obj88 = numberFormat83.parseObject("-1 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = numberFormat17.format((java.lang.Object) "-1 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (-1L) + "'", obj86, (-1L));
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (-1L) + "'", obj88, (-1L));
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        java.lang.Object obj24 = fractionFormat23.clone();
        org.apache.commons.math.fraction.Fraction fraction26 = fractionFormat23.parse("10 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat23.getDenominatorFormat();
        java.text.ParsePosition parsePosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = fractionFormat23.parseObject("10", parsePosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(numberFormat27);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat8.getDenominatorFormat();
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = fractionFormat8.parseObject("-1 / 1", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        java.lang.Object obj29 = numberFormat22.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat32.getDenominatorFormat();
        java.lang.Object obj35 = fractionFormat32.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        fractionFormat32.setDenominatorFormat(numberFormat55);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat30.formatToCharacterIterator((java.lang.Object) fractionFormat32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat38 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat61.getNumeratorFormat();
        fractionFormat60.setDenominatorFormat(numberFormat66);
        java.lang.Object obj68 = numberFormat66.clone();
        fractionFormat49.setNumeratorFormat(numberFormat66);
        java.lang.Object obj70 = numberFormat66.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat66);
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        java.lang.Object obj74 = numberFormat72.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat72);
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        java.text.NumberFormat numberFormat77 = fractionFormat75.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction79 = fractionFormat75.parse("0 / 1");
        java.text.NumberFormat numberFormat80 = fractionFormat75.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1L) + "'", obj74, (-1L));
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertNotNull(numberFormat80);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        java.text.NumberFormat numberFormat19 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        fractionFormat20.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        fractionFormat20.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat31);
        java.text.NumberFormat numberFormat34 = null;
        java.text.NumberFormat numberFormat35 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        fractionFormat36.setNumeratorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42);
        java.text.NumberFormat numberFormat46 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = numberFormat14.format((java.lang.Object) numberFormat42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = numberFormat31.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat23.setDenominatorFormat(numberFormat31);
        java.lang.Object obj40 = numberFormat31.clone();
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.lang.Object obj53 = numberFormat52.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat64);
        fractionFormat43.setNumeratorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat52);
        java.lang.Object obj71 = numberFormat52.parseObject("100 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 100L + "'", obj71, 100L);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj26 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        fractionFormat27.setNumeratorFormat(numberFormat41);
        java.lang.Object obj44 = fractionFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getNumeratorFormat();
        fractionFormat27.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46);
        java.lang.Object obj50 = numberFormat46.parseObject("10");
        java.text.NumberFormat numberFormat51 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat52.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer55 = null;
        java.text.FieldPosition fieldPosition56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer57 = fractionFormat0.format((java.lang.Object) fractionFormat52, stringBuffer55, fieldPosition56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10L + "'", obj50, 10L);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        fractionFormat31.setDenominatorFormat(numberFormat37);
        java.lang.Object obj39 = numberFormat37.clone();
        fractionFormat20.setNumeratorFormat(numberFormat37);
        fractionFormat0.setNumeratorFormat(numberFormat37);
        java.text.ParsePosition parsePosition43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = fractionFormat0.parseObject("hi!", parsePosition43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj5 = fractionFormat3.parseObject("0 / 1");
        java.lang.Object obj7 = fractionFormat3.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat3.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat3.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        fractionFormat3.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        fractionFormat34.setDenominatorFormat(numberFormat40);
        java.lang.Object obj42 = numberFormat40.clone();
        fractionFormat23.setNumeratorFormat(numberFormat40);
        fractionFormat3.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat2, numberFormat40);
        java.text.NumberFormat numberFormat46 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.lang.Object obj69 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat65.getNumeratorFormat();
        fractionFormat64.setDenominatorFormat(numberFormat70);
        java.lang.Object obj72 = numberFormat70.clone();
        fractionFormat53.setNumeratorFormat(numberFormat70);
        java.lang.Object obj74 = numberFormat70.clone();
        java.lang.Object obj75 = numberFormat70.clone();
        fractionFormat48.setDenominatorFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70);
        fractionFormat47.setNumeratorFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj81 = fractionFormat79.parseObject("0 / 1");
        java.text.NumberFormat numberFormat82 = fractionFormat79.getNumeratorFormat();
        java.text.NumberFormat numberFormat83 = fractionFormat79.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70, numberFormat83);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat70);
        java.text.NumberFormat numberFormat86 = fractionFormat85.getNumeratorFormat();
        java.lang.Class<?> wildcardClass87 = fractionFormat85.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = numberFormat2.format((java.lang.Object) fractionFormat85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNull(numberFormat86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction6 = fractionFormat2.parse("100 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer14 = null;
        java.text.FieldPosition fieldPosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer16 = fractionFormat0.format((java.lang.Object) fractionFormat12, stringBuffer14, fieldPosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat5.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        fractionFormat5.setDenominatorFormat(numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat19);
        java.text.ParsePosition parsePosition22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = fractionFormat20.parseObject("10 / 1", parsePosition22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        fractionFormat21.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat55);
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat67.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat70 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat66);
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = numberFormat66.formatToCharacterIterator((java.lang.Object) 100L);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat66);
        java.lang.Object obj78 = numberFormat29.parseObject("10");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 10L + "'", obj78, 10L);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat25.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        fractionFormat25.setDenominatorFormat(numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat25.getNumeratorFormat();
        fractionFormat24.setNumeratorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat24.getDenominatorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat61.getNumeratorFormat();
        fractionFormat60.setDenominatorFormat(numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat66);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = fractionFormat24.format((java.lang.Object) numberFormat66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat5.parse("0 / 1");
        java.text.NumberFormat numberFormat8 = fractionFormat5.getNumeratorFormat();
        fractionFormat0.setNumeratorFormat(numberFormat8);
        java.lang.Object obj11 = numberFormat8.parseObject("10");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 10L + "'", obj11, 10L);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54);
        fractionFormat45.setNumeratorFormat(numberFormat54);
        java.text.NumberFormat numberFormat58 = null;
        java.text.NumberFormat numberFormat59 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat59);
        java.lang.Object obj61 = fractionFormat60.clone();
        java.text.NumberFormat numberFormat62 = null;
        java.text.NumberFormat numberFormat63 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        java.text.NumberFormat numberFormat66 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat67.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat70 = fractionFormat67.getDenominatorFormat();
        fractionFormat64.setNumeratorFormat(numberFormat70);
        java.lang.Object obj72 = numberFormat70.clone();
        java.lang.String str74 = numberFormat70.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator77 = fractionFormat75.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat78 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator81 = fractionFormat79.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat82 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78, numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70, numberFormat78);
        fractionFormat60.setDenominatorFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat70);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = fractionFormat87.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNull(numberFormat65);
        org.junit.Assert.assertNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "10" + "'", str74, "10");
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(attributedCharacterIterator77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator81);
        org.junit.Assert.assertNotNull(numberFormat82);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat43);
        fractionFormat22.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj80 = fractionFormat78.parseObject("0 / 1");
        java.text.NumberFormat numberFormat81 = fractionFormat78.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat81);
        org.apache.commons.math.fraction.Fraction fraction86 = fractionFormat84.parse("0 / 1");
        java.lang.String str87 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction86);
        java.lang.String str88 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction86);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fraction86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "0 / 1" + "'", str87, "0 / 1");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "0 / 1" + "'", str88, "0 / 1");
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        fractionFormat11.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat45);
        java.lang.Object obj48 = numberFormat45.parseObject("0 / 1");
        fractionFormat25.setNumeratorFormat(numberFormat45);
        java.text.NumberFormat numberFormat50 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction57 = fractionFormat54.parse("10");
        java.lang.StringBuffer stringBuffer58 = null;
        java.text.FieldPosition fieldPosition59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer60 = fractionFormat53.format(fraction57, stringBuffer58, fieldPosition59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0L + "'", obj48, 0L);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fraction57);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        fractionFormat51.setDenominatorFormat(numberFormat57);
        java.lang.Object obj59 = numberFormat57.clone();
        fractionFormat40.setNumeratorFormat(numberFormat57);
        java.lang.Object obj61 = numberFormat57.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat57);
        fractionFormat29.setNumeratorFormat(numberFormat57);
        java.lang.Object obj64 = numberFormat57.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57);
        org.apache.commons.math.fraction.Fraction fraction67 = fractionFormat65.parse("10 / 1");
        java.text.ParsePosition parsePosition69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = fractionFormat65.parseObject("hi!", parsePosition69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(fraction67);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.lang.Object obj30 = fractionFormat29.clone();
        java.text.NumberFormat numberFormat31 = null;
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        java.lang.String str43 = numberFormat39.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat47);
        fractionFormat29.setDenominatorFormat(numberFormat39);
        fractionFormat26.setDenominatorFormat(numberFormat39);
        fractionFormat2.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.Fraction fraction58 = fractionFormat2.parse("10 / 1");
        java.lang.String str59 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction58);
        java.lang.Class<?> wildcardClass60 = fraction58.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "10" + "'", str43, "10");
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "10 / 1" + "'", str59, "10 / 1");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat46);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.lang.Object obj51 = numberFormat49.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        java.text.ParsePosition parsePosition56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = fractionFormat54.parseObject("100", parsePosition56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        java.lang.Object obj19 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat36);
        fractionFormat0.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        fractionFormat55.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat61);
        java.lang.Object obj64 = numberFormat61.clone();
        fractionFormat0.setNumeratorFormat(numberFormat61);
        java.lang.Object obj67 = numberFormat61.parseObject("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.lang.Object obj72 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat68.getNumeratorFormat();
        java.text.NumberFormat numberFormat74 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat74);
        java.text.ParsePosition parsePosition77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction78 = fractionFormat75.parse("-1 / 1", parsePosition77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        fractionFormat22.setNumeratorFormat(numberFormat29);
        java.lang.Class<?> wildcardClass37 = numberFormat29.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        java.text.NumberFormat numberFormat59 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat69.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat72);
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        java.lang.Object obj77 = numberFormat75.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat75);
        fractionFormat25.setDenominatorFormat(numberFormat75);
        fractionFormat2.setNumeratorFormat(numberFormat75);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (-1L) + "'", obj77, (-1L));
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        fractionFormat17.setDenominatorFormat(numberFormat23);
        java.lang.Object obj25 = numberFormat23.clone();
        fractionFormat6.setNumeratorFormat(numberFormat23);
        java.lang.Object obj27 = numberFormat23.clone();
        java.lang.Object obj28 = numberFormat23.clone();
        fractionFormat1.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23);
        fractionFormat0.setNumeratorFormat(numberFormat23);
        java.lang.Object obj33 = fractionFormat0.parseObject("100");
        java.text.ParsePosition parsePosition35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = fractionFormat0.parseObject("", parsePosition35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat18.getNumeratorFormat();
        fractionFormat14.setDenominatorFormat(numberFormat25);
        java.lang.Object obj27 = fractionFormat14.clone();
        java.lang.StringBuffer stringBuffer28 = null;
        java.text.FieldPosition fieldPosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer30 = fractionFormat13.format(obj27, stringBuffer28, fieldPosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        fractionFormat12.setNumeratorFormat(numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat28 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj30 = fractionFormat2.parseObject("10");
        java.text.NumberFormat numberFormat31 = null;
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        java.lang.String str43 = numberFormat39.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat44 = null;
        java.text.NumberFormat numberFormat45 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat45);
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        fractionFormat46.setNumeratorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat64.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat63);
        java.lang.Object obj76 = fractionFormat75.clone();
        java.lang.Object obj77 = fractionFormat75.clone();
        org.apache.commons.math.fraction.Fraction fraction79 = fractionFormat75.parse("100");
        java.lang.StringBuffer stringBuffer80 = null;
        java.text.FieldPosition fieldPosition81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer82 = fractionFormat2.format(fraction79, stringBuffer80, fieldPosition81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "10" + "'", str43, "10");
        org.junit.Assert.assertNull(numberFormat47);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(fraction79);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getNumeratorFormat();
        java.text.NumberFormat numberFormat23 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat31);
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat21.setDenominatorFormat(numberFormat23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: denominator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        java.lang.Object obj16 = numberFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat37.getNumeratorFormat();
        fractionFormat36.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat64);
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        java.lang.Object obj69 = numberFormat67.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat67);
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat72);
        java.text.ParsePosition parsePosition75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction76 = fractionFormat73.parse("100", parsePosition75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (-1L) + "'", obj69, (-1L));
        org.junit.Assert.assertNotNull(numberFormat72);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        java.text.NumberFormat numberFormat48 = null;
        java.text.NumberFormat numberFormat49 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = numberFormat58.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat50.setDenominatorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58);
        fractionFormat45.setDenominatorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58);
        java.text.ParsePosition parsePosition71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = fractionFormat69.parseObject("", parsePosition71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNull(numberFormat51);
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        java.lang.Object obj22 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat31);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj12 = fractionFormat2.parseObject("10");
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32);
        fractionFormat15.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.lang.String str38 = numberFormat32.format((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = null;
        java.text.NumberFormat numberFormat40 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        fractionFormat41.setNumeratorFormat(numberFormat47);
        java.text.NumberFormat numberFormat49 = null;
        java.text.NumberFormat numberFormat50 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat51.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        fractionFormat51.setNumeratorFormat(numberFormat59);
        fractionFormat41.setDenominatorFormat(numberFormat59);
        java.text.NumberFormat numberFormat67 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat67);
        fractionFormat2.setDenominatorFormat(numberFormat67);
        java.lang.Object obj71 = numberFormat67.parseObject("10 / 1");
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "100" + "'", str38, "100");
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 10L + "'", obj71, 10L);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        fractionFormat29.setNumeratorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat37.getNumeratorFormat();
        fractionFormat29.setDenominatorFormat(numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51);
        java.text.NumberFormat numberFormat54 = null;
        java.text.NumberFormat numberFormat55 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat55);
        java.lang.Object obj57 = fractionFormat56.clone();
        java.text.NumberFormat numberFormat58 = null;
        java.text.NumberFormat numberFormat59 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat59);
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        java.text.NumberFormat numberFormat62 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        fractionFormat60.setNumeratorFormat(numberFormat66);
        java.lang.Object obj68 = numberFormat66.clone();
        java.lang.String str70 = numberFormat66.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator73 = fractionFormat71.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat74 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator77 = fractionFormat75.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat78 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74, numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat74);
        fractionFormat56.setDenominatorFormat(numberFormat66);
        fractionFormat53.setDenominatorFormat(numberFormat66);
        fractionFormat29.setDenominatorFormat(numberFormat66);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator84 = fractionFormat26.formatToCharacterIterator((java.lang.Object) fractionFormat29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNull(numberFormat61);
        org.junit.Assert.assertNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "10" + "'", str70, "10");
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(attributedCharacterIterator73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(attributedCharacterIterator77);
        org.junit.Assert.assertNotNull(numberFormat78);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat2.setDenominatorFormat(numberFormat43);
        java.text.NumberFormat numberFormat47 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.lang.Object obj59 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        fractionFormat65.setDenominatorFormat(numberFormat71);
        java.lang.Object obj73 = numberFormat71.clone();
        fractionFormat54.setNumeratorFormat(numberFormat71);
        java.lang.Object obj75 = numberFormat71.clone();
        java.lang.Object obj76 = numberFormat71.clone();
        fractionFormat49.setDenominatorFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71);
        fractionFormat48.setNumeratorFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj82 = fractionFormat80.parseObject("0 / 1");
        java.text.NumberFormat numberFormat83 = fractionFormat80.getNumeratorFormat();
        java.text.NumberFormat numberFormat84 = fractionFormat80.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat84);
        fractionFormat2.setDenominatorFormat(numberFormat71);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        fractionFormat12.setNumeratorFormat(numberFormat19);
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = numberFormat33.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat25.setDenominatorFormat(numberFormat33);
        java.lang.Object obj42 = numberFormat33.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat33);
        fractionFormat0.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat45.getNumeratorFormat();
        java.lang.Object obj54 = numberFormat52.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        java.lang.Object obj56 = fractionFormat55.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat0.formatToCharacterIterator((java.lang.Object) fractionFormat55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10L + "'", obj54, 10L);
        org.junit.Assert.assertNotNull(obj56);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj9 = numberFormat7.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = fractionFormat10.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10L + "'", obj9, 10L);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        fractionFormat50.setDenominatorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat56);
        fractionFormat31.setNumeratorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38);
        java.lang.Object obj61 = numberFormat38.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38);
        java.lang.Object obj63 = numberFormat38.clone();
        java.text.NumberFormat numberFormat64 = null;
        java.text.NumberFormat numberFormat65 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat65);
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        java.text.NumberFormat numberFormat68 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat69.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        fractionFormat66.setNumeratorFormat(numberFormat72);
        java.lang.Object obj74 = numberFormat72.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat72);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = fractionFormat8.format((java.lang.Object) numberFormat72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNull(numberFormat67);
        org.junit.Assert.assertNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        fractionFormat27.setNumeratorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat37);
        java.text.ParsePosition parsePosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = fractionFormat38.parseObject("-1 / 1", parsePosition40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat37);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj27 = fractionFormat24.parseObject("10");
        java.text.NumberFormat numberFormat28 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        fractionFormat15.setNumeratorFormat(numberFormat29);
        fractionFormat0.setDenominatorFormat(numberFormat29);
        java.text.ParsePosition parsePosition34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = fractionFormat0.parseObject("10 / 1", parsePosition34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.NumberFormat numberFormat11 = null;
        java.text.NumberFormat numberFormat12 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        java.lang.Object obj23 = numberFormat22.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat34);
        fractionFormat13.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        fractionFormat48.setDenominatorFormat(numberFormat54);
        java.lang.Object obj56 = numberFormat54.clone();
        fractionFormat13.setDenominatorFormat(numberFormat54);
        java.lang.StringBuffer stringBuffer58 = null;
        java.text.FieldPosition fieldPosition59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer60 = fractionFormat10.format((java.lang.Object) fractionFormat13, stringBuffer58, fieldPosition59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj56);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat20);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        fractionFormat22.setNumeratorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat30);
        org.apache.commons.math.fraction.Fraction fraction38 = null;
        java.lang.StringBuffer stringBuffer39 = null;
        java.text.FieldPosition fieldPosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer41 = fractionFormat37.format(fraction38, stringBuffer39, fieldPosition40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.lang.Object obj5 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat9.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = null;
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat44);
        java.lang.Object obj47 = numberFormat44.parseObject("0 / 1");
        fractionFormat24.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58);
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) 1.0d);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj64 = fractionFormat62.parseObject("0 / 1");
        java.lang.Object obj66 = fractionFormat62.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat62.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68);
        fractionFormat59.setDenominatorFormat(numberFormat68);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat52.formatToCharacterIterator((java.lang.Object) fractionFormat59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0L + "'", obj47, 0L);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat33);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = null;
        java.text.NumberFormat numberFormat46 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        fractionFormat47.setNumeratorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat55.getNumeratorFormat();
        fractionFormat47.setNumeratorFormat(numberFormat58);
        java.lang.Object obj61 = numberFormat58.parseObject("0 / 1");
        fractionFormat38.setNumeratorFormat(numberFormat58);
        java.text.NumberFormat numberFormat63 = fractionFormat38.getDenominatorFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0L + "'", obj61, 0L);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        fractionFormat11.setNumeratorFormat(numberFormat22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = numberFormat22.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.lang.Object obj15 = fractionFormat13.parseObject("-1 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        fractionFormat19.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat51);
        java.lang.Object obj53 = numberFormat51.clone();
        fractionFormat34.setNumeratorFormat(numberFormat51);
        fractionFormat19.setDenominatorFormat(numberFormat51);
        org.apache.commons.math.fraction.Fraction fraction57 = fractionFormat19.parse("10");
        java.text.NumberFormat numberFormat58 = null;
        java.text.NumberFormat numberFormat59 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat59);
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        java.text.NumberFormat numberFormat62 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        fractionFormat60.setNumeratorFormat(numberFormat66);
        java.lang.Object obj68 = numberFormat66.clone();
        java.lang.String str70 = numberFormat66.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator73 = fractionFormat71.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat74 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator77 = fractionFormat75.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat78 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74, numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat74);
        fractionFormat19.setDenominatorFormat(numberFormat66);
        java.text.NumberFormat numberFormat82 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat82);
        org.apache.commons.math.fraction.Fraction fraction85 = fractionFormat83.parse("10");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNull(numberFormat61);
        org.junit.Assert.assertNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "10" + "'", str70, "10");
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(attributedCharacterIterator73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(attributedCharacterIterator77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(fraction85);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        fractionFormat0.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction46 = fractionFormat44.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat56);
        java.text.NumberFormat numberFormat58 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat58);
        fractionFormat0.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.Class<?> wildcardClass62 = fractionFormat61.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str63 = numberFormat43.format((java.lang.Object) wildcardClass62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17);
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.lang.Object obj23 = fractionFormat22.clone();
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat32);
        java.lang.Object obj34 = numberFormat32.clone();
        java.lang.String str36 = numberFormat32.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat40);
        fractionFormat22.setDenominatorFormat(numberFormat32);
        fractionFormat19.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat49 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat72.getNumeratorFormat();
        fractionFormat71.setDenominatorFormat(numberFormat77);
        java.lang.Object obj79 = numberFormat77.clone();
        fractionFormat60.setNumeratorFormat(numberFormat77);
        java.lang.Object obj81 = numberFormat77.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat77);
        java.text.NumberFormat numberFormat83 = fractionFormat82.getDenominatorFormat();
        java.lang.Object obj85 = numberFormat83.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat83);
        java.text.NumberFormat numberFormat87 = fractionFormat86.getDenominatorFormat();
        java.text.NumberFormat numberFormat88 = fractionFormat86.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = fractionFormat8.format((java.lang.Object) fractionFormat86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "10" + "'", str36, "10");
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (-1L) + "'", obj85, (-1L));
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        fractionFormat25.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        fractionFormat25.setDenominatorFormat(numberFormat38);
        java.text.NumberFormat numberFormat40 = null;
        java.text.NumberFormat numberFormat41 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        fractionFormat42.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        fractionFormat42.setDenominatorFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat55);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat21.formatToCharacterIterator((java.lang.Object) numberFormat55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat4);
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        fractionFormat5.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        fractionFormat5.setDenominatorFormat(numberFormat18);
        fractionFormat0.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction23 = fractionFormat21.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat3.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat39);
        java.lang.Object obj42 = numberFormat39.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.lang.Object obj55 = fractionFormat53.clone();
        java.text.NumberFormat numberFormat56 = fractionFormat53.getNumeratorFormat();
        fractionFormat44.setNumeratorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.lang.Object obj69 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat74 = fractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70, numberFormat74);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.lang.Object obj80 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat81 = fractionFormat76.getNumeratorFormat();
        fractionFormat75.setDenominatorFormat(numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat81);
        java.text.NumberFormat numberFormat84 = null;
        java.text.NumberFormat numberFormat85 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat84, numberFormat85);
        java.text.NumberFormat numberFormat87 = fractionFormat86.getDenominatorFormat();
        java.text.NumberFormat numberFormat88 = fractionFormat86.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator91 = fractionFormat89.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat92 = fractionFormat89.getDenominatorFormat();
        fractionFormat86.setNumeratorFormat(numberFormat92);
        org.apache.commons.math.fraction.FractionFormat fractionFormat94 = new org.apache.commons.math.fraction.FractionFormat(numberFormat92);
        org.apache.commons.math.fraction.FractionFormat fractionFormat95 = new org.apache.commons.math.fraction.FractionFormat(numberFormat92);
        java.text.NumberFormat numberFormat96 = fractionFormat95.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat97 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat96);
        fractionFormat58.setNumeratorFormat(numberFormat96);
        java.lang.Object obj99 = numberFormat96.clone();
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNull(numberFormat87);
        org.junit.Assert.assertNull(numberFormat88);
        org.junit.Assert.assertNotNull(fractionFormat89);
        org.junit.Assert.assertNotNull(attributedCharacterIterator91);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(numberFormat96);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.lang.String str4 = fractionFormat0.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        java.lang.Object obj32 = numberFormat27.clone();
        fractionFormat5.setDenominatorFormat(numberFormat27);
        fractionFormat0.setNumeratorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat36.getDenominatorFormat();
        java.lang.Class<?> wildcardClass39 = numberFormat38.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 / 1" + "'", str4, "-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj9 = numberFormat7.parseObject("-1 / 1");
        java.lang.Object obj11 = numberFormat7.parseObject("100");
        java.lang.Object obj12 = numberFormat7.clone();
        java.lang.Object obj13 = numberFormat7.clone();
        java.lang.Object obj14 = numberFormat7.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20);
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat32);
        java.lang.Object obj34 = numberFormat32.clone();
        java.lang.String str36 = numberFormat32.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat37 = null;
        java.text.NumberFormat numberFormat38 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        fractionFormat39.setNumeratorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat56);
        java.text.NumberFormat numberFormat69 = fractionFormat68.getDenominatorFormat();
        java.lang.Object obj71 = fractionFormat68.parseObject("10 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat68.getDenominatorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat72);
        java.text.NumberFormat numberFormat74 = fractionFormat21.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator75 = numberFormat7.formatToCharacterIterator((java.lang.Object) fractionFormat21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (-1L) + "'", obj9, (-1L));
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "10" + "'", str36, "10");
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat4);
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        fractionFormat5.setNumeratorFormat(numberFormat11);
        java.lang.Object obj13 = numberFormat11.clone();
        java.lang.String str15 = numberFormat11.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat16 = null;
        java.text.NumberFormat numberFormat17 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        fractionFormat18.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat35);
        java.lang.Object obj48 = fractionFormat47.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        fractionFormat47.setDenominatorFormat(numberFormat55);
        fractionFormat2.setNumeratorFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj66 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = null;
        java.text.NumberFormat numberFormat68 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        java.text.NumberFormat numberFormat71 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        fractionFormat69.setNumeratorFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj79 = fractionFormat77.parseObject("0 / 1");
        java.text.NumberFormat numberFormat80 = fractionFormat77.getNumeratorFormat();
        fractionFormat69.setNumeratorFormat(numberFormat80);
        java.lang.Object obj83 = numberFormat80.parseObject("0 / 1");
        fractionFormat60.setNumeratorFormat(numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat80);
        java.lang.Object obj87 = numberFormat55.parseObject("-1 / 1");
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "10" + "'", str15, "10");
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNull(numberFormat70);
        org.junit.Assert.assertNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 0L + "'", obj83, 0L);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (-1L) + "'", obj87, (-1L));
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat25.getNumeratorFormat();
        java.lang.Object obj29 = fractionFormat25.clone();
        java.text.NumberFormat numberFormat30 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        fractionFormat42.setNumeratorFormat(numberFormat53);
        fractionFormat25.setNumeratorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator73 = fractionFormat71.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat74 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator77 = fractionFormat75.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat78 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74, numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat78);
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        fractionFormat58.setDenominatorFormat(numberFormat81);
        java.text.NumberFormat numberFormat83 = null;
        java.text.NumberFormat numberFormat84 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat83, numberFormat84);
        java.text.NumberFormat numberFormat86 = fractionFormat85.getDenominatorFormat();
        java.text.NumberFormat numberFormat87 = fractionFormat85.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator90 = fractionFormat88.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat91 = fractionFormat88.getDenominatorFormat();
        fractionFormat85.setNumeratorFormat(numberFormat91);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator93 = numberFormat81.formatToCharacterIterator((java.lang.Object) numberFormat91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(attributedCharacterIterator73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(attributedCharacterIterator77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNull(numberFormat86);
        org.junit.Assert.assertNull(numberFormat87);
        org.junit.Assert.assertNotNull(fractionFormat88);
        org.junit.Assert.assertNotNull(attributedCharacterIterator90);
        org.junit.Assert.assertNotNull(numberFormat91);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat23.clone();
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        fractionFormat29.setNumeratorFormat(numberFormat36);
        java.lang.Object obj43 = numberFormat36.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36);
        java.text.NumberFormat numberFormat45 = null;
        java.text.NumberFormat numberFormat46 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        fractionFormat47.setNumeratorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.lang.Object obj59 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat55.getNumeratorFormat();
        fractionFormat47.setDenominatorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj65 = fractionFormat63.parseObject("0 / 1");
        java.lang.Object obj67 = fractionFormat63.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat63.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj76 = fractionFormat74.parseObject("0 / 1");
        java.lang.Object obj78 = fractionFormat74.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat74.getNumeratorFormat();
        fractionFormat73.setDenominatorFormat(numberFormat79);
        java.lang.Object obj81 = numberFormat79.clone();
        fractionFormat62.setNumeratorFormat(numberFormat79);
        fractionFormat47.setDenominatorFormat(numberFormat79);
        fractionFormat44.setDenominatorFormat(numberFormat79);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator85 = fractionFormat23.formatToCharacterIterator((java.lang.Object) numberFormat79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        fractionFormat31.setDenominatorFormat(numberFormat37);
        java.lang.Object obj39 = numberFormat37.clone();
        fractionFormat20.setNumeratorFormat(numberFormat37);
        java.lang.Object obj41 = numberFormat37.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat37);
        java.text.NumberFormat numberFormat43 = fractionFormat42.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = null;
        java.text.NumberFormat numberFormat45 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat45);
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        fractionFormat46.setNumeratorFormat(numberFormat52);
        java.lang.Object obj54 = numberFormat52.clone();
        java.lang.String str56 = numberFormat52.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat60);
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat67);
        java.lang.Object obj70 = numberFormat43.parseObject("100 / 1");
        fractionFormat7.setDenominatorFormat(numberFormat43);
        java.lang.StringBuffer stringBuffer72 = null;
        java.text.FieldPosition fieldPosition73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer74 = fractionFormat0.format((java.lang.Object) fractionFormat7, stringBuffer72, fieldPosition73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNull(numberFormat47);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "10" + "'", str56, "10");
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        java.lang.StringBuffer stringBuffer36 = null;
        java.text.FieldPosition fieldPosition37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer38 = fractionFormat12.format((java.lang.Object) numberFormat21, stringBuffer36, fieldPosition37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj9 = numberFormat7.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7);
        java.lang.Object obj11 = fractionFormat10.clone();
        java.text.NumberFormat numberFormat12 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction15 = fractionFormat13.parse("0 / 1");
        java.lang.String str16 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction15);
        java.lang.Class<?> wildcardClass17 = fraction15.getClass();
        java.lang.StringBuffer stringBuffer18 = null;
        java.text.FieldPosition fieldPosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer20 = fractionFormat10.format((java.lang.Object) fraction15, stringBuffer18, fieldPosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10L + "'", obj9, 10L);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0 / 1" + "'", str16, "0 / 1");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat11.getNumeratorFormat();
        java.lang.Object obj25 = numberFormat24.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat32.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        fractionFormat32.setDenominatorFormat(numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction56 = fractionFormat54.parse("0 / 1");
        java.lang.String str57 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction56);
        java.lang.StringBuffer stringBuffer58 = null;
        java.text.FieldPosition fieldPosition59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer60 = fractionFormat53.format(fraction56, stringBuffer58, fieldPosition59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "0 / 1" + "'", str57, "0 / 1");
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat14.setDenominatorFormat(numberFormat20);
        java.lang.Object obj22 = numberFormat20.clone();
        fractionFormat3.setNumeratorFormat(numberFormat20);
        java.lang.Object obj24 = numberFormat20.clone();
        java.lang.Object obj25 = numberFormat20.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction33 = fractionFormat31.parse("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat31.getNumeratorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat58);
        fractionFormat36.setDenominatorFormat(numberFormat42);
        java.lang.Class<?> wildcardClass62 = numberFormat42.getClass();
        java.lang.StringBuffer stringBuffer63 = null;
        java.text.FieldPosition fieldPosition64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer65 = fractionFormat0.format((java.lang.Object) wildcardClass62, stringBuffer63, fieldPosition64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.lang.Object obj10 = numberFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat21);
        fractionFormat0.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.Fraction fraction26 = fractionFormat0.parse("10");
        java.lang.String str27 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction26);
        java.lang.String str28 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction26);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "10 / 1" + "'", str27, "10 / 1");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "10 / 1" + "'", str28, "10 / 1");
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj15 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat26.setNumeratorFormat(numberFormat43);
        java.lang.Object obj47 = numberFormat43.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat43);
        java.text.NumberFormat numberFormat49 = null;
        java.text.NumberFormat numberFormat50 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat51.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.lang.Object obj59 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat55.getNumeratorFormat();
        java.lang.Object obj61 = numberFormat60.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj64 = fractionFormat62.parseObject("0 / 1");
        java.lang.Object obj66 = fractionFormat62.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat62.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat69.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat72);
        fractionFormat51.setNumeratorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.lang.Object obj80 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat81 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj84 = fractionFormat82.parseObject("0 / 1");
        java.text.NumberFormat numberFormat85 = fractionFormat82.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat81, numberFormat85);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj89 = fractionFormat87.parseObject("0 / 1");
        java.lang.Object obj91 = fractionFormat87.parseObject("0 / 1");
        java.text.NumberFormat numberFormat92 = fractionFormat87.getNumeratorFormat();
        fractionFormat86.setDenominatorFormat(numberFormat92);
        java.lang.Object obj94 = numberFormat92.clone();
        fractionFormat51.setDenominatorFormat(numberFormat92);
        java.lang.Object obj96 = numberFormat92.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat97 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat92);
        org.apache.commons.math.fraction.FractionFormat fractionFormat98 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43);
        fractionFormat0.setDenominatorFormat(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(fractionFormat87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.lang.String str4 = fractionFormat0.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.Fraction fraction6 = fractionFormat0.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        fractionFormat19.setNumeratorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat33);
        fractionFormat0.setDenominatorFormat(numberFormat13);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 / 1" + "'", str4, "-1 / 1");
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.lang.Object obj19 = numberFormat18.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat30);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = null;
        java.text.NumberFormat numberFormat35 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = numberFormat44.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat36.setDenominatorFormat(numberFormat44);
        java.lang.Object obj53 = numberFormat44.clone();
        java.text.NumberFormat numberFormat54 = null;
        java.text.NumberFormat numberFormat55 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat55);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat56.getNumeratorFormat();
        java.text.NumberFormat numberFormat59 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat60.getNumeratorFormat();
        java.lang.Object obj66 = numberFormat65.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.lang.Object obj71 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat67.getNumeratorFormat();
        java.text.NumberFormat numberFormat73 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat77);
        fractionFormat56.setNumeratorFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65);
        java.lang.Object obj85 = fractionFormat83.parseObject("100");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator86 = fractionFormat10.formatToCharacterIterator((java.lang.Object) fractionFormat83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNull(numberFormat58);
        org.junit.Assert.assertNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat46);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.lang.Object obj51 = numberFormat49.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat49);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat53.getNumeratorFormat();
        java.lang.Object obj56 = numberFormat55.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(obj56);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getNumeratorFormat();
        java.lang.Object obj23 = fractionFormat11.clone();
        java.lang.Object obj24 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        fractionFormat27.setNumeratorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        fractionFormat27.setDenominatorFormat(numberFormat40);
        java.text.NumberFormat numberFormat42 = null;
        java.text.NumberFormat numberFormat43 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat43);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        fractionFormat44.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat57);
        fractionFormat11.setDenominatorFormat(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        fractionFormat45.setNumeratorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        java.text.NumberFormat numberFormat62 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        fractionFormat67.setNumeratorFormat(numberFormat71);
        fractionFormat45.setNumeratorFormat(numberFormat71);
        fractionFormat32.setNumeratorFormat(numberFormat71);
        java.lang.Object obj80 = numberFormat71.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71);
        java.lang.Class<?> wildcardClass82 = numberFormat71.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        java.text.NumberFormat numberFormat39 = fractionFormat2.getDenominatorFormat();
        java.text.ParsePosition parsePosition41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = fractionFormat2.parseObject("100 / 1", parsePosition41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat39);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.Fraction fraction33 = fractionFormat31.parse("10 / 1");
        java.lang.String str34 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction33);
        java.lang.StringBuffer stringBuffer35 = null;
        java.text.FieldPosition fieldPosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer37 = fractionFormat20.format(fraction33, stringBuffer35, fieldPosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "10 / 1" + "'", str34, "10 / 1");
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat68);
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.lang.Object obj73 = fractionFormat70.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str74 = numberFormat8.format(obj73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        fractionFormat7.setNumeratorFormat(numberFormat24);
        java.lang.Object obj28 = numberFormat24.clone();
        java.lang.Object obj29 = numberFormat24.clone();
        fractionFormat2.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        fractionFormat1.setNumeratorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat24);
        java.lang.Object obj34 = fractionFormat33.clone();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNull(numberFormat35);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.lang.Object obj5 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = fractionFormat2.parseObject("0", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNull(numberFormat6);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        fractionFormat8.setNumeratorFormat(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat43);
        fractionFormat22.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat31);
        org.apache.commons.math.fraction.Fraction fraction49 = fractionFormat47.parse("10");
        java.lang.String str50 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction49);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "10 / 1" + "'", str50, "10 / 1");
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat33);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        java.text.NumberFormat numberFormat37 = null;
        java.text.NumberFormat numberFormat38 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat64.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat67);
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.lang.Object obj75 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat71.getNumeratorFormat();
        java.text.NumberFormat numberFormat77 = fractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator80 = fractionFormat78.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat81 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat81);
        fractionFormat69.setNumeratorFormat(numberFormat77);
        fractionFormat47.setDenominatorFormat(numberFormat77);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = fractionFormat35.format((java.lang.Object) numberFormat77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(attributedCharacterIterator80);
        org.junit.Assert.assertNotNull(numberFormat81);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction13 = fractionFormat10.parse("", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat27);
        fractionFormat0.setNumeratorFormat(numberFormat21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = fractionFormat0.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat46);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        java.text.NumberFormat numberFormat50 = fractionFormat21.getNumeratorFormat();
        java.lang.Object obj51 = numberFormat50.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat8.parse("0 / 1");
        java.lang.String str11 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction10);
        java.lang.String str12 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction10);
        java.lang.String str13 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction10);
        java.lang.Class<?> wildcardClass14 = fraction10.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat6.formatToCharacterIterator((java.lang.Object) wildcardClass14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0 / 1" + "'", str11, "0 / 1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0 / 1" + "'", str12, "0 / 1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0 / 1" + "'", str13, "0 / 1");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        java.text.NumberFormat numberFormat48 = null;
        java.text.NumberFormat numberFormat49 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = numberFormat58.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat50.setDenominatorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58);
        fractionFormat45.setDenominatorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction71 = fractionFormat69.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNull(numberFormat51);
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        java.text.ParsePosition parsePosition24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction25 = fractionFormat22.parse("", parsePosition24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj27 = fractionFormat24.parseObject("10");
        java.text.NumberFormat numberFormat28 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction36 = fractionFormat34.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        fractionFormat34.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        fractionFormat24.setNumeratorFormat(numberFormat48);
        java.text.NumberFormat numberFormat52 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat24.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        fractionFormat7.setNumeratorFormat(numberFormat24);
        java.lang.Object obj28 = numberFormat24.clone();
        java.lang.Object obj29 = numberFormat24.clone();
        fractionFormat2.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        fractionFormat1.setNumeratorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat24);
        java.lang.Object obj40 = numberFormat24.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat41.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = numberFormat24.format((java.lang.Object) numberFormat43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        java.lang.Object obj23 = fractionFormat21.parseObject("-1 / 1");
        java.lang.StringBuffer stringBuffer25 = null;
        java.text.FieldPosition fieldPosition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer27 = fractionFormat21.format((java.lang.Object) "100", stringBuffer25, fieldPosition26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.lang.Object obj15 = fractionFormat13.parseObject("-1 / 1");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction17 = fractionFormat13.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj15);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        java.text.NumberFormat numberFormat48 = null;
        java.text.NumberFormat numberFormat49 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = numberFormat58.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat50.setDenominatorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58);
        fractionFormat45.setDenominatorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = fractionFormat70.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat73 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        java.text.NumberFormat numberFormat79 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat79);
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction83 = fractionFormat80.parse("10");
        org.apache.commons.math.fraction.Fraction fraction85 = fractionFormat80.parse("10");
        java.lang.StringBuffer stringBuffer86 = null;
        java.text.FieldPosition fieldPosition87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer88 = fractionFormat69.format(fraction85, stringBuffer86, fieldPosition87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNull(numberFormat51);
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertNotNull(fraction85);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        fractionFormat22.setNumeratorFormat(numberFormat39);
        fractionFormat7.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        fractionFormat2.setNumeratorFormat(numberFormat39);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat2.parse("0");
        java.lang.Object obj48 = fractionFormat2.clone();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat2.parse("0 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        fractionFormat19.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat32);
        java.text.ParsePosition parsePosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction37 = fractionFormat34.parse("0", parsePosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3);
        java.lang.Object obj10 = fractionFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat31);
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat41);
        fractionFormat32.setDenominatorFormat(numberFormat41);
        fractionFormat9.setNumeratorFormat(numberFormat41);
        java.text.ParsePosition parsePosition46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat9.parse("10 / 1", parsePosition46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        java.lang.Object obj47 = fractionFormat44.parseObject("10 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str53 = numberFormat48.format((java.lang.Object) numberFormat52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getNumeratorFormat();
        java.lang.Object obj23 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat24 = fractionFormat11.getNumeratorFormat();
        java.text.ParsePosition parsePosition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = fractionFormat11.parseObject("", parsePosition26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        fractionFormat15.setNumeratorFormat(numberFormat29);
        fractionFormat0.setDenominatorFormat(numberFormat29);
        java.lang.Object obj33 = numberFormat29.clone();
        java.text.NumberFormat numberFormat34 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat34);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction37 = fractionFormat35.parse("0 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        org.apache.commons.math.fraction.Fraction fraction26 = fractionFormat24.parse("10 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat27.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        fractionFormat27.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.Fraction fraction48 = fractionFormat27.parse("100");
        java.lang.StringBuffer stringBuffer49 = null;
        java.text.FieldPosition fieldPosition50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer51 = fractionFormat24.format(fraction48, stringBuffer49, fieldPosition50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fraction48);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        fractionFormat58.setDenominatorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat64);
        fractionFormat39.setNumeratorFormat(numberFormat46);
        fractionFormat17.setNumeratorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction71 = fractionFormat69.parse("0 / 1");
        java.lang.String str72 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction71);
        java.lang.String str73 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction71);
        java.lang.String str74 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction71);
        java.lang.String str75 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction71);
        java.lang.String str76 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction71);
        java.lang.String str77 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction71);
        java.lang.String str78 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction71);
        java.lang.StringBuffer stringBuffer79 = null;
        java.text.FieldPosition fieldPosition80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer81 = fractionFormat17.format(fraction71, stringBuffer79, fieldPosition80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "0 / 1" + "'", str72, "0 / 1");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "0 / 1" + "'", str73, "0 / 1");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "0 / 1" + "'", str74, "0 / 1");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "0 / 1" + "'", str75, "0 / 1");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "0 / 1" + "'", str76, "0 / 1");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "0 / 1" + "'", str77, "0 / 1");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "0 / 1" + "'", str78, "0 / 1");
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj27 = fractionFormat24.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        fractionFormat39.setNumeratorFormat(numberFormat43);
        org.apache.commons.math.fraction.Fraction fraction51 = fractionFormat39.parse("0 / 1");
        java.lang.String str52 = fractionFormat24.format((java.lang.Object) fraction51);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "0 / 1" + "'", str52, "0 / 1");
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction9 = fractionFormat7.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat12.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat26);
        java.text.ParsePosition parsePosition31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = fractionFormat29.parseObject("hi!", parsePosition31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction54 = fractionFormat52.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        fractionFormat52.setDenominatorFormat(numberFormat64);
        java.text.NumberFormat numberFormat66 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat66);
        java.lang.Class<?> wildcardClass68 = numberFormat51.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = numberFormat45.format((java.lang.Object) numberFormat51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.lang.Object obj10 = fractionFormat8.clone();
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = null;
        java.text.NumberFormat numberFormat13 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = numberFormat22.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat14.setDenominatorFormat(numberFormat22);
        java.lang.Object obj31 = numberFormat22.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat32.parse("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        java.lang.Object obj37 = numberFormat35.parseObject("10 / 1");
        java.lang.String str38 = numberFormat22.format(obj37);
        fractionFormat8.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        fractionFormat51.setDenominatorFormat(numberFormat57);
        java.lang.Object obj59 = numberFormat57.clone();
        fractionFormat40.setNumeratorFormat(numberFormat57);
        java.lang.Object obj61 = numberFormat57.clone();
        java.lang.Object obj62 = numberFormat57.clone();
        fractionFormat8.setDenominatorFormat(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 10L + "'", obj37, 10L);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "10" + "'", str38, "10");
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat46);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.lang.Object obj51 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.lang.Object obj53 = numberFormat28.clone();
        java.text.NumberFormat numberFormat54 = null;
        java.text.NumberFormat numberFormat55 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat55);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        fractionFormat56.setNumeratorFormat(numberFormat62);
        java.lang.Object obj64 = numberFormat62.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat62);
        java.text.ParsePosition parsePosition67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = fractionFormat65.parseObject("100 / 1", parsePosition67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat2.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        java.lang.Object obj29 = numberFormat26.parseObject("-1 / 1");
        java.lang.Object obj30 = numberFormat26.clone();
        fractionFormat2.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        java.text.NumberFormat numberFormat38 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat50);
        java.text.NumberFormat numberFormat53 = null;
        java.text.NumberFormat numberFormat54 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        fractionFormat55.setNumeratorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat61);
        fractionFormat2.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        java.lang.Class<?> wildcardClass69 = fractionFormat68.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (-1L) + "'", obj29, (-1L));
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat4);
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        fractionFormat5.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        fractionFormat5.setDenominatorFormat(numberFormat18);
        fractionFormat0.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat26.setNumeratorFormat(numberFormat43);
        java.lang.Object obj47 = numberFormat43.clone();
        java.lang.Object obj48 = numberFormat43.clone();
        fractionFormat21.setDenominatorFormat(numberFormat43);
        java.lang.Object obj50 = numberFormat43.clone();
        fractionFormat0.setNumeratorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = null;
        java.text.NumberFormat numberFormat60 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat60);
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        java.text.NumberFormat numberFormat63 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat64.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = fractionFormat64.getDenominatorFormat();
        fractionFormat61.setNumeratorFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat69.getNumeratorFormat();
        fractionFormat61.setNumeratorFormat(numberFormat72);
        java.lang.Object obj75 = numberFormat72.parseObject("0 / 1");
        fractionFormat52.setNumeratorFormat(numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat78);
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        java.text.NumberFormat numberFormat81 = fractionFormat79.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat81);
        fractionFormat0.setDenominatorFormat(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNull(numberFormat62);
        org.junit.Assert.assertNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 0L + "'", obj75, 0L);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        fractionFormat12.setNumeratorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        fractionFormat12.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.lang.String str35 = numberFormat29.format((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        fractionFormat38.setNumeratorFormat(numberFormat44);
        java.text.NumberFormat numberFormat46 = null;
        java.text.NumberFormat numberFormat47 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        fractionFormat48.setNumeratorFormat(numberFormat56);
        fractionFormat38.setDenominatorFormat(numberFormat56);
        java.text.NumberFormat numberFormat64 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        java.text.NumberFormat numberFormat69 = null;
        java.text.NumberFormat numberFormat70 = null;
        java.text.NumberFormat numberFormat71 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70, numberFormat71);
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        java.text.NumberFormat numberFormat74 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator77 = fractionFormat75.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat78 = fractionFormat75.getDenominatorFormat();
        fractionFormat72.setNumeratorFormat(numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj82 = fractionFormat80.parseObject("0 / 1");
        java.text.NumberFormat numberFormat83 = fractionFormat80.getNumeratorFormat();
        fractionFormat72.setNumeratorFormat(numberFormat83);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat83);
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat83);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator87 = numberFormat8.formatToCharacterIterator((java.lang.Object) fractionFormat86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "100" + "'", str35, "100");
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNull(numberFormat73);
        org.junit.Assert.assertNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(attributedCharacterIterator77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(numberFormat83);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction3 = fractionFormat0.parse("10");
        java.lang.String str4 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction3);
        java.lang.String str5 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction3);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "10 / 1" + "'", str4, "10 / 1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "10 / 1" + "'", str5, "10 / 1");
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat30);
        java.lang.Object obj32 = fractionFormat2.clone();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = numberFormat34.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat26.setDenominatorFormat(numberFormat34);
        java.lang.Object obj43 = numberFormat34.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        java.lang.Object obj50 = numberFormat49.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat49);
        java.lang.Class<?> wildcardClass65 = numberFormat49.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator66 = numberFormat23.formatToCharacterIterator((java.lang.Object) numberFormat49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        fractionFormat2.setDenominatorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction61 = fractionFormat59.parse("0 / 1");
        java.lang.String str62 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction61);
        java.lang.String str63 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction61);
        java.lang.String str64 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction61);
        java.lang.String str65 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction61);
        java.lang.String str66 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction61);
        java.lang.String str67 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction61);
        java.lang.String str68 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction61);
        java.lang.String str69 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction61);
        java.lang.StringBuffer stringBuffer70 = null;
        java.text.FieldPosition fieldPosition71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer72 = fractionFormat58.format(fraction61, stringBuffer70, fieldPosition71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "0 / 1" + "'", str62, "0 / 1");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "0 / 1" + "'", str63, "0 / 1");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "0 / 1" + "'", str64, "0 / 1");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "0 / 1" + "'", str65, "0 / 1");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "0 / 1" + "'", str66, "0 / 1");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "0 / 1" + "'", str67, "0 / 1");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "0 / 1" + "'", str68, "0 / 1");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "0 / 1" + "'", str69, "0 / 1");
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        java.lang.Object obj29 = numberFormat22.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = numberFormat22.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = numberFormat31.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat23.setDenominatorFormat(numberFormat31);
        java.lang.Object obj40 = numberFormat31.clone();
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.lang.Object obj53 = numberFormat52.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat64);
        fractionFormat43.setNumeratorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        org.apache.commons.math.fraction.Fraction fraction72 = fractionFormat70.parse("100");
        java.lang.Object obj73 = fractionFormat70.clone();
        java.text.NumberFormat numberFormat74 = fractionFormat70.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction13 = fractionFormat10.parse("10");
        org.apache.commons.math.fraction.Fraction fraction15 = fractionFormat10.parse("10");
        java.lang.String str16 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction15);
        java.lang.String str17 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction15);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10 / 1" + "'", str16, "10 / 1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10 / 1" + "'", str17, "10 / 1");
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.text.NumberFormat numberFormat21 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = null;
        java.text.NumberFormat numberFormat23 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        fractionFormat24.setNumeratorFormat(numberFormat30);
        java.lang.Object obj32 = numberFormat30.clone();
        java.lang.String str34 = numberFormat30.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat38);
        java.text.NumberFormat numberFormat45 = null;
        java.text.NumberFormat numberFormat46 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        java.lang.Object obj57 = numberFormat56.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat68);
        fractionFormat47.setNumeratorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj80 = fractionFormat78.parseObject("0 / 1");
        java.text.NumberFormat numberFormat81 = fractionFormat78.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj85 = fractionFormat83.parseObject("0 / 1");
        java.lang.Object obj87 = fractionFormat83.parseObject("0 / 1");
        java.text.NumberFormat numberFormat88 = fractionFormat83.getNumeratorFormat();
        fractionFormat82.setDenominatorFormat(numberFormat88);
        java.lang.Object obj90 = numberFormat88.clone();
        fractionFormat47.setDenominatorFormat(numberFormat88);
        fractionFormat44.setDenominatorFormat(numberFormat88);
        fractionFormat0.setNumeratorFormat(numberFormat88);
        java.text.ParsePosition parsePosition95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = fractionFormat0.parseObject("0 / 1", parsePosition95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "10" + "'", str34, "10");
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(obj90);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat30);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        fractionFormat32.setNumeratorFormat(numberFormat40);
        fractionFormat10.setDenominatorFormat(numberFormat40);
        java.text.NumberFormat numberFormat48 = fractionFormat10.getNumeratorFormat();
        java.text.ParsePosition parsePosition50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = fractionFormat10.parseObject("0", parsePosition50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat48);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat9);
        java.text.ParsePosition parsePosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat11.parse("10 / 1", parsePosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        java.lang.Object obj29 = numberFormat22.clone();
        java.lang.Object obj31 = numberFormat22.parseObject("-1 / 1");
        java.lang.Class<?> wildcardClass32 = numberFormat22.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (-1L) + "'", obj31, (-1L));
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        fractionFormat58.setDenominatorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat64);
        fractionFormat39.setNumeratorFormat(numberFormat46);
        fractionFormat17.setNumeratorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        org.apache.commons.math.fraction.Fraction fraction73 = fractionFormat69.parse("100");
        java.lang.StringBuffer stringBuffer74 = null;
        java.text.FieldPosition fieldPosition75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer76 = fractionFormat17.format(fraction73, stringBuffer74, fieldPosition75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(fraction73);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        fractionFormat22.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        java.lang.Object obj57 = numberFormat56.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat68);
        java.text.NumberFormat numberFormat71 = fractionFormat70.getNumeratorFormat();
        fractionFormat50.setDenominatorFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator80 = fractionFormat78.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat81 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77);
        java.text.NumberFormat numberFormat84 = fractionFormat83.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat84);
        java.lang.Object obj86 = numberFormat17.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(attributedCharacterIterator80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(obj86);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj9 = numberFormat7.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7);
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = fractionFormat10.parseObject("100 / 1", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10L + "'", obj9, 10L);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.Fraction fraction23 = fractionFormat11.parse("0 / 1");
        java.lang.String str24 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction23);
        java.lang.String str25 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction23);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "0 / 1" + "'", str24, "0 / 1");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0 / 1" + "'", str25, "0 / 1");
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        fractionFormat32.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat38);
        java.lang.Object obj41 = numberFormat38.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat43.clone();
        org.apache.commons.math.fraction.Fraction fraction52 = fractionFormat43.parse("0 / 1");
        java.lang.String str53 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction52);
        java.lang.String str54 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction52);
        java.lang.Class<?> wildcardClass55 = fraction52.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = numberFormat38.format((java.lang.Object) wildcardClass55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "0 / 1" + "'", str53, "0 / 1");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "0 / 1" + "'", str54, "0 / 1");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat43);
        fractionFormat22.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj80 = fractionFormat78.parseObject("0 / 1");
        java.text.NumberFormat numberFormat81 = fractionFormat78.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat81);
        java.lang.Class<?> wildcardClass85 = numberFormat81.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getNumeratorFormat();
        java.text.ParsePosition parsePosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1", parsePosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat9);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.ParsePosition parsePosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = fractionFormat8.parseObject("0 / 1", parsePosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat2.parse("0 / 1");
        java.text.ParsePosition parsePosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = fractionFormat2.parseObject("-1 / 1", parsePosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj27 = fractionFormat24.parseObject("10");
        java.text.NumberFormat numberFormat28 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getNumeratorFormat();
        java.text.ParsePosition parsePosition32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction33 = fractionFormat29.parse("100 / 1", parsePosition32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat30);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        java.lang.Object obj19 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat36);
        fractionFormat0.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        fractionFormat55.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat61);
        java.lang.Object obj64 = numberFormat61.clone();
        fractionFormat0.setNumeratorFormat(numberFormat61);
        java.lang.Object obj67 = numberFormat61.parseObject("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.lang.Object obj72 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat68.getNumeratorFormat();
        java.text.NumberFormat numberFormat74 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat74);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator82 = fractionFormat80.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat83 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator86 = fractionFormat84.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat87 = fractionFormat84.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat83, numberFormat87);
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat79, numberFormat83);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator90 = numberFormat74.formatToCharacterIterator((java.lang.Object) numberFormat83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(attributedCharacterIterator82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(attributedCharacterIterator86);
        org.junit.Assert.assertNotNull(numberFormat87);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat38 = fractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat39 = null;
        java.text.NumberFormat numberFormat40 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat41.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.lang.Object obj51 = numberFormat50.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat62);
        fractionFormat41.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.Fraction fraction67 = fractionFormat41.parse("10");
        java.lang.String str68 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction67);
        java.lang.String str69 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction67);
        java.lang.String str70 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction67);
        java.lang.StringBuffer stringBuffer71 = null;
        java.text.FieldPosition fieldPosition72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer73 = fractionFormat8.format(fraction67, stringBuffer71, fieldPosition72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "10 / 1" + "'", str68, "10 / 1");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "10 / 1" + "'", str69, "10 / 1");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "10 / 1" + "'", str70, "10 / 1");
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat42.getDenominatorFormat();
        java.lang.StringBuffer stringBuffer45 = null;
        java.text.FieldPosition fieldPosition46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer47 = fractionFormat41.format((java.lang.Object) numberFormat44, stringBuffer45, fieldPosition46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat11.getDenominatorFormat();
        java.text.ParsePosition parsePosition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = fractionFormat11.parseObject("-1 / 1", parsePosition26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat4);
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        fractionFormat5.setNumeratorFormat(numberFormat11);
        java.lang.Object obj13 = numberFormat11.clone();
        java.lang.String str15 = numberFormat11.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat16 = null;
        java.text.NumberFormat numberFormat17 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        fractionFormat18.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat35);
        java.lang.Object obj48 = fractionFormat47.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        fractionFormat47.setDenominatorFormat(numberFormat55);
        fractionFormat2.setNumeratorFormat(numberFormat55);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction61 = fractionFormat2.parse("10 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "10" + "'", str15, "10");
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("-1 / 1");
        java.lang.Object obj23 = fractionFormat18.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = numberFormat14.format((java.lang.Object) fractionFormat18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        fractionFormat22.setNumeratorFormat(numberFormat39);
        java.text.NumberFormat numberFormat43 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        fractionFormat22.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat21);
        java.lang.Class<?> wildcardClass55 = numberFormat21.getClass();
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat4);
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        fractionFormat5.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        fractionFormat5.setDenominatorFormat(numberFormat18);
        fractionFormat0.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat26.setNumeratorFormat(numberFormat43);
        java.lang.Object obj47 = numberFormat43.clone();
        java.lang.Object obj48 = numberFormat43.clone();
        fractionFormat21.setDenominatorFormat(numberFormat43);
        java.lang.Object obj50 = numberFormat43.clone();
        fractionFormat0.setNumeratorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat70);
        java.text.NumberFormat numberFormat72 = fractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat72);
        java.text.NumberFormat numberFormat74 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj77 = fractionFormat75.parseObject("0 / 1");
        java.lang.Object obj79 = fractionFormat75.parseObject("0 / 1");
        java.text.NumberFormat numberFormat80 = fractionFormat75.getNumeratorFormat();
        java.text.NumberFormat numberFormat81 = fractionFormat75.getNumeratorFormat();
        java.text.NumberFormat numberFormat82 = fractionFormat75.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74, numberFormat82);
        fractionFormat73.setDenominatorFormat(numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat82);
        java.lang.Object obj86 = numberFormat82.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat82);
        org.apache.commons.math.fraction.Fraction fraction89 = fractionFormat87.parse("0");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(fraction89);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat43);
        fractionFormat22.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj80 = fractionFormat78.parseObject("0 / 1");
        java.text.NumberFormat numberFormat81 = fractionFormat78.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat81);
        java.text.NumberFormat numberFormat85 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat84.setNumeratorFormat(numberFormat85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: numerator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat12);
        java.text.NumberFormat numberFormat14 = null;
        java.text.NumberFormat numberFormat15 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = numberFormat24.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat16.setDenominatorFormat(numberFormat24);
        java.lang.Object obj33 = numberFormat24.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction36 = fractionFormat34.parse("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat34.getNumeratorFormat();
        java.lang.Object obj39 = numberFormat37.parseObject("10 / 1");
        java.lang.String str40 = numberFormat24.format(obj39);
        java.lang.Object obj42 = numberFormat24.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10L + "'", obj39, 10L);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "10" + "'", str40, "10");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10L + "'", obj42, 10L);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        fractionFormat27.setDenominatorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat55);
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        java.lang.Object obj60 = numberFormat58.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat58);
        fractionFormat8.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat64 = fractionFormat8.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (-1L) + "'", obj60, (-1L));
        org.junit.Assert.assertNotNull(numberFormat64);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat18);
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat29);
        java.text.NumberFormat numberFormat35 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat34.setDenominatorFormat(numberFormat35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: denominator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        fractionFormat27.setDenominatorFormat(numberFormat31);
        java.lang.Class<?> wildcardClass33 = numberFormat31.getClass();
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = null;
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.lang.Object obj26 = fractionFormat25.clone();
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        fractionFormat29.setNumeratorFormat(numberFormat35);
        java.lang.Object obj37 = numberFormat35.clone();
        java.lang.String str39 = numberFormat35.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat43);
        fractionFormat25.setDenominatorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat22);
        java.lang.Object obj55 = numberFormat19.parseObject("100");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "10" + "'", str39, "10");
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = null;
        java.text.NumberFormat numberFormat27 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        fractionFormat28.setNumeratorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        java.text.NumberFormat numberFormat53 = null;
        java.text.NumberFormat numberFormat54 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat54);
        java.lang.Object obj56 = fractionFormat55.clone();
        java.text.NumberFormat numberFormat57 = null;
        java.text.NumberFormat numberFormat58 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        java.text.NumberFormat numberFormat61 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = fractionFormat62.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat65 = fractionFormat62.getDenominatorFormat();
        fractionFormat59.setNumeratorFormat(numberFormat65);
        java.lang.Object obj67 = numberFormat65.clone();
        java.lang.String str69 = numberFormat65.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = fractionFormat70.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat73 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat73);
        fractionFormat55.setDenominatorFormat(numberFormat65);
        fractionFormat52.setDenominatorFormat(numberFormat65);
        fractionFormat28.setDenominatorFormat(numberFormat65);
        fractionFormat24.setNumeratorFormat(numberFormat65);
        java.lang.Object obj84 = numberFormat65.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNull(numberFormat60);
        org.junit.Assert.assertNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "10" + "'", str69, "10");
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        java.lang.Object obj29 = numberFormat22.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = numberFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        fractionFormat30.setDenominatorFormat(numberFormat37);
        java.text.NumberFormat numberFormat43 = null;
        java.text.NumberFormat numberFormat44 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat45.getNumeratorFormat();
        java.lang.Object obj47 = fractionFormat45.clone();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = numberFormat37.format((java.lang.Object) wildcardClass48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) 1.0d);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15);
        fractionFormat6.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.lang.Object obj15 = fractionFormat13.parseObject("-1 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat39);
        java.text.NumberFormat numberFormat42 = null;
        java.text.NumberFormat numberFormat43 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat43);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        fractionFormat44.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat56);
        java.text.ParsePosition parsePosition59 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction60 = fractionFormat57.parse("0 / 1", parsePosition59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat11.getDenominatorFormat();
        java.text.ParsePosition parsePosition25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction26 = fractionFormat11.parse("", parsePosition25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = null;
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.lang.Object obj26 = fractionFormat25.clone();
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        fractionFormat29.setNumeratorFormat(numberFormat35);
        java.lang.Object obj37 = numberFormat35.clone();
        java.lang.String str39 = numberFormat35.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat43);
        fractionFormat25.setDenominatorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat22);
        java.text.NumberFormat numberFormat54 = null;
        java.text.NumberFormat numberFormat55 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat55);
        java.lang.Object obj57 = fractionFormat56.clone();
        java.lang.Object obj58 = fractionFormat56.clone();
        java.text.NumberFormat numberFormat59 = fractionFormat56.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = null;
        java.text.NumberFormat numberFormat61 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat61);
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat62.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = fractionFormat70.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat73 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat73);
        fractionFormat62.setNumeratorFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator82 = fractionFormat80.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat83 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator86 = fractionFormat84.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat87 = fractionFormat84.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat83, numberFormat87);
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat79, numberFormat83);
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat79);
        fractionFormat56.setDenominatorFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69);
        fractionFormat53.setDenominatorFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat94 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "10" + "'", str39, "10");
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNull(numberFormat59);
        org.junit.Assert.assertNull(numberFormat63);
        org.junit.Assert.assertNull(numberFormat64);
        org.junit.Assert.assertNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(attributedCharacterIterator82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(attributedCharacterIterator86);
        org.junit.Assert.assertNotNull(numberFormat87);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        fractionFormat31.setDenominatorFormat(numberFormat37);
        java.lang.Object obj39 = numberFormat37.clone();
        fractionFormat20.setNumeratorFormat(numberFormat37);
        fractionFormat0.setNumeratorFormat(numberFormat37);
        java.text.NumberFormat numberFormat42 = null;
        java.text.NumberFormat numberFormat43 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat43);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = numberFormat52.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat44.setDenominatorFormat(numberFormat52);
        java.lang.Object obj61 = numberFormat52.clone();
        java.text.NumberFormat numberFormat62 = null;
        java.text.NumberFormat numberFormat63 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        java.text.NumberFormat numberFormat66 = fractionFormat64.getNumeratorFormat();
        java.text.NumberFormat numberFormat67 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.lang.Object obj72 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat68.getNumeratorFormat();
        java.lang.Object obj74 = numberFormat73.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj77 = fractionFormat75.parseObject("0 / 1");
        java.lang.Object obj79 = fractionFormat75.parseObject("0 / 1");
        java.text.NumberFormat numberFormat80 = fractionFormat75.getNumeratorFormat();
        java.text.NumberFormat numberFormat81 = fractionFormat75.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator84 = fractionFormat82.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat85 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat81, numberFormat85);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat85);
        fractionFormat64.setNumeratorFormat(numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat73);
        fractionFormat0.setNumeratorFormat(numberFormat52);
        java.text.ParsePosition parsePosition92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj93 = fractionFormat0.parseObject("100 / 1", parsePosition92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNull(numberFormat65);
        org.junit.Assert.assertNull(numberFormat66);
        org.junit.Assert.assertNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(attributedCharacterIterator84);
        org.junit.Assert.assertNotNull(numberFormat85);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat4);
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        fractionFormat5.setNumeratorFormat(numberFormat11);
        java.lang.Object obj13 = numberFormat11.clone();
        java.lang.String str15 = numberFormat11.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat16 = null;
        java.text.NumberFormat numberFormat17 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        fractionFormat18.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat35);
        java.lang.Object obj48 = fractionFormat47.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        fractionFormat47.setDenominatorFormat(numberFormat55);
        fractionFormat2.setNumeratorFormat(numberFormat55);
        java.text.NumberFormat numberFormat60 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat61 = fractionFormat2.getDenominatorFormat();
        java.text.ParsePosition parsePosition63 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction64 = fractionFormat2.parse("", parsePosition63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "10" + "'", str15, "10");
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNull(numberFormat60);
        org.junit.Assert.assertNull(numberFormat61);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = null;
        java.text.NumberFormat numberFormat27 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = numberFormat36.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat28.setDenominatorFormat(numberFormat36);
        java.lang.Object obj45 = numberFormat36.clone();
        java.text.NumberFormat numberFormat46 = null;
        java.text.NumberFormat numberFormat47 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        java.lang.Object obj58 = numberFormat57.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat69);
        fractionFormat48.setNumeratorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat57);
        java.text.NumberFormat numberFormat74 = fractionFormat73.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer75 = null;
        java.text.FieldPosition fieldPosition76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer77 = fractionFormat0.format((java.lang.Object) numberFormat74, stringBuffer75, fieldPosition76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNull(numberFormat50);
        org.junit.Assert.assertNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat74);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat25.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        fractionFormat25.setDenominatorFormat(numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat25.getNumeratorFormat();
        fractionFormat24.setNumeratorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat24.getDenominatorFormat();
        java.text.ParsePosition parsePosition43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = fractionFormat24.parseObject("", parsePosition43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.lang.Object obj13 = fractionFormat12.clone();
        java.text.NumberFormat numberFormat14 = null;
        java.text.NumberFormat numberFormat15 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        fractionFormat16.setNumeratorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        java.lang.String str26 = numberFormat22.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat30);
        fractionFormat12.setDenominatorFormat(numberFormat22);
        fractionFormat9.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat39 = fractionFormat9.getNumeratorFormat();
        java.lang.Object obj41 = numberFormat39.parseObject("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        java.text.NumberFormat numberFormat52 = null;
        java.text.NumberFormat numberFormat53 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat53);
        java.lang.Object obj55 = fractionFormat54.clone();
        java.text.NumberFormat numberFormat56 = null;
        java.text.NumberFormat numberFormat57 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        fractionFormat58.setNumeratorFormat(numberFormat64);
        java.lang.Object obj66 = numberFormat64.clone();
        java.lang.String str68 = numberFormat64.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat69.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = fractionFormat73.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat76 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat72);
        fractionFormat54.setDenominatorFormat(numberFormat64);
        fractionFormat51.setDenominatorFormat(numberFormat64);
        java.text.NumberFormat numberFormat81 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat81);
        java.text.NumberFormat numberFormat84 = fractionFormat83.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "10" + "'", str26, "10");
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNull(numberFormat59);
        org.junit.Assert.assertNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "10" + "'", str68, "10");
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNull(numberFormat84);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat23);
        fractionFormat0.setNumeratorFormat(numberFormat23);
        java.text.NumberFormat numberFormat26 = fractionFormat0.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat26);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getNumeratorFormat();
        java.lang.Class<?> wildcardClass24 = fractionFormat22.getClass();
        java.lang.StringBuffer stringBuffer25 = null;
        java.text.FieldPosition fieldPosition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer27 = fractionFormat2.format((java.lang.Object) fractionFormat22, stringBuffer25, fieldPosition26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.lang.Object obj14 = numberFormat3.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat8 = fractionFormat2.getNumeratorFormat();
        java.lang.Class<?> wildcardClass9 = fractionFormat2.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat46);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        java.text.NumberFormat numberFormat50 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        java.text.ParsePosition parsePosition54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = fractionFormat51.parseObject("100 / 1", parsePosition54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat38 = fractionFormat8.getNumeratorFormat();
        java.lang.Object obj40 = numberFormat38.parseObject("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.lang.Object obj46 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat42.getNumeratorFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        java.text.NumberFormat numberFormat51 = null;
        java.text.NumberFormat numberFormat52 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat52);
        java.lang.Object obj54 = fractionFormat53.clone();
        java.text.NumberFormat numberFormat55 = null;
        java.text.NumberFormat numberFormat56 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat56);
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        java.text.NumberFormat numberFormat59 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        fractionFormat57.setNumeratorFormat(numberFormat63);
        java.lang.Object obj65 = numberFormat63.clone();
        java.lang.String str67 = numberFormat63.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat71);
        fractionFormat53.setDenominatorFormat(numberFormat63);
        fractionFormat50.setDenominatorFormat(numberFormat63);
        java.text.NumberFormat numberFormat80 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj84 = fractionFormat82.parseObject("0 / 1");
        java.text.NumberFormat numberFormat85 = fractionFormat82.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator88 = fractionFormat86.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat89 = fractionFormat86.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator92 = fractionFormat90.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat93 = fractionFormat90.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat94 = new org.apache.commons.math.fraction.FractionFormat(numberFormat89, numberFormat93);
        org.apache.commons.math.fraction.FractionFormat fractionFormat95 = new org.apache.commons.math.fraction.FractionFormat(numberFormat85, numberFormat89);
        java.lang.Object obj97 = fractionFormat95.parseObject("-1 / 1");
        java.text.NumberFormat numberFormat98 = fractionFormat95.getNumeratorFormat();
        fractionFormat81.setNumeratorFormat(numberFormat98);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNull(numberFormat58);
        org.junit.Assert.assertNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "10" + "'", str67, "10");
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(fractionFormat86);
        org.junit.Assert.assertNotNull(attributedCharacterIterator88);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(fractionFormat90);
        org.junit.Assert.assertNotNull(attributedCharacterIterator92);
        org.junit.Assert.assertNotNull(numberFormat93);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(numberFormat98);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat5.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        fractionFormat5.setDenominatorFormat(numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat19);
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat29);
        java.lang.Object obj31 = numberFormat29.clone();
        java.lang.String str33 = numberFormat29.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat34 = null;
        java.text.NumberFormat numberFormat35 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat36.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        fractionFormat36.setNumeratorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat53);
        fractionFormat20.setNumeratorFormat(numberFormat29);
        java.text.NumberFormat numberFormat67 = fractionFormat20.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "10" + "'", str33, "10");
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat67);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat28 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat2.setDenominatorFormat(numberFormat29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: denominator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.lang.Object obj18 = fractionFormat15.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat46);
        java.lang.Object obj48 = numberFormat46.clone();
        fractionFormat29.setNumeratorFormat(numberFormat46);
        java.lang.Object obj50 = numberFormat46.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat46);
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction55 = fractionFormat53.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        fractionFormat53.setDenominatorFormat(numberFormat65);
        java.text.NumberFormat numberFormat67 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat72.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator81 = fractionFormat79.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat82 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78, numberFormat82);
        fractionFormat68.setNumeratorFormat(numberFormat82);
        fractionFormat53.setDenominatorFormat(numberFormat82);
        fractionFormat51.setNumeratorFormat(numberFormat82);
        java.text.NumberFormat numberFormat87 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat87);
        fractionFormat15.setDenominatorFormat(numberFormat87);
        fractionFormat10.setDenominatorFormat(numberFormat87);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(numberFormat87);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        fractionFormat7.setNumeratorFormat(numberFormat14);
        java.text.NumberFormat numberFormat18 = fractionFormat7.getDenominatorFormat();
        java.lang.Object obj19 = fractionFormat7.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(obj19);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.lang.Object obj4 = fractionFormat3.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        java.lang.Object obj15 = numberFormat13.clone();
        java.lang.String str17 = numberFormat13.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat21);
        fractionFormat3.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat13);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat40);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction45 = fractionFormat43.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10" + "'", str17, "10");
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        fractionFormat43.setNumeratorFormat(numberFormat57);
        fractionFormat28.setDenominatorFormat(numberFormat57);
        java.lang.Object obj61 = numberFormat57.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat57);
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.lang.Object obj68 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat64.getNumeratorFormat();
        java.text.NumberFormat numberFormat70 = fractionFormat64.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str71 = numberFormat63.format((java.lang.Object) fractionFormat64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat43);
        fractionFormat22.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj80 = fractionFormat78.parseObject("0 / 1");
        java.text.NumberFormat numberFormat81 = fractionFormat78.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat81);
        org.apache.commons.math.fraction.Fraction fraction86 = fractionFormat84.parse("0 / 1");
        java.text.NumberFormat numberFormat87 = fractionFormat84.getDenominatorFormat();
        java.lang.Object obj88 = fractionFormat84.clone();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fraction86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        java.lang.Object obj35 = numberFormat9.parseObject("0");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0L + "'", obj35, 0L);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        fractionFormat27.setDenominatorFormat(numberFormat31);
        java.lang.Object obj33 = numberFormat31.clone();
        java.lang.Class<?> wildcardClass34 = numberFormat31.getClass();
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        fractionFormat34.setNumeratorFormat(numberFormat45);
        fractionFormat11.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45);
        java.lang.Object obj51 = fractionFormat49.parseObject("-1 / 1");
        java.lang.Object obj52 = fractionFormat49.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat26);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        fractionFormat28.setNumeratorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat62);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = fractionFormat70.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat73 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat73);
        java.text.AttributedCharacterIterator attributedCharacterIterator82 = numberFormat73.formatToCharacterIterator((java.lang.Object) 100L);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat73);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str84 = numberFormat6.format((java.lang.Object) fractionFormat83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(attributedCharacterIterator82);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        fractionFormat2.setDenominatorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj65 = fractionFormat63.parseObject("0 / 1");
        java.lang.Object obj67 = fractionFormat63.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat63.getNumeratorFormat();
        java.text.NumberFormat numberFormat69 = fractionFormat63.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = fractionFormat70.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat73 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat73);
        fractionFormat59.setNumeratorFormat(numberFormat73);
        java.lang.Object obj76 = fractionFormat59.clone();
        java.lang.Object obj78 = fractionFormat59.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj81 = fractionFormat79.parseObject("0 / 1");
        java.lang.Object obj83 = fractionFormat79.parseObject("0 / 1");
        java.text.NumberFormat numberFormat84 = fractionFormat79.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj87 = fractionFormat85.parseObject("0 / 1");
        java.text.NumberFormat numberFormat88 = fractionFormat85.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat84, numberFormat88);
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj92 = fractionFormat90.parseObject("0 / 1");
        java.lang.Object obj94 = fractionFormat90.parseObject("0 / 1");
        java.text.NumberFormat numberFormat95 = fractionFormat90.getNumeratorFormat();
        fractionFormat89.setDenominatorFormat(numberFormat95);
        fractionFormat59.setDenominatorFormat(numberFormat95);
        java.text.NumberFormat numberFormat98 = fractionFormat59.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str99 = numberFormat53.format((java.lang.Object) numberFormat98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(fractionFormat90);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(numberFormat95);
        org.junit.Assert.assertNotNull(numberFormat98);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat8.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat31);
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat41);
        fractionFormat32.setDenominatorFormat(numberFormat41);
        java.lang.Object obj44 = numberFormat41.clone();
        fractionFormat8.setNumeratorFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str48 = fractionFormat46.format((java.lang.Object) 0);
        java.lang.String str50 = fractionFormat46.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.Fraction fraction52 = fractionFormat46.parse("100");
        java.lang.StringBuffer stringBuffer53 = null;
        java.text.FieldPosition fieldPosition54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer55 = fractionFormat8.format(fraction52, stringBuffer53, fieldPosition54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "0 / 1" + "'", str48, "0 / 1");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 / 1" + "'", str50, "-1 / 1");
        org.junit.Assert.assertNotNull(fraction52);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj27 = fractionFormat24.parseObject("10");
        java.text.NumberFormat numberFormat28 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction32 = fractionFormat29.parse("10");
        java.text.NumberFormat numberFormat33 = fractionFormat29.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(numberFormat33);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        java.text.ParsePosition parsePosition47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction48 = fractionFormat45.parse("-1 / 1", parsePosition47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat48.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat45.getDenominatorFormat();
        java.lang.Object obj57 = numberFormat55.parseObject("0 / 1");
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 0L + "'", obj57, 0L);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.lang.Object obj46 = fractionFormat44.clone();
        java.text.ParsePosition parsePosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = fractionFormat44.parseObject("10 / 1", parsePosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat0.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        fractionFormat51.setDenominatorFormat(numberFormat57);
        java.lang.Object obj59 = numberFormat57.clone();
        fractionFormat40.setNumeratorFormat(numberFormat57);
        java.lang.Object obj61 = numberFormat57.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat57);
        fractionFormat29.setNumeratorFormat(numberFormat57);
        java.lang.Object obj64 = numberFormat57.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57);
        org.apache.commons.math.fraction.Fraction fraction67 = fractionFormat65.parse("10 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat72.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator81 = fractionFormat79.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat82 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78, numberFormat82);
        fractionFormat68.setNumeratorFormat(numberFormat82);
        java.text.NumberFormat numberFormat85 = fractionFormat68.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator86 = fractionFormat65.formatToCharacterIterator((java.lang.Object) numberFormat85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(numberFormat85);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj27 = numberFormat26.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat46);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.lang.Object obj51 = numberFormat49.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat49);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj64 = fractionFormat62.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.lang.Object obj71 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat67.getNumeratorFormat();
        java.text.NumberFormat numberFormat73 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat77);
        fractionFormat53.setDenominatorFormat(numberFormat77);
        java.text.ParsePosition parsePosition82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj83 = fractionFormat53.parseObject("0", parsePosition82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat10.getNumeratorFormat();
        java.lang.Class<?> wildcardClass13 = fractionFormat10.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        org.apache.commons.math.fraction.Fraction fraction4 = fractionFormat0.parse("10");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = fractionFormat0.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertNotNull(fraction4);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        fractionFormat27.setDenominatorFormat(numberFormat33);
        java.lang.Object obj35 = numberFormat33.clone();
        fractionFormat16.setNumeratorFormat(numberFormat33);
        java.lang.Object obj37 = numberFormat33.clone();
        java.lang.Object obj38 = numberFormat33.clone();
        fractionFormat11.setDenominatorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        fractionFormat10.setNumeratorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        java.lang.Object obj70 = numberFormat48.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat48);
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        java.lang.Class<?> wildcardClass73 = fractionFormat71.getClass();
        java.lang.StringBuffer stringBuffer74 = null;
        java.text.FieldPosition fieldPosition75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer76 = fractionFormat8.format((java.lang.Object) wildcardClass73, stringBuffer74, fieldPosition75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (-1L) + "'", obj70, (-1L));
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        fractionFormat42.setDenominatorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat51.getNumeratorFormat();
        java.lang.Object obj55 = fractionFormat51.clone();
        java.text.NumberFormat numberFormat56 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.lang.Object obj61 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat57.getNumeratorFormat();
        java.text.NumberFormat numberFormat63 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat64.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        java.lang.Object obj73 = fractionFormat69.parseObject("0 / 1");
        java.text.NumberFormat numberFormat74 = fractionFormat69.getNumeratorFormat();
        java.text.NumberFormat numberFormat75 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = fractionFormat76.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat79 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat79);
        fractionFormat68.setNumeratorFormat(numberFormat79);
        fractionFormat51.setNumeratorFormat(numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat79);
        fractionFormat0.setNumeratorFormat(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(numberFormat79);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21);
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) 1.0d);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat25.getNumeratorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31);
        fractionFormat22.setDenominatorFormat(numberFormat31);
        java.text.NumberFormat numberFormat34 = fractionFormat22.getDenominatorFormat();
        java.lang.StringBuffer stringBuffer35 = null;
        java.text.FieldPosition fieldPosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer37 = fractionFormat15.format((java.lang.Object) numberFormat34, stringBuffer35, fieldPosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat34);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat18);
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat37.getNumeratorFormat();
        java.lang.Object obj43 = numberFormat42.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat54);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getNumeratorFormat();
        java.lang.Class<?> wildcardClass58 = numberFormat57.getClass();
        java.lang.StringBuffer stringBuffer59 = null;
        java.text.FieldPosition fieldPosition60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer61 = fractionFormat35.format((java.lang.Object) numberFormat57, stringBuffer59, fieldPosition60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        fractionFormat32.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat38);
        java.lang.Object obj41 = numberFormat38.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat38);
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        java.text.ParsePosition parsePosition45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj46 = fractionFormat42.parseObject("100 / 1", parsePosition45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat43);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat25.getNumeratorFormat();
        java.lang.Object obj29 = fractionFormat25.clone();
        java.text.NumberFormat numberFormat30 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        fractionFormat42.setNumeratorFormat(numberFormat53);
        fractionFormat25.setNumeratorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction61 = fractionFormat59.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = fractionFormat62.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat65 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        fractionFormat59.setDenominatorFormat(numberFormat71);
        java.text.NumberFormat numberFormat73 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat73);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat25.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        fractionFormat25.setDenominatorFormat(numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat25.getNumeratorFormat();
        fractionFormat24.setNumeratorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat24.getDenominatorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.StringBuffer stringBuffer45 = null;
        java.text.FieldPosition fieldPosition46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer47 = fractionFormat24.format((java.lang.Object) fractionFormat44, stringBuffer45, fieldPosition46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat2.parse("0 / 1");
        java.text.ParsePosition parsePosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = fractionFormat2.parseObject("0", parsePosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        fractionFormat31.setNumeratorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat60.getNumeratorFormat();
        java.lang.Object obj66 = numberFormat65.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.lang.Object obj71 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat67.getNumeratorFormat();
        java.text.NumberFormat numberFormat73 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat77);
        java.text.NumberFormat numberFormat80 = fractionFormat79.getNumeratorFormat();
        fractionFormat59.setDenominatorFormat(numberFormat80);
        fractionFormat0.setNumeratorFormat(numberFormat80);
        java.lang.Object obj84 = fractionFormat0.parseObject("100 / 1");
        java.lang.Object obj85 = fractionFormat0.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        java.lang.Object obj47 = fractionFormat44.parseObject("10 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat44.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat44.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.lang.Object obj30 = fractionFormat29.clone();
        java.text.NumberFormat numberFormat31 = null;
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        java.lang.String str43 = numberFormat39.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat47);
        fractionFormat29.setDenominatorFormat(numberFormat39);
        fractionFormat26.setDenominatorFormat(numberFormat39);
        fractionFormat2.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat57 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57);
        java.text.ParsePosition parsePosition60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = fractionFormat58.parseObject("0 / 1", parsePosition60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "10" + "'", str43, "10");
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat57);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.lang.Object obj37 = numberFormat36.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat48);
        fractionFormat27.setNumeratorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj65 = fractionFormat63.parseObject("0 / 1");
        java.lang.Object obj67 = fractionFormat63.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat63.getNumeratorFormat();
        fractionFormat62.setDenominatorFormat(numberFormat68);
        java.lang.Object obj70 = numberFormat68.clone();
        fractionFormat27.setDenominatorFormat(numberFormat68);
        java.lang.Object obj72 = fractionFormat27.clone();
        java.lang.StringBuffer stringBuffer73 = null;
        java.text.FieldPosition fieldPosition74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer75 = fractionFormat24.format(obj72, stringBuffer73, fieldPosition74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (-1));
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction9 = fractionFormat0.parse("10 / 1", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = null;
        java.text.NumberFormat numberFormat34 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat34);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        java.lang.Object obj45 = numberFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat56);
        fractionFormat35.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.lang.Object obj75 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat71.getNumeratorFormat();
        fractionFormat70.setDenominatorFormat(numberFormat76);
        java.lang.Object obj78 = numberFormat76.clone();
        fractionFormat35.setDenominatorFormat(numberFormat76);
        java.lang.Object obj80 = numberFormat76.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat76);
        java.text.NumberFormat numberFormat82 = fractionFormat81.getDenominatorFormat();
        java.text.NumberFormat numberFormat83 = null;
        java.text.NumberFormat numberFormat84 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat83, numberFormat84);
        java.lang.Object obj86 = fractionFormat85.clone();
        java.lang.Object obj87 = fractionFormat85.clone();
        java.text.NumberFormat numberFormat88 = fractionFormat85.getNumeratorFormat();
        java.text.NumberFormat numberFormat89 = fractionFormat85.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer90 = null;
        java.text.FieldPosition fieldPosition91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer92 = fractionFormat81.format((java.lang.Object) numberFormat89, stringBuffer90, fieldPosition91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNull(numberFormat88);
        org.junit.Assert.assertNull(numberFormat89);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = null;
        java.text.NumberFormat numberFormat27 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        fractionFormat28.setNumeratorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        java.text.NumberFormat numberFormat53 = null;
        java.text.NumberFormat numberFormat54 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat54);
        java.lang.Object obj56 = fractionFormat55.clone();
        java.text.NumberFormat numberFormat57 = null;
        java.text.NumberFormat numberFormat58 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        java.text.NumberFormat numberFormat61 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = fractionFormat62.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat65 = fractionFormat62.getDenominatorFormat();
        fractionFormat59.setNumeratorFormat(numberFormat65);
        java.lang.Object obj67 = numberFormat65.clone();
        java.lang.String str69 = numberFormat65.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = fractionFormat70.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat73 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat73);
        fractionFormat55.setDenominatorFormat(numberFormat65);
        fractionFormat52.setDenominatorFormat(numberFormat65);
        fractionFormat28.setDenominatorFormat(numberFormat65);
        fractionFormat24.setNumeratorFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNull(numberFormat60);
        org.junit.Assert.assertNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "10" + "'", str69, "10");
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        fractionFormat22.setDenominatorFormat(numberFormat28);
        java.lang.Object obj30 = numberFormat28.clone();
        fractionFormat11.setNumeratorFormat(numberFormat28);
        java.lang.Object obj32 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat2.setNumeratorFormat(numberFormat28);
        java.text.NumberFormat numberFormat35 = null;
        java.text.NumberFormat numberFormat36 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        fractionFormat37.setNumeratorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat2.setNumeratorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) 1.0d);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        java.text.NumberFormat numberFormat62 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62);
        fractionFormat53.setDenominatorFormat(numberFormat62);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str65 = fractionFormat2.format((java.lang.Object) fractionFormat53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.lang.Object obj4 = fractionFormat3.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        java.lang.Object obj15 = numberFormat13.clone();
        java.lang.String str17 = numberFormat13.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat21);
        fractionFormat3.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat13);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.text.ParsePosition parsePosition33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat30.parse("100", parsePosition33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10" + "'", str17, "10");
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat31);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat33);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat37.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat55);
        org.apache.commons.math.fraction.Fraction fraction58 = fractionFormat37.parse("100");
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat35.formatToCharacterIterator((java.lang.Object) fraction58);
        java.text.ParsePosition parsePosition61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction62 = fractionFormat35.parse("100", parsePosition61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj27 = fractionFormat24.parseObject("10");
        java.text.NumberFormat numberFormat28 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        java.text.ParsePosition parsePosition31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction32 = fractionFormat24.parse("100 / 1", parsePosition31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12);
        java.text.NumberFormat numberFormat15 = null;
        java.text.NumberFormat numberFormat16 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        fractionFormat17.setNumeratorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat25.getNumeratorFormat();
        fractionFormat17.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        java.text.NumberFormat numberFormat42 = null;
        java.text.NumberFormat numberFormat43 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat43);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.text.NumberFormat numberFormat46 = null;
        java.text.NumberFormat numberFormat47 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        fractionFormat48.setNumeratorFormat(numberFormat54);
        java.lang.Object obj56 = numberFormat54.clone();
        java.lang.String str58 = numberFormat54.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat62);
        fractionFormat44.setDenominatorFormat(numberFormat54);
        fractionFormat41.setDenominatorFormat(numberFormat54);
        fractionFormat17.setDenominatorFormat(numberFormat54);
        java.text.NumberFormat numberFormat72 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction74 = fractionFormat17.parse("100");
        java.lang.StringBuffer stringBuffer75 = null;
        java.text.FieldPosition fieldPosition76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer77 = fractionFormat14.format(fraction74, stringBuffer75, fieldPosition76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "10" + "'", str58, "10");
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fraction74);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        fractionFormat2.setDenominatorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.lang.Object obj72 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj76 = fractionFormat74.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        java.text.NumberFormat numberFormat79 = fractionFormat78.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat62);
        java.lang.Class<?> wildcardClass82 = fractionFormat81.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17);
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.lang.Object obj23 = fractionFormat22.clone();
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat32);
        java.lang.Object obj34 = numberFormat32.clone();
        java.lang.String str36 = numberFormat32.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat40);
        fractionFormat22.setDenominatorFormat(numberFormat32);
        fractionFormat19.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat49 = fractionFormat19.getNumeratorFormat();
        fractionFormat10.setNumeratorFormat(numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat10.getNumeratorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "10" + "'", str36, "10");
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat51);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        fractionFormat2.setNumeratorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.lang.String str25 = numberFormat19.format((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = null;
        java.text.NumberFormat numberFormat27 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        fractionFormat28.setNumeratorFormat(numberFormat34);
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        fractionFormat38.setNumeratorFormat(numberFormat46);
        fractionFormat28.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat54 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat54);
        java.text.NumberFormat numberFormat56 = null;
        java.text.NumberFormat numberFormat57 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat61 = fractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat62 = fractionFormat58.getDenominatorFormat();
        java.lang.Object obj63 = fractionFormat58.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat64.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = fractionFormat64.getNumeratorFormat();
        fractionFormat58.setDenominatorFormat(numberFormat67);
        java.lang.Object obj69 = numberFormat67.clone();
        fractionFormat55.setDenominatorFormat(numberFormat67);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "100" + "'", str25, "100");
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNull(numberFormat59);
        org.junit.Assert.assertNull(numberFormat60);
        org.junit.Assert.assertNull(numberFormat61);
        org.junit.Assert.assertNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.lang.Object obj5 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat9.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat22);
        java.text.ParsePosition parsePosition25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = fractionFormat2.parseObject("10", parsePosition25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = null;
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.lang.Object obj26 = fractionFormat25.clone();
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        fractionFormat29.setNumeratorFormat(numberFormat35);
        java.lang.Object obj37 = numberFormat35.clone();
        java.lang.String str39 = numberFormat35.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat43);
        fractionFormat25.setDenominatorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat22);
        java.text.NumberFormat numberFormat54 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat53.setDenominatorFormat(numberFormat54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: denominator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "10" + "'", str39, "10");
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        fractionFormat43.setNumeratorFormat(numberFormat57);
        fractionFormat28.setDenominatorFormat(numberFormat57);
        java.lang.Object obj61 = numberFormat57.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat57);
        java.text.ParsePosition parsePosition64 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction65 = fractionFormat62.parse("10", parsePosition64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat46);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        java.text.NumberFormat numberFormat50 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat52.getNumeratorFormat();
        java.lang.Object obj61 = numberFormat59.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59);
        java.lang.Object obj63 = fractionFormat62.clone();
        java.text.NumberFormat numberFormat64 = fractionFormat62.getDenominatorFormat();
        java.lang.StringBuffer stringBuffer65 = null;
        java.text.FieldPosition fieldPosition66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer67 = fractionFormat51.format((java.lang.Object) fractionFormat62, stringBuffer65, fieldPosition66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 10L + "'", obj61, 10L);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.text.NumberFormat numberFormat21 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21);
        java.text.ParsePosition parsePosition25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction26 = fractionFormat23.parse("0", parsePosition25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj27 = fractionFormat24.parseObject("10");
        java.text.NumberFormat numberFormat28 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction5 = fractionFormat0.parse("10", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.lang.Object obj10 = numberFormat9.clone();
        java.text.NumberFormat numberFormat11 = null;
        java.text.NumberFormat numberFormat12 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        fractionFormat13.setNumeratorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.lang.Object obj46 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat42.getNumeratorFormat();
        java.lang.Object obj48 = numberFormat47.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat59);
        java.text.NumberFormat numberFormat62 = fractionFormat61.getNumeratorFormat();
        fractionFormat41.setDenominatorFormat(numberFormat62);
        java.lang.Object obj64 = numberFormat62.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat62);
        java.lang.Object obj67 = numberFormat62.parseObject("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction70 = fractionFormat68.parse("0 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator71 = numberFormat62.formatToCharacterIterator((java.lang.Object) "0 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(fraction70);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        fractionFormat23.setNumeratorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = null;
        java.text.NumberFormat numberFormat45 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat45);
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        fractionFormat46.setNumeratorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        fractionFormat46.setNumeratorFormat(numberFormat57);
        java.lang.Object obj60 = numberFormat57.parseObject("0 / 1");
        fractionFormat37.setNumeratorFormat(numberFormat57);
        java.text.NumberFormat numberFormat62 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.lang.Object obj68 = fractionFormat64.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.lang.Object obj74 = fractionFormat70.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj83 = fractionFormat81.parseObject("0 / 1");
        java.lang.Object obj85 = fractionFormat81.parseObject("0 / 1");
        java.text.NumberFormat numberFormat86 = fractionFormat81.getNumeratorFormat();
        fractionFormat80.setDenominatorFormat(numberFormat86);
        java.lang.Object obj88 = numberFormat86.clone();
        fractionFormat69.setNumeratorFormat(numberFormat86);
        java.lang.Object obj90 = numberFormat86.clone();
        java.lang.Object obj91 = numberFormat86.clone();
        fractionFormat64.setDenominatorFormat(numberFormat86);
        java.lang.Object obj93 = numberFormat86.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat94 = new org.apache.commons.math.fraction.FractionFormat(numberFormat86);
        java.text.NumberFormat numberFormat95 = fractionFormat94.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat96 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat95);
        java.lang.StringBuffer stringBuffer97 = null;
        java.text.FieldPosition fieldPosition98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer99 = fractionFormat9.format((java.lang.Object) numberFormat95, stringBuffer97, fieldPosition98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(numberFormat47);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 0L + "'", obj60, 0L);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(numberFormat95);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat2.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        java.lang.Object obj29 = numberFormat26.parseObject("-1 / 1");
        java.lang.Object obj30 = numberFormat26.clone();
        fractionFormat2.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        java.text.NumberFormat numberFormat38 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat50);
        java.text.NumberFormat numberFormat53 = null;
        java.text.NumberFormat numberFormat54 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        fractionFormat55.setNumeratorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat61);
        fractionFormat2.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat68 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction71 = fractionFormat2.parse("100", parsePosition70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (-1L) + "'", obj29, (-1L));
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat68);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat8 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat2.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = numberFormat9.clone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction13 = fractionFormat10.parse("10");
        java.text.NumberFormat numberFormat14 = null;
        java.text.NumberFormat numberFormat15 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        fractionFormat16.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat29);
        java.text.NumberFormat numberFormat31 = null;
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat46);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat10.formatToCharacterIterator((java.lang.Object) fractionFormat48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat49);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        java.lang.Object obj16 = fractionFormat2.clone();
        java.lang.Class<?> wildcardClass17 = fractionFormat2.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        java.lang.Object obj13 = numberFormat11.parseObject("0");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0L + "'", obj13, 0L);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat2.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        java.lang.Object obj51 = fractionFormat47.clone();
        java.text.NumberFormat numberFormat52 = fractionFormat47.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        java.text.NumberFormat numberFormat59 = null;
        java.text.NumberFormat numberFormat60 = null;
        java.text.NumberFormat numberFormat61 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat61);
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        fractionFormat62.setNumeratorFormat(numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat70.getNumeratorFormat();
        fractionFormat62.setNumeratorFormat(numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat73);
        java.text.NumberFormat numberFormat76 = null;
        java.text.NumberFormat numberFormat77 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat76, numberFormat77);
        java.text.NumberFormat numberFormat79 = fractionFormat78.getDenominatorFormat();
        java.text.NumberFormat numberFormat80 = fractionFormat78.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator83 = fractionFormat81.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat84 = fractionFormat81.getDenominatorFormat();
        fractionFormat78.setNumeratorFormat(numberFormat84);
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat84);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat84);
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat84);
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat84);
        java.lang.Object obj91 = numberFormat84.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat84);
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNull(numberFormat63);
        org.junit.Assert.assertNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNull(numberFormat79);
        org.junit.Assert.assertNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(attributedCharacterIterator83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 10L + "'", obj91, 10L);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        fractionFormat22.setNumeratorFormat(numberFormat39);
        fractionFormat7.setDenominatorFormat(numberFormat39);
        fractionFormat2.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat45 = fractionFormat2.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat2.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat45);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat36);
        java.lang.Object obj38 = numberFormat36.clone();
        fractionFormat19.setNumeratorFormat(numberFormat36);
        java.lang.Object obj40 = numberFormat36.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat36);
        java.text.NumberFormat numberFormat42 = fractionFormat41.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = null;
        java.text.NumberFormat numberFormat44 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        java.text.NumberFormat numberFormat47 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        fractionFormat45.setNumeratorFormat(numberFormat51);
        java.lang.Object obj53 = numberFormat51.clone();
        java.lang.String str55 = numberFormat51.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat59);
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat66);
        fractionFormat0.setDenominatorFormat(numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        org.apache.commons.math.fraction.Fraction fraction73 = fractionFormat69.parse("100");
        java.lang.String str74 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction73);
        java.lang.StringBuffer stringBuffer75 = null;
        java.text.FieldPosition fieldPosition76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer77 = fractionFormat0.format(fraction73, stringBuffer75, fieldPosition76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "10" + "'", str55, "10");
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "100 / 1" + "'", str74, "100 / 1");
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        fractionFormat44.setDenominatorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat60.getNumeratorFormat();
        java.text.NumberFormat numberFormat66 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat67.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat70 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat70);
        fractionFormat56.setNumeratorFormat(numberFormat70);
        java.lang.Object obj73 = fractionFormat56.clone();
        java.lang.Object obj75 = fractionFormat56.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.lang.Object obj80 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat81 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj84 = fractionFormat82.parseObject("0 / 1");
        java.text.NumberFormat numberFormat85 = fractionFormat82.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat81, numberFormat85);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj89 = fractionFormat87.parseObject("0 / 1");
        java.lang.Object obj91 = fractionFormat87.parseObject("0 / 1");
        java.text.NumberFormat numberFormat92 = fractionFormat87.getNumeratorFormat();
        fractionFormat86.setDenominatorFormat(numberFormat92);
        fractionFormat56.setDenominatorFormat(numberFormat92);
        java.text.NumberFormat numberFormat95 = fractionFormat56.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str96 = numberFormat52.format((java.lang.Object) fractionFormat56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(fractionFormat87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(numberFormat95);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat2.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.Fraction fraction17 = null;
        java.lang.StringBuffer stringBuffer18 = null;
        java.text.FieldPosition fieldPosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer20 = fractionFormat2.format(fraction17, stringBuffer18, fieldPosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = null;
        java.text.NumberFormat numberFormat35 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        fractionFormat36.setNumeratorFormat(numberFormat42);
        java.lang.Object obj44 = numberFormat42.clone();
        java.lang.String str46 = numberFormat42.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat50);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat57);
        java.lang.Object obj60 = numberFormat33.parseObject("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "10" + "'", str46, "10");
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat23);
        fractionFormat0.setNumeratorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat26.setNumeratorFormat(numberFormat43);
        java.text.NumberFormat numberFormat47 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54);
        fractionFormat26.setNumeratorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.lang.Object obj61 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat57.getNumeratorFormat();
        java.text.NumberFormat numberFormat63 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat64.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63);
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        java.lang.Object obj71 = numberFormat70.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat70);
        java.text.ParsePosition parsePosition75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = fractionFormat73.parseObject("100", parsePosition75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat8 = fractionFormat0.getNumeratorFormat();
        java.text.ParsePosition parsePosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction11 = fractionFormat0.parse("0", parsePosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(numberFormat8);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        fractionFormat15.setDenominatorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        fractionFormat4.setNumeratorFormat(numberFormat21);
        java.text.NumberFormat numberFormat25 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32);
        fractionFormat4.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat32);
        java.text.ParsePosition parsePosition37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = fractionFormat35.parseObject("0", parsePosition37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.lang.Object obj31 = numberFormat28.parseObject("10");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10L + "'", obj31, 10L);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        fractionFormat10.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        fractionFormat39.setDenominatorFormat(numberFormat45);
        java.lang.Object obj47 = numberFormat45.clone();
        fractionFormat28.setNumeratorFormat(numberFormat45);
        java.lang.Object obj49 = numberFormat45.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat45);
        fractionFormat10.setDenominatorFormat(numberFormat45);
        java.lang.Object obj53 = fractionFormat10.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60);
        java.text.NumberFormat numberFormat67 = fractionFormat66.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat10.formatToCharacterIterator((java.lang.Object) numberFormat67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat67);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.lang.Object obj74 = fractionFormat70.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat70.getNumeratorFormat();
        fractionFormat69.setDenominatorFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat75);
        fractionFormat50.setNumeratorFormat(numberFormat57);
        java.text.NumberFormat numberFormat79 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat79);
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        fractionFormat28.setNumeratorFormat(numberFormat81);
        org.apache.commons.math.fraction.Fraction fraction84 = fractionFormat28.parse("-1 / 1");
        java.lang.Class<?> wildcardClass85 = fraction84.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fraction84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.Fraction fraction28 = fractionFormat2.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction42 = fractionFormat39.parse("10");
        org.apache.commons.math.fraction.Fraction fraction44 = fractionFormat39.parse("10");
        org.apache.commons.math.fraction.Fraction fraction46 = fractionFormat39.parse("10");
        java.lang.String str47 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction46);
        java.lang.StringBuffer stringBuffer48 = null;
        java.text.FieldPosition fieldPosition49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer50 = fractionFormat2.format(fraction46, stringBuffer48, fieldPosition49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "10 / 1" + "'", str47, "10 / 1");
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat26);
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        java.text.NumberFormat numberFormat31 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat31);
        java.lang.Object obj33 = fractionFormat32.clone();
        java.text.NumberFormat numberFormat34 = null;
        java.text.NumberFormat numberFormat35 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        fractionFormat36.setNumeratorFormat(numberFormat42);
        java.lang.Object obj44 = numberFormat42.clone();
        java.lang.String str46 = numberFormat42.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat50);
        fractionFormat32.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat29);
        fractionFormat0.setDenominatorFormat(numberFormat26);
        java.text.NumberFormat numberFormat62 = null;
        java.text.NumberFormat numberFormat63 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        java.text.NumberFormat numberFormat66 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat67.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat70 = fractionFormat67.getDenominatorFormat();
        fractionFormat64.setNumeratorFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat72.getNumeratorFormat();
        fractionFormat64.setDenominatorFormat(numberFormat77);
        java.text.NumberFormat numberFormat79 = fractionFormat64.getDenominatorFormat();
        java.text.NumberFormat numberFormat80 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat80);
        java.text.NumberFormat numberFormat82 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "10" + "'", str46, "10");
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNull(numberFormat65);
        org.junit.Assert.assertNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat41.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat43);
        java.lang.Object obj45 = fractionFormat44.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator3 = fractionFormat1.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat4 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat11.parse("10");
        org.apache.commons.math.fraction.Fraction fraction16 = fractionFormat11.parse("10");
        org.apache.commons.math.fraction.Fraction fraction18 = fractionFormat11.parse("10");
        org.apache.commons.math.fraction.Fraction fraction20 = fractionFormat11.parse("0");
        java.text.NumberFormat numberFormat21 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(attributedCharacterIterator3);
        org.junit.Assert.assertNotNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = null;
        java.text.NumberFormat numberFormat36 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        fractionFormat37.setNumeratorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        java.lang.String str47 = numberFormat43.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat48 = null;
        java.text.NumberFormat numberFormat49 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat50.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        fractionFormat50.setNumeratorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat67);
        java.lang.Object obj80 = fractionFormat79.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj83 = fractionFormat81.parseObject("0 / 1");
        java.lang.Object obj85 = fractionFormat81.parseObject("0 / 1");
        java.text.NumberFormat numberFormat86 = fractionFormat81.getNumeratorFormat();
        java.text.NumberFormat numberFormat87 = fractionFormat81.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat87);
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat87);
        fractionFormat79.setDenominatorFormat(numberFormat87);
        org.apache.commons.math.fraction.FractionFormat fractionFormat91 = new org.apache.commons.math.fraction.FractionFormat(numberFormat87);
        java.lang.Object obj93 = fractionFormat91.parseObject("100 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str94 = numberFormat34.format((java.lang.Object) fractionFormat91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "10" + "'", str47, "10");
        org.junit.Assert.assertNull(numberFormat51);
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = numberFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.text.NumberFormat numberFormat11 = null;
        java.text.NumberFormat numberFormat12 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        fractionFormat13.setNumeratorFormat(numberFormat19);
        java.lang.Object obj21 = numberFormat19.clone();
        java.lang.String str23 = numberFormat19.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        fractionFormat26.setNumeratorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat43);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = fractionFormat10.format((java.lang.Object) numberFormat56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "10" + "'", str23, "10");
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat56);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat2.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat28);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction31 = fractionFormat2.parse("10 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        fractionFormat17.setNumeratorFormat(numberFormat28);
        fractionFormat0.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.text.ParsePosition parsePosition34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction35 = fractionFormat32.parse("0", parsePosition34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj65 = fractionFormat63.parseObject("0 / 1");
        java.lang.Object obj67 = fractionFormat63.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat63.getNumeratorFormat();
        fractionFormat62.setDenominatorFormat(numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat68);
        java.text.NumberFormat numberFormat71 = fractionFormat70.getNumeratorFormat();
        java.lang.Object obj73 = fractionFormat70.parseObject("10");
        java.text.NumberFormat numberFormat74 = fractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74);
        java.text.NumberFormat numberFormat76 = fractionFormat75.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction78 = fractionFormat75.parse("10");
        java.lang.String str79 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction78);
        java.lang.StringBuffer stringBuffer80 = null;
        java.text.FieldPosition fieldPosition81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer82 = fractionFormat45.format(fraction78, stringBuffer80, fieldPosition81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fraction78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "10 / 1" + "'", str79, "10 / 1");
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        fractionFormat34.setDenominatorFormat(numberFormat40);
        java.lang.Object obj42 = numberFormat40.clone();
        fractionFormat23.setNumeratorFormat(numberFormat40);
        java.lang.Object obj44 = numberFormat40.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat40);
        java.text.NumberFormat numberFormat46 = null;
        java.text.NumberFormat numberFormat47 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = numberFormat56.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat48.setDenominatorFormat(numberFormat56);
        java.lang.Object obj65 = numberFormat56.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction68 = fractionFormat66.parse("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat66.getNumeratorFormat();
        java.lang.Object obj71 = numberFormat69.parseObject("10 / 1");
        java.lang.String str72 = numberFormat56.format(obj71);
        java.lang.Object obj74 = numberFormat56.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 10L + "'", obj71, 10L);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "10" + "'", str72, "10");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 10L + "'", obj74, 10L);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        java.lang.Object obj19 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat0.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26);
        java.text.ParsePosition parsePosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat27.parse("-1 / 1", parsePosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat8.getDenominatorFormat();
        java.lang.Object obj11 = fractionFormat8.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj11);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.lang.String str4 = fractionFormat0.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        java.lang.Object obj32 = numberFormat27.clone();
        fractionFormat5.setDenominatorFormat(numberFormat27);
        fractionFormat0.setNumeratorFormat(numberFormat27);
        java.text.NumberFormat numberFormat35 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.lang.Object obj61 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat57.getNumeratorFormat();
        fractionFormat56.setDenominatorFormat(numberFormat62);
        java.lang.Object obj64 = numberFormat62.clone();
        fractionFormat45.setNumeratorFormat(numberFormat62);
        java.lang.Object obj66 = numberFormat62.clone();
        java.lang.Object obj67 = numberFormat62.clone();
        fractionFormat40.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62);
        fractionFormat39.setNumeratorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat74 = fractionFormat71.getNumeratorFormat();
        java.text.NumberFormat numberFormat75 = fractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat62);
        java.lang.Object obj78 = numberFormat62.clone();
        java.lang.Object obj79 = numberFormat62.clone();
        fractionFormat36.setNumeratorFormat(numberFormat62);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 / 1" + "'", str4, "-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj9 = numberFormat7.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7);
        java.lang.Object obj11 = fractionFormat10.clone();
        java.text.NumberFormat numberFormat12 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat26 = null;
        java.text.NumberFormat numberFormat27 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        fractionFormat28.setNumeratorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21);
        java.lang.Class<?> wildcardClass59 = fractionFormat58.getClass();
        java.lang.StringBuffer stringBuffer60 = null;
        java.text.FieldPosition fieldPosition61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer62 = fractionFormat10.format((java.lang.Object) wildcardClass59, stringBuffer60, fieldPosition61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10L + "'", obj9, 10L);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj3 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23);
        fractionFormat0.setDenominatorFormat(numberFormat23);
        java.text.ParsePosition parsePosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = fractionFormat0.parseObject("10 / 1", parsePosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj5 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        fractionFormat27.setDenominatorFormat(numberFormat33);
        java.lang.Object obj35 = numberFormat33.clone();
        fractionFormat16.setNumeratorFormat(numberFormat33);
        java.lang.Object obj37 = numberFormat33.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat33);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction42 = fractionFormat40.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        fractionFormat55.setNumeratorFormat(numberFormat69);
        fractionFormat40.setDenominatorFormat(numberFormat69);
        fractionFormat38.setNumeratorFormat(numberFormat69);
        java.text.NumberFormat numberFormat74 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74);
        fractionFormat2.setDenominatorFormat(numberFormat74);
        java.lang.Object obj77 = null;
        java.lang.StringBuffer stringBuffer78 = null;
        java.text.FieldPosition fieldPosition79 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer80 = fractionFormat2.format(obj77, stringBuffer78, fieldPosition79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat74);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat32.parse("10");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(fraction34);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = numberFormat31.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat23.setDenominatorFormat(numberFormat31);
        java.lang.Object obj40 = numberFormat31.clone();
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.lang.Object obj53 = numberFormat52.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat64);
        fractionFormat43.setNumeratorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        org.apache.commons.math.fraction.Fraction fraction72 = fractionFormat70.parse("100");
        java.text.ParsePosition parsePosition74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction75 = fractionFormat70.parse("100", parsePosition74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fraction72);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat12.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat26);
        java.lang.Object obj31 = fractionFormat29.parseObject("10 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj18 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat12.getNumeratorFormat();
        java.lang.Object obj21 = fractionFormat12.parseObject("-1 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction24 = fractionFormat12.parse("100");
        java.lang.StringBuffer stringBuffer25 = null;
        java.text.FieldPosition fieldPosition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer27 = fractionFormat10.format(fraction24, stringBuffer25, fieldPosition26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fraction24);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.lang.Object obj11 = numberFormat9.parseObject("0");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 0L + "'", obj11, 0L);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction13 = fractionFormat10.parse("10");
        org.apache.commons.math.fraction.Fraction fraction15 = fractionFormat10.parse("10");
        org.apache.commons.math.fraction.Fraction fraction17 = fractionFormat10.parse("10");
        java.text.NumberFormat numberFormat18 = null;
        java.text.NumberFormat numberFormat19 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        fractionFormat20.setNumeratorFormat(numberFormat26);
        java.lang.Object obj28 = numberFormat26.clone();
        java.lang.String str30 = numberFormat26.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat31 = null;
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        fractionFormat33.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat50);
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        java.lang.Object obj65 = fractionFormat62.parseObject("10 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat62.getDenominatorFormat();
        java.lang.StringBuffer stringBuffer67 = null;
        java.text.FieldPosition fieldPosition68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer69 = fractionFormat10.format((java.lang.Object) fractionFormat62, stringBuffer67, fieldPosition68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "10" + "'", str30, "10");
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction16 = fractionFormat2.parse("0 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        fractionFormat2.setDenominatorFormat(numberFormat53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = fractionFormat2.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = null;
        java.text.NumberFormat numberFormat35 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        fractionFormat36.setNumeratorFormat(numberFormat42);
        java.lang.Object obj44 = numberFormat42.clone();
        java.lang.String str46 = numberFormat42.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat50);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat57);
        java.lang.Object obj60 = numberFormat33.parseObject("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat61.getNumeratorFormat();
        java.text.NumberFormat numberFormat67 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        java.lang.Object obj73 = fractionFormat69.parseObject("0 / 1");
        java.text.NumberFormat numberFormat74 = fractionFormat69.getNumeratorFormat();
        java.text.NumberFormat numberFormat75 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75);
        fractionFormat68.setNumeratorFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "10" + "'", str46, "10");
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat28);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.lang.Object obj33 = numberFormat31.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31);
        java.lang.StringBuffer stringBuffer35 = null;
        java.text.FieldPosition fieldPosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer37 = fractionFormat2.format((java.lang.Object) fractionFormat34, stringBuffer35, fieldPosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (-1L) + "'", obj33, (-1L));
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat38 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat61.getNumeratorFormat();
        fractionFormat60.setDenominatorFormat(numberFormat66);
        java.lang.Object obj68 = numberFormat66.clone();
        fractionFormat49.setNumeratorFormat(numberFormat66);
        java.lang.Object obj70 = numberFormat66.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat66);
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        java.lang.Object obj74 = numberFormat72.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat72);
        java.text.NumberFormat numberFormat76 = fractionFormat75.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1L) + "'", obj74, (-1L));
        org.junit.Assert.assertNotNull(numberFormat76);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        fractionFormat7.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat55);
        java.text.NumberFormat numberFormat58 = fractionFormat57.getNumeratorFormat();
        fractionFormat35.setNumeratorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = fractionFormat0.format((java.lang.Object) fractionFormat60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat58);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3);
        java.lang.Object obj10 = fractionFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat31);
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat41);
        fractionFormat32.setDenominatorFormat(numberFormat41);
        fractionFormat9.setNumeratorFormat(numberFormat41);
        java.text.NumberFormat numberFormat45 = null;
        java.text.NumberFormat numberFormat46 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = numberFormat55.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat47.setDenominatorFormat(numberFormat55);
        java.lang.Object obj64 = numberFormat55.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.lang.Object obj69 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat65.getNumeratorFormat();
        java.lang.Object obj71 = numberFormat70.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat72.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator81 = fractionFormat79.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat82 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78, numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70, numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat70);
        fractionFormat9.setDenominatorFormat(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator81);
        org.junit.Assert.assertNotNull(numberFormat82);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.lang.Object obj18 = fractionFormat14.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat36);
        java.lang.Object obj38 = numberFormat36.clone();
        fractionFormat19.setNumeratorFormat(numberFormat36);
        java.lang.Object obj40 = numberFormat36.clone();
        java.lang.Object obj41 = numberFormat36.clone();
        fractionFormat14.setDenominatorFormat(numberFormat36);
        java.lang.Object obj43 = numberFormat36.clone();
        java.lang.Object obj45 = numberFormat36.parseObject("-1 / 1");
        fractionFormat13.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        java.lang.Object obj61 = numberFormat54.clone();
        fractionFormat13.setNumeratorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction65 = fractionFormat63.parse("0 / 1");
        java.lang.String str66 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction65);
        java.lang.String str67 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction65);
        java.lang.String str68 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction65);
        java.lang.String str69 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction65);
        java.lang.String str70 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction65);
        java.lang.String str71 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction65);
        java.lang.Class<?> wildcardClass72 = fraction65.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = fractionFormat13.format((java.lang.Object) wildcardClass72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (-1L) + "'", obj45, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "0 / 1" + "'", str66, "0 / 1");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "0 / 1" + "'", str67, "0 / 1");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "0 / 1" + "'", str68, "0 / 1");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "0 / 1" + "'", str69, "0 / 1");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "0 / 1" + "'", str70, "0 / 1");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "0 / 1" + "'", str71, "0 / 1");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        fractionFormat7.setNumeratorFormat(numberFormat24);
        java.lang.Object obj28 = numberFormat24.clone();
        java.lang.Object obj29 = numberFormat24.clone();
        fractionFormat2.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        fractionFormat1.setNumeratorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat24);
        java.lang.Object obj34 = fractionFormat33.clone();
        java.text.NumberFormat numberFormat35 = null;
        java.text.NumberFormat numberFormat36 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        fractionFormat37.setNumeratorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.lang.Object obj68 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat64.getNumeratorFormat();
        fractionFormat63.setDenominatorFormat(numberFormat69);
        java.lang.Object obj71 = numberFormat69.clone();
        fractionFormat52.setNumeratorFormat(numberFormat69);
        fractionFormat37.setDenominatorFormat(numberFormat69);
        org.apache.commons.math.fraction.Fraction fraction75 = fractionFormat37.parse("-1 / 1");
        java.lang.String str76 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction75);
        java.lang.StringBuffer stringBuffer77 = null;
        java.text.FieldPosition fieldPosition78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer79 = fractionFormat33.format(fraction75, stringBuffer77, fieldPosition78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1 / 1" + "'", str76, "-1 / 1");
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.text.NumberFormat numberFormat21 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat0.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.lang.Object obj45 = numberFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        fractionFormat58.setDenominatorFormat(numberFormat64);
        java.lang.Object obj66 = numberFormat64.clone();
        fractionFormat47.setNumeratorFormat(numberFormat64);
        java.lang.Object obj68 = numberFormat64.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat64);
        java.lang.Class<?> wildcardClass70 = numberFormat64.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        fractionFormat11.setDenominatorFormat(numberFormat25);
        java.lang.StringBuffer stringBuffer29 = null;
        java.text.FieldPosition fieldPosition30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer31 = fractionFormat11.format((java.lang.Object) false, stringBuffer29, fieldPosition30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        fractionFormat15.setDenominatorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        fractionFormat4.setNumeratorFormat(numberFormat21);
        java.text.NumberFormat numberFormat25 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32);
        fractionFormat4.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        java.lang.Object obj49 = numberFormat48.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj65 = fractionFormat63.parseObject("0 / 1");
        java.lang.Object obj67 = fractionFormat63.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat63.getNumeratorFormat();
        fractionFormat62.setDenominatorFormat(numberFormat68);
        java.lang.Object obj70 = numberFormat68.clone();
        fractionFormat51.setNumeratorFormat(numberFormat68);
        java.lang.Object obj72 = numberFormat68.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat48);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction76 = fractionFormat74.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        fractionFormat50.setDenominatorFormat(numberFormat56);
        java.lang.Object obj58 = numberFormat56.clone();
        fractionFormat39.setNumeratorFormat(numberFormat56);
        java.lang.Object obj60 = numberFormat56.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat56);
        fractionFormat21.setDenominatorFormat(numberFormat56);
        java.lang.Object obj64 = fractionFormat21.parseObject("10");
        org.apache.commons.math.fraction.Fraction fraction66 = fractionFormat21.parse("10");
        java.lang.StringBuffer stringBuffer67 = null;
        java.text.FieldPosition fieldPosition68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer69 = fractionFormat10.format(fraction66, stringBuffer67, fieldPosition68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(fraction66);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.lang.String str4 = fractionFormat0.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        java.lang.Object obj32 = numberFormat27.clone();
        fractionFormat5.setDenominatorFormat(numberFormat27);
        fractionFormat0.setNumeratorFormat(numberFormat27);
        java.text.NumberFormat numberFormat35 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        java.lang.Class<?> wildcardClass37 = fractionFormat36.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 / 1" + "'", str4, "-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        fractionFormat15.setNumeratorFormat(numberFormat19);
        java.text.NumberFormat numberFormat26 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat15.getNumeratorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat28);
        java.text.ParsePosition parsePosition31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = fractionFormat0.parseObject("100", parsePosition31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj22 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        fractionFormat23.setNumeratorFormat(numberFormat37);
        java.text.NumberFormat numberFormat40 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat23.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = fractionFormat0.format((java.lang.Object) numberFormat41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        java.lang.Object obj24 = numberFormat22.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        fractionFormat26.setNumeratorFormat(numberFormat40);
        java.lang.Object obj43 = fractionFormat26.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getNumeratorFormat();
        fractionFormat26.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45);
        java.lang.Object obj49 = numberFormat45.parseObject("10");
        java.lang.StringBuffer stringBuffer50 = null;
        java.text.FieldPosition fieldPosition51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer52 = fractionFormat25.format((java.lang.Object) numberFormat45, stringBuffer50, fieldPosition51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (-1L) + "'", obj24, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10L + "'", obj49, 10L);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        java.lang.Object obj22 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str25 = fractionFormat23.format((java.lang.Object) 0);
        java.lang.String str27 = fractionFormat23.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat50);
        java.lang.Object obj52 = numberFormat50.clone();
        fractionFormat33.setNumeratorFormat(numberFormat50);
        java.lang.Object obj54 = numberFormat50.clone();
        java.lang.Object obj55 = numberFormat50.clone();
        fractionFormat28.setDenominatorFormat(numberFormat50);
        fractionFormat23.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat50);
        java.text.ParsePosition parsePosition62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction63 = fractionFormat60.parse("-1 / 1", parsePosition62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0 / 1" + "'", str25, "0 / 1");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1 / 1" + "'", str27, "-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        java.lang.Object obj22 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        fractionFormat50.setDenominatorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat56);
        java.text.NumberFormat numberFormat59 = fractionFormat58.getNumeratorFormat();
        java.lang.Object obj61 = fractionFormat58.parseObject("10");
        java.text.NumberFormat numberFormat62 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62);
        java.text.NumberFormat numberFormat64 = fractionFormat63.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat69.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68);
        java.text.NumberFormat numberFormat75 = fractionFormat74.getNumeratorFormat();
        java.text.NumberFormat numberFormat76 = fractionFormat74.getDenominatorFormat();
        java.lang.Object obj78 = numberFormat76.parseObject("100 / 1");
        fractionFormat63.setDenominatorFormat(numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 100L + "'", obj78, 100L);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.lang.Object obj10 = fractionFormat8.clone();
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        java.lang.Object obj12 = fractionFormat8.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = numberFormat3.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        java.lang.Object obj22 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat31);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.lang.Object obj45 = fractionFormat43.clone();
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        java.lang.Object obj47 = numberFormat46.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = numberFormat34.format((java.lang.Object) numberFormat46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction51 = fractionFormat49.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        fractionFormat49.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = fractionFormat49.getNumeratorFormat();
        fractionFormat48.setNumeratorFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat65);
        java.text.NumberFormat numberFormat67 = fractionFormat66.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer68 = null;
        java.text.FieldPosition fieldPosition69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer70 = fractionFormat10.format((java.lang.Object) fractionFormat66, stringBuffer68, fieldPosition69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat67);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat2.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        java.lang.Object obj29 = numberFormat26.parseObject("-1 / 1");
        java.lang.Object obj30 = numberFormat26.clone();
        fractionFormat2.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        java.text.NumberFormat numberFormat38 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat50);
        java.text.NumberFormat numberFormat53 = null;
        java.text.NumberFormat numberFormat54 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        fractionFormat55.setNumeratorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat61);
        fractionFormat2.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        java.text.NumberFormat numberFormat69 = null;
        java.text.NumberFormat numberFormat70 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat70);
        java.lang.Object obj72 = fractionFormat71.clone();
        java.text.NumberFormat numberFormat73 = null;
        java.text.NumberFormat numberFormat74 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat74);
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        java.text.NumberFormat numberFormat77 = fractionFormat75.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator80 = fractionFormat78.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat81 = fractionFormat78.getDenominatorFormat();
        fractionFormat75.setNumeratorFormat(numberFormat81);
        java.lang.Object obj83 = numberFormat81.clone();
        java.lang.String str85 = numberFormat81.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator88 = fractionFormat86.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat89 = fractionFormat86.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator92 = fractionFormat90.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat93 = fractionFormat90.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat94 = new org.apache.commons.math.fraction.FractionFormat(numberFormat89, numberFormat93);
        org.apache.commons.math.fraction.FractionFormat fractionFormat95 = new org.apache.commons.math.fraction.FractionFormat(numberFormat81, numberFormat89);
        fractionFormat71.setDenominatorFormat(numberFormat81);
        java.text.NumberFormat numberFormat97 = fractionFormat71.getDenominatorFormat();
        java.lang.Object obj98 = numberFormat97.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat99 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat97);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (-1L) + "'", obj29, (-1L));
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNull(numberFormat76);
        org.junit.Assert.assertNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(attributedCharacterIterator80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "10" + "'", str85, "10");
        org.junit.Assert.assertNotNull(fractionFormat86);
        org.junit.Assert.assertNotNull(attributedCharacterIterator88);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(fractionFormat90);
        org.junit.Assert.assertNotNull(attributedCharacterIterator92);
        org.junit.Assert.assertNotNull(numberFormat93);
        org.junit.Assert.assertNotNull(numberFormat97);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        fractionFormat42.setDenominatorFormat(numberFormat48);
        java.lang.Object obj50 = numberFormat48.clone();
        fractionFormat31.setNumeratorFormat(numberFormat48);
        java.lang.Object obj52 = numberFormat48.clone();
        java.lang.Object obj53 = numberFormat48.clone();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat29.formatToCharacterIterator((java.lang.Object) wildcardClass54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        java.text.ParsePosition parsePosition32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = fractionFormat30.parseObject("hi!", parsePosition32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        fractionFormat7.setNumeratorFormat(numberFormat24);
        java.lang.Object obj28 = numberFormat24.clone();
        java.lang.Object obj29 = numberFormat24.clone();
        fractionFormat2.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        fractionFormat1.setNumeratorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat24);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        fractionFormat47.setNumeratorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction68 = fractionFormat66.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat69.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = fractionFormat73.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat76 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat76);
        java.text.NumberFormat numberFormat78 = fractionFormat77.getDenominatorFormat();
        fractionFormat66.setDenominatorFormat(numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78);
        fractionFormat65.setDenominatorFormat(numberFormat78);
        java.text.NumberFormat numberFormat82 = fractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat82);
        java.lang.StringBuffer stringBuffer84 = null;
        java.text.FieldPosition fieldPosition85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer86 = fractionFormat33.format((java.lang.Object) fractionFormat83, stringBuffer84, fieldPosition85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat82);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.lang.Object obj18 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat25.getNumeratorFormat();
        fractionFormat24.setDenominatorFormat(numberFormat30);
        java.lang.Object obj32 = numberFormat30.clone();
        fractionFormat13.setNumeratorFormat(numberFormat30);
        java.lang.Object obj34 = numberFormat30.clone();
        java.lang.Object obj35 = numberFormat30.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction43 = fractionFormat41.parse("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        fractionFormat36.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat44);
        fractionFormat11.setDenominatorFormat(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(numberFormat44);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat38 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat61.getNumeratorFormat();
        fractionFormat60.setDenominatorFormat(numberFormat66);
        java.lang.Object obj68 = numberFormat66.clone();
        fractionFormat49.setNumeratorFormat(numberFormat66);
        java.lang.Object obj70 = numberFormat66.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat66);
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        java.lang.Object obj74 = numberFormat72.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat72);
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        java.text.NumberFormat numberFormat77 = fractionFormat75.getDenominatorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat75.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1L) + "'", obj74, (-1L));
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        java.lang.Object obj23 = fractionFormat21.clone();
        java.lang.Object obj25 = fractionFormat21.parseObject("-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30);
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat33);
        java.text.NumberFormat numberFormat35 = null;
        java.text.NumberFormat numberFormat36 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        fractionFormat37.setNumeratorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        java.lang.String str47 = numberFormat43.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat48 = null;
        java.text.NumberFormat numberFormat49 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat50.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        fractionFormat50.setNumeratorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat67);
        java.lang.Object obj80 = fractionFormat79.clone();
        java.lang.Object obj81 = fractionFormat79.clone();
        java.lang.String str83 = fractionFormat79.format((java.lang.Object) (byte) 0);
        org.apache.commons.math.fraction.Fraction fraction85 = fractionFormat79.parse("0 / 1");
        java.lang.String str86 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction85);
        java.lang.StringBuffer stringBuffer87 = null;
        java.text.FieldPosition fieldPosition88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer89 = fractionFormat34.format(fraction85, stringBuffer87, fieldPosition88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "10" + "'", str47, "10");
        org.junit.Assert.assertNull(numberFormat51);
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "0 / 1" + "'", str83, "0 / 1");
        org.junit.Assert.assertNotNull(fraction85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "0 / 1" + "'", str86, "0 / 1");
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat32.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        fractionFormat32.setDenominatorFormat(numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.lang.Object obj59 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        fractionFormat65.setDenominatorFormat(numberFormat71);
        java.lang.Object obj73 = numberFormat71.clone();
        fractionFormat54.setNumeratorFormat(numberFormat71);
        java.text.NumberFormat numberFormat75 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction77 = fractionFormat54.parse("10 / 1");
        java.text.NumberFormat numberFormat78 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat78);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fraction77);
        org.junit.Assert.assertNotNull(numberFormat78);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = fractionFormat0.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = numberFormat5.formatToCharacterIterator((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.text.NumberFormat numberFormat14 = null;
        java.text.NumberFormat numberFormat15 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        fractionFormat16.setNumeratorFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        fractionFormat26.setNumeratorFormat(numberFormat34);
        fractionFormat16.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat0.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(numberFormat4);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        java.lang.Object obj29 = numberFormat22.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat30.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj46 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat40.getNumeratorFormat();
        java.lang.Object obj49 = numberFormat47.parseObject("10");
        java.lang.Object obj50 = numberFormat47.clone();
        fractionFormat39.setNumeratorFormat(numberFormat47);
        java.text.NumberFormat numberFormat52 = null;
        java.text.NumberFormat numberFormat53 = null;
        java.text.NumberFormat numberFormat54 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        fractionFormat55.setNumeratorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj65 = fractionFormat63.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat63.getNumeratorFormat();
        fractionFormat55.setNumeratorFormat(numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat66);
        java.text.NumberFormat numberFormat69 = null;
        java.text.NumberFormat numberFormat70 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat70);
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        java.text.NumberFormat numberFormat73 = fractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        fractionFormat71.setNumeratorFormat(numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77);
        java.text.NumberFormat numberFormat81 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat81);
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat39.setNumeratorFormat(numberFormat81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: numerator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10L + "'", obj49, 10L);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNull(numberFormat72);
        org.junit.Assert.assertNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat38 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat61.getNumeratorFormat();
        fractionFormat60.setDenominatorFormat(numberFormat66);
        java.lang.Object obj68 = numberFormat66.clone();
        fractionFormat49.setNumeratorFormat(numberFormat66);
        java.lang.Object obj70 = numberFormat66.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat66);
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        java.lang.Object obj74 = numberFormat72.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat72);
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        java.text.NumberFormat numberFormat77 = fractionFormat75.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction79 = fractionFormat75.parse("0 / 1");
        java.lang.String str80 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction79);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1L) + "'", obj74, (-1L));
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "0 / 1" + "'", str80, "0 / 1");
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat50);
        java.text.NumberFormat numberFormat53 = fractionFormat52.getNumeratorFormat();
        fractionFormat30.setNumeratorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        java.text.ParsePosition parsePosition57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj58 = fractionFormat55.parseObject("hi!", parsePosition57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat53);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7);
        java.text.ParsePosition parsePosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction11 = fractionFormat8.parse("hi!", parsePosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        fractionFormat31.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat37);
        java.lang.Object obj40 = null;
        java.lang.StringBuffer stringBuffer41 = null;
        java.text.FieldPosition fieldPosition42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer43 = fractionFormat39.format(obj40, stringBuffer41, fieldPosition42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj16 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        java.lang.StringBuffer stringBuffer38 = null;
        java.text.FieldPosition fieldPosition39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer40 = fractionFormat0.format((java.lang.Object) fractionFormat17, stringBuffer38, fieldPosition39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction35 = fractionFormat32.parse("10 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        fractionFormat43.setNumeratorFormat(numberFormat50);
        java.text.NumberFormat numberFormat54 = null;
        java.text.NumberFormat numberFormat55 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat55);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = numberFormat64.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat56.setDenominatorFormat(numberFormat64);
        java.lang.Object obj73 = numberFormat64.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat64);
        java.lang.Object obj75 = numberFormat50.clone();
        java.lang.Object obj76 = numberFormat50.clone();
        java.lang.StringBuffer stringBuffer77 = null;
        java.text.FieldPosition fieldPosition78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer79 = fractionFormat32.format((java.lang.Object) numberFormat50, stringBuffer77, fieldPosition78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat37.getNumeratorFormat();
        fractionFormat36.setDenominatorFormat(numberFormat42);
        java.lang.Object obj44 = numberFormat42.clone();
        fractionFormat25.setNumeratorFormat(numberFormat42);
        java.lang.Object obj46 = numberFormat42.clone();
        java.lang.Object obj47 = numberFormat42.clone();
        fractionFormat20.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42);
        fractionFormat19.setNumeratorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat51.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat42);
        java.lang.Object obj58 = numberFormat42.clone();
        java.lang.Object obj59 = numberFormat42.clone();
        java.lang.StringBuffer stringBuffer60 = null;
        java.text.FieldPosition fieldPosition61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer62 = fractionFormat17.format((java.lang.Object) numberFormat42, stringBuffer60, fieldPosition61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        fractionFormat19.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat32);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getNumeratorFormat();
        java.lang.Object obj36 = fractionFormat34.clone();
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        fractionFormat50.setNumeratorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat64);
        java.lang.Object obj68 = fractionFormat67.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str71 = fractionFormat69.format((java.lang.Object) 0);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        fractionFormat67.setDenominatorFormat(numberFormat72);
        java.lang.StringBuffer stringBuffer74 = null;
        java.text.FieldPosition fieldPosition75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer76 = fractionFormat34.format((java.lang.Object) numberFormat72, stringBuffer74, fieldPosition75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "0 / 1" + "'", str71, "0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.ParsePosition parsePosition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat24.parse("100", parsePosition26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj15 = fractionFormat0.clone();
        org.apache.commons.math.fraction.Fraction fraction17 = fractionFormat0.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        fractionFormat39.setDenominatorFormat(numberFormat45);
        java.lang.Object obj47 = numberFormat45.clone();
        fractionFormat28.setNumeratorFormat(numberFormat45);
        java.lang.Object obj49 = numberFormat45.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat45);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction54 = fractionFormat52.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        fractionFormat52.setDenominatorFormat(numberFormat64);
        java.text.NumberFormat numberFormat66 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.lang.Object obj75 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat71.getNumeratorFormat();
        java.text.NumberFormat numberFormat77 = fractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator80 = fractionFormat78.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat81 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat81);
        fractionFormat67.setNumeratorFormat(numberFormat81);
        fractionFormat52.setDenominatorFormat(numberFormat81);
        fractionFormat50.setNumeratorFormat(numberFormat81);
        java.text.NumberFormat numberFormat86 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat86);
        java.lang.Object obj89 = fractionFormat87.parseObject("100");
        java.text.AttributedCharacterIterator attributedCharacterIterator90 = fractionFormat0.formatToCharacterIterator(obj89);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(attributedCharacterIterator80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(attributedCharacterIterator90);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        fractionFormat17.setNumeratorFormat(numberFormat28);
        fractionFormat0.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46);
        fractionFormat39.setNumeratorFormat(numberFormat46);
        java.text.NumberFormat numberFormat50 = null;
        java.text.NumberFormat numberFormat51 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.lang.Object obj59 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = numberFormat60.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat52.setDenominatorFormat(numberFormat60);
        java.lang.Object obj69 = numberFormat60.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.lang.Object obj75 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj79 = fractionFormat77.parseObject("0 / 1");
        java.text.NumberFormat numberFormat80 = fractionFormat77.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat76, numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj84 = fractionFormat82.parseObject("0 / 1");
        java.lang.Object obj86 = fractionFormat82.parseObject("0 / 1");
        java.text.NumberFormat numberFormat87 = fractionFormat82.getNumeratorFormat();
        java.text.NumberFormat numberFormat88 = fractionFormat82.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator91 = fractionFormat89.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat92 = fractionFormat89.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = new org.apache.commons.math.fraction.FractionFormat(numberFormat88, numberFormat92);
        org.apache.commons.math.fraction.FractionFormat fractionFormat94 = new org.apache.commons.math.fraction.FractionFormat(numberFormat76, numberFormat92);
        org.apache.commons.math.fraction.FractionFormat fractionFormat95 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat92);
        fractionFormat0.setDenominatorFormat(numberFormat60);
        java.text.NumberFormat numberFormat97 = fractionFormat0.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(fractionFormat89);
        org.junit.Assert.assertNotNull(attributedCharacterIterator91);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(numberFormat97);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.text.NumberFormat numberFormat17 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj19 = numberFormat17.parseObject("0");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0L + "'", obj19, 0L);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        fractionFormat12.setDenominatorFormat(numberFormat18);
        java.lang.Object obj20 = numberFormat18.clone();
        fractionFormat1.setNumeratorFormat(numberFormat18);
        java.lang.Object obj22 = numberFormat18.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = fractionFormat23.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.lang.Object obj10 = fractionFormat8.clone();
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        fractionFormat24.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.Fraction fraction36 = fractionFormat24.parse("0 / 1");
        java.lang.String str37 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction36);
        java.lang.StringBuffer stringBuffer38 = null;
        java.text.FieldPosition fieldPosition39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer40 = fractionFormat8.format((java.lang.Object) fraction36, stringBuffer38, fieldPosition39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "0 / 1" + "'", str37, "0 / 1");
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.lang.Object obj15 = fractionFormat13.parseObject("-1 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat39);
        java.text.NumberFormat numberFormat42 = null;
        java.text.NumberFormat numberFormat43 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat43);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        fractionFormat44.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat64.getNumeratorFormat();
        fractionFormat58.setNumeratorFormat(numberFormat67);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat57.formatToCharacterIterator((java.lang.Object) fractionFormat58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction15 = fractionFormat11.parse("-1 / 1");
        java.text.NumberFormat numberFormat16 = null;
        java.text.NumberFormat numberFormat17 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        fractionFormat18.setNumeratorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        java.lang.String str28 = numberFormat24.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat32);
        java.text.NumberFormat numberFormat39 = null;
        java.text.NumberFormat numberFormat40 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat41.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.lang.Object obj51 = numberFormat50.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat62);
        fractionFormat41.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj79 = fractionFormat77.parseObject("0 / 1");
        java.lang.Object obj81 = fractionFormat77.parseObject("0 / 1");
        java.text.NumberFormat numberFormat82 = fractionFormat77.getNumeratorFormat();
        fractionFormat76.setDenominatorFormat(numberFormat82);
        java.lang.Object obj84 = numberFormat82.clone();
        fractionFormat41.setDenominatorFormat(numberFormat82);
        fractionFormat38.setDenominatorFormat(numberFormat82);
        fractionFormat11.setDenominatorFormat(numberFormat82);
        java.text.NumberFormat numberFormat88 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction90 = fractionFormat11.parse("100 / 1");
        java.lang.String str91 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction90);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "10" + "'", str28, "10");
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "100 / 1" + "'", str91, "100 / 1");
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat30);
        fractionFormat21.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        fractionFormat51.setDenominatorFormat(numberFormat57);
        java.lang.Object obj59 = numberFormat57.clone();
        fractionFormat40.setNumeratorFormat(numberFormat57);
        java.lang.Object obj61 = numberFormat57.clone();
        java.lang.Object obj62 = numberFormat57.clone();
        fractionFormat35.setDenominatorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57);
        fractionFormat34.setNumeratorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.lang.Object obj71 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj75 = fractionFormat73.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj80 = fractionFormat78.parseObject("0 / 1");
        java.lang.Object obj82 = fractionFormat78.parseObject("0 / 1");
        java.text.NumberFormat numberFormat83 = fractionFormat78.getNumeratorFormat();
        java.text.NumberFormat numberFormat84 = fractionFormat78.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator87 = fractionFormat85.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat88 = fractionFormat85.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat84, numberFormat88);
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat88);
        org.apache.commons.math.fraction.FractionFormat fractionFormat91 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72);
        java.lang.Object obj94 = numberFormat72.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat95 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat72);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator96 = fractionFormat21.formatToCharacterIterator((java.lang.Object) fractionFormat95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(attributedCharacterIterator87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + (-1L) + "'", obj94, (-1L));
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        fractionFormat22.setNumeratorFormat(numberFormat29);
        java.text.NumberFormat numberFormat37 = null;
        java.text.NumberFormat numberFormat38 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        fractionFormat39.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = null;
        java.text.NumberFormat numberFormat55 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat55);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        fractionFormat56.setNumeratorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.lang.Object obj68 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat64.getNumeratorFormat();
        fractionFormat56.setDenominatorFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat69);
        java.text.NumberFormat numberFormat72 = fractionFormat71.getNumeratorFormat();
        java.lang.Object obj73 = fractionFormat71.clone();
        java.text.NumberFormat numberFormat74 = fractionFormat71.getDenominatorFormat();
        fractionFormat22.setNumeratorFormat(numberFormat74);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.lang.Object obj4 = fractionFormat3.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        java.lang.Object obj15 = numberFormat13.clone();
        java.lang.String str17 = numberFormat13.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat21);
        fractionFormat3.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13);
        java.text.NumberFormat numberFormat30 = null;
        java.text.NumberFormat numberFormat31 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat31);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        fractionFormat32.setNumeratorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        fractionFormat32.setNumeratorFormat(numberFormat49);
        fractionFormat29.setNumeratorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        java.text.NumberFormat numberFormat63 = null;
        java.text.NumberFormat numberFormat64 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat64);
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        java.text.NumberFormat numberFormat67 = fractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.lang.Object obj72 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj76 = fractionFormat74.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        java.text.AttributedCharacterIterator attributedCharacterIterator80 = numberFormat73.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat65.setDenominatorFormat(numberFormat73);
        java.lang.Object obj82 = numberFormat73.clone();
        java.lang.Object obj84 = numberFormat73.parseObject("0 / 1");
        java.text.AttributedCharacterIterator attributedCharacterIterator85 = numberFormat62.formatToCharacterIterator(obj84);
        fractionFormat29.setNumeratorFormat(numberFormat62);
        java.lang.StringBuffer stringBuffer87 = null;
        java.text.FieldPosition fieldPosition88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer89 = fractionFormat0.format((java.lang.Object) fractionFormat29, stringBuffer87, fieldPosition88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10" + "'", str17, "10");
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNull(numberFormat66);
        org.junit.Assert.assertNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(attributedCharacterIterator80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 0L + "'", obj84, 0L);
        org.junit.Assert.assertNotNull(attributedCharacterIterator85);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction22 = fractionFormat20.parse("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat20.getNumeratorFormat();
        java.lang.Object obj25 = numberFormat23.parseObject("10 / 1");
        java.lang.String str26 = numberFormat10.format(obj25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10);
        java.lang.Object obj29 = numberFormat10.parseObject("10");
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "10" + "'", str26, "10");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10L + "'", obj29, 10L);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.lang.Class<?> wildcardClass32 = fractionFormat31.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = fractionFormat2.format((java.lang.Object) fractionFormat31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat46);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.lang.Object obj51 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.lang.Object obj53 = numberFormat28.clone();
        java.text.NumberFormat numberFormat54 = null;
        java.text.NumberFormat numberFormat55 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat55);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        fractionFormat56.setNumeratorFormat(numberFormat62);
        java.lang.Object obj64 = numberFormat62.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        org.apache.commons.math.fraction.Fraction fraction78 = fractionFormat76.parse("10 / 1");
        java.lang.String str79 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction78);
        java.lang.String str80 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction78);
        java.lang.String str81 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction78);
        java.lang.StringBuffer stringBuffer82 = null;
        java.text.FieldPosition fieldPosition83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer84 = fractionFormat65.format(fraction78, stringBuffer82, fieldPosition83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fraction78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "10 / 1" + "'", str79, "10 / 1");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "10 / 1" + "'", str80, "10 / 1");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "10 / 1" + "'", str81, "10 / 1");
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        fractionFormat19.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat36);
        java.lang.Object obj49 = fractionFormat48.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        java.text.NumberFormat numberFormat56 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56);
        fractionFormat48.setDenominatorFormat(numberFormat56);
        fractionFormat3.setNumeratorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj67 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = null;
        java.text.NumberFormat numberFormat69 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat69);
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        java.text.NumberFormat numberFormat72 = fractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = fractionFormat73.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat76 = fractionFormat73.getDenominatorFormat();
        fractionFormat70.setNumeratorFormat(numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj80 = fractionFormat78.parseObject("0 / 1");
        java.text.NumberFormat numberFormat81 = fractionFormat78.getNumeratorFormat();
        fractionFormat70.setNumeratorFormat(numberFormat81);
        java.lang.Object obj84 = numberFormat81.parseObject("0 / 1");
        fractionFormat61.setNumeratorFormat(numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat81);
        fractionFormat0.setDenominatorFormat(numberFormat56);
        java.text.NumberFormat numberFormat88 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator90 = fractionFormat0.formatToCharacterIterator(obj89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNull(numberFormat71);
        org.junit.Assert.assertNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 0L + "'", obj84, 0L);
        org.junit.Assert.assertNotNull(numberFormat88);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.lang.Object obj8 = fractionFormat7.clone();
        java.lang.Object obj9 = fractionFormat7.clone();
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        fractionFormat12.setNumeratorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        fractionFormat12.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        fractionFormat38.setDenominatorFormat(numberFormat44);
        java.lang.Object obj46 = numberFormat44.clone();
        fractionFormat27.setNumeratorFormat(numberFormat44);
        fractionFormat12.setDenominatorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44);
        fractionFormat7.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.Fraction fraction52 = fractionFormat7.parse("0");
        java.lang.StringBuffer stringBuffer53 = null;
        java.text.FieldPosition fieldPosition54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer55 = fractionFormat0.format(fraction52, stringBuffer53, fieldPosition54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(fraction52);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat25.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        fractionFormat25.setDenominatorFormat(numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat25.getNumeratorFormat();
        fractionFormat24.setNumeratorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction43 = fractionFormat24.parse("100 / 1");
        java.lang.Object obj44 = fractionFormat24.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(obj44);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37);
        fractionFormat30.setNumeratorFormat(numberFormat37);
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        fractionFormat43.setNumeratorFormat(numberFormat50);
        java.lang.Object obj57 = numberFormat50.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat50);
        java.lang.Class<?> wildcardClass60 = numberFormat37.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.lang.Object obj25 = null;
        java.lang.StringBuffer stringBuffer26 = null;
        java.text.FieldPosition fieldPosition27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer28 = fractionFormat24.format(obj25, stringBuffer26, fieldPosition27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = numberFormat27.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat19.setDenominatorFormat(numberFormat27);
        java.lang.Object obj36 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat37.getNumeratorFormat();
        java.lang.Object obj43 = numberFormat42.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.lang.Object obj68 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj77 = fractionFormat75.parseObject("0 / 1");
        java.lang.Object obj79 = fractionFormat75.parseObject("0 / 1");
        java.text.NumberFormat numberFormat80 = fractionFormat75.getNumeratorFormat();
        fractionFormat74.setDenominatorFormat(numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat80);
        fractionFormat57.setDenominatorFormat(numberFormat63);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator84 = fractionFormat0.formatToCharacterIterator((java.lang.Object) fractionFormat57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj9 = numberFormat7.parseObject("-1 / 1");
        java.lang.Object obj11 = numberFormat7.parseObject("100");
        java.lang.Object obj12 = numberFormat7.clone();
        java.lang.Object obj13 = numberFormat7.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = numberFormat7.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (-1L) + "'", obj9, (-1L));
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        fractionFormat10.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        fractionFormat39.setDenominatorFormat(numberFormat45);
        java.lang.Object obj47 = numberFormat45.clone();
        fractionFormat28.setNumeratorFormat(numberFormat45);
        java.lang.Object obj49 = numberFormat45.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat45);
        fractionFormat10.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.lang.Object obj72 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat68.getNumeratorFormat();
        java.text.NumberFormat numberFormat74 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator77 = fractionFormat75.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat78 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74, numberFormat78);
        fractionFormat64.setNumeratorFormat(numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction85 = fractionFormat83.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator88 = fractionFormat86.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat89 = fractionFormat86.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator92 = fractionFormat90.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat93 = fractionFormat90.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat94 = new org.apache.commons.math.fraction.FractionFormat(numberFormat89, numberFormat93);
        java.text.NumberFormat numberFormat95 = fractionFormat94.getDenominatorFormat();
        fractionFormat83.setDenominatorFormat(numberFormat95);
        org.apache.commons.math.fraction.FractionFormat fractionFormat97 = new org.apache.commons.math.fraction.FractionFormat(numberFormat95);
        fractionFormat82.setDenominatorFormat(numberFormat95);
        fractionFormat10.setNumeratorFormat(numberFormat95);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(attributedCharacterIterator77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(fraction85);
        org.junit.Assert.assertNotNull(fractionFormat86);
        org.junit.Assert.assertNotNull(attributedCharacterIterator88);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(fractionFormat90);
        org.junit.Assert.assertNotNull(attributedCharacterIterator92);
        org.junit.Assert.assertNotNull(numberFormat93);
        org.junit.Assert.assertNotNull(numberFormat95);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        java.lang.Object obj47 = fractionFormat44.parseObject("10 / 1");
        java.text.NumberFormat numberFormat48 = null;
        java.text.NumberFormat numberFormat49 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat49);
        java.lang.Object obj51 = fractionFormat50.clone();
        java.text.NumberFormat numberFormat52 = null;
        java.text.NumberFormat numberFormat53 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        java.text.NumberFormat numberFormat56 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        fractionFormat54.setNumeratorFormat(numberFormat60);
        java.lang.Object obj62 = numberFormat60.clone();
        java.lang.String str64 = numberFormat60.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat69.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat68);
        fractionFormat50.setDenominatorFormat(numberFormat60);
        java.lang.Object obj76 = numberFormat60.clone();
        java.lang.StringBuffer stringBuffer77 = null;
        java.text.FieldPosition fieldPosition78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer79 = fractionFormat44.format((java.lang.Object) numberFormat60, stringBuffer77, fieldPosition78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNull(numberFormat55);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "10" + "'", str64, "10");
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.lang.Object obj16 = fractionFormat15.clone();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat15.parse("-1 / 1");
        java.lang.String str20 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction19);
        java.lang.String str21 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction19);
        java.lang.StringBuffer stringBuffer22 = null;
        java.text.FieldPosition fieldPosition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer24 = fractionFormat0.format(fraction19, stringBuffer22, fieldPosition23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1 / 1" + "'", str20, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 / 1" + "'", str21, "-1 / 1");
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat4 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        fractionFormat1.setNumeratorFormat(numberFormat15);
        java.lang.Object obj18 = fractionFormat1.clone();
        java.lang.Object obj20 = fractionFormat1.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        fractionFormat31.setDenominatorFormat(numberFormat37);
        fractionFormat1.setDenominatorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.lang.Object obj61 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat57.getNumeratorFormat();
        fractionFormat56.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat62);
        java.lang.Object obj65 = numberFormat62.clone();
        fractionFormat1.setNumeratorFormat(numberFormat62);
        fractionFormat0.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.Fraction fraction69 = fractionFormat0.parse("10 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat0.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(numberFormat70);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat18);
        fractionFormat2.setDenominatorFormat(numberFormat18);
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.lang.Object obj24 = fractionFormat23.clone();
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        fractionFormat27.setNumeratorFormat(numberFormat33);
        java.lang.Object obj35 = numberFormat33.clone();
        java.lang.String str37 = numberFormat33.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat41);
        fractionFormat23.setDenominatorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        java.text.NumberFormat numberFormat50 = null;
        java.text.NumberFormat numberFormat51 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        fractionFormat52.setNumeratorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat64.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        java.text.NumberFormat numberFormat69 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69);
        fractionFormat52.setNumeratorFormat(numberFormat69);
        fractionFormat49.setNumeratorFormat(numberFormat69);
        fractionFormat2.setNumeratorFormat(numberFormat69);
        java.lang.Object obj74 = numberFormat69.clone();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "10" + "'", str37, "10");
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.lang.Object obj26 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat0.clone();
        java.text.ParsePosition parsePosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat0.parse("100 / 1", parsePosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat2.parse("-1 / 1", parsePosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.lang.Object obj14 = numberFormat13.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13);
        java.lang.Object obj16 = numberFormat13.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        fractionFormat11.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat45);
        java.lang.Object obj48 = numberFormat45.parseObject("0 / 1");
        fractionFormat25.setNumeratorFormat(numberFormat45);
        java.text.NumberFormat numberFormat50 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        java.text.NumberFormat numberFormat53 = fractionFormat52.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0L + "'", obj48, 0L);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat53);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3);
        java.lang.Object obj10 = fractionFormat9.clone();
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction13 = fractionFormat9.parse("hi!", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj10);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = numberFormat5.formatToCharacterIterator((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat25.getNumeratorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        fractionFormat24.setNumeratorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = null;
        java.text.NumberFormat numberFormat46 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        fractionFormat47.setNumeratorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat55.getNumeratorFormat();
        fractionFormat47.setNumeratorFormat(numberFormat58);
        java.lang.Object obj61 = numberFormat58.parseObject("0 / 1");
        fractionFormat38.setNumeratorFormat(numberFormat58);
        java.text.NumberFormat numberFormat63 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.lang.Object obj69 = fractionFormat65.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.lang.Object obj75 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj79 = fractionFormat77.parseObject("0 / 1");
        java.text.NumberFormat numberFormat80 = fractionFormat77.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat76, numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj84 = fractionFormat82.parseObject("0 / 1");
        java.lang.Object obj86 = fractionFormat82.parseObject("0 / 1");
        java.text.NumberFormat numberFormat87 = fractionFormat82.getNumeratorFormat();
        fractionFormat81.setDenominatorFormat(numberFormat87);
        java.lang.Object obj89 = numberFormat87.clone();
        fractionFormat70.setNumeratorFormat(numberFormat87);
        java.lang.Object obj91 = numberFormat87.clone();
        java.lang.Object obj92 = numberFormat87.clone();
        fractionFormat65.setDenominatorFormat(numberFormat87);
        java.lang.Object obj94 = numberFormat87.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat95 = new org.apache.commons.math.fraction.FractionFormat(numberFormat87);
        java.text.NumberFormat numberFormat96 = fractionFormat95.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat97 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat96);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str98 = numberFormat5.format((java.lang.Object) numberFormat96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0L + "'", obj61, 0L);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(numberFormat96);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34);
        java.text.NumberFormat numberFormat40 = null;
        java.text.NumberFormat numberFormat41 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat41);
        java.lang.Object obj43 = fractionFormat42.clone();
        java.text.NumberFormat numberFormat44 = null;
        java.text.NumberFormat numberFormat45 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat45);
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        fractionFormat46.setNumeratorFormat(numberFormat52);
        java.lang.Object obj54 = numberFormat52.clone();
        java.lang.String str56 = numberFormat52.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat60);
        fractionFormat42.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat68 = fractionFormat42.getDenominatorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.lang.Object obj74 = fractionFormat70.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat79);
        java.text.AttributedCharacterIterator attributedCharacterIterator82 = numberFormat75.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat39.setDenominatorFormat(numberFormat75);
        java.text.NumberFormat numberFormat84 = fractionFormat39.getDenominatorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(numberFormat47);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "10" + "'", str56, "10");
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator82);
        org.junit.Assert.assertNotNull(numberFormat84);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj15 = fractionFormat0.clone();
        org.apache.commons.math.fraction.Fraction fraction17 = fractionFormat0.parse("100");
        java.text.NumberFormat numberFormat18 = null;
        java.text.NumberFormat numberFormat19 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat20.getNumeratorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj30 = numberFormat29.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat41);
        fractionFormat20.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.Fraction fraction46 = fractionFormat20.parse("10");
        java.lang.String str47 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction46);
        java.lang.String str48 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction46);
        java.lang.StringBuffer stringBuffer49 = null;
        java.text.FieldPosition fieldPosition50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer51 = fractionFormat0.format(fraction46, stringBuffer49, fieldPosition50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "10 / 1" + "'", str47, "10 / 1");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "10 / 1" + "'", str48, "10 / 1");
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        fractionFormat22.setNumeratorFormat(numberFormat39);
        java.text.NumberFormat numberFormat43 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        fractionFormat22.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat54);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = fractionFormat62.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat65 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat65);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = fractionFormat32.format((java.lang.Object) numberFormat57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        fractionFormat17.setNumeratorFormat(numberFormat28);
        fractionFormat0.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.lang.Object obj34 = fractionFormat32.parseObject("10");
        java.lang.Object obj35 = fractionFormat32.clone();
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        fractionFormat38.setNumeratorFormat(numberFormat44);
        java.lang.Object obj46 = numberFormat44.clone();
        java.lang.String str48 = numberFormat44.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat49 = null;
        java.text.NumberFormat numberFormat50 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat51.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        fractionFormat51.setNumeratorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat69.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = fractionFormat73.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat76 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44);
        org.apache.commons.math.fraction.Fraction fraction83 = fractionFormat81.parse("100");
        java.lang.StringBuffer stringBuffer84 = null;
        java.text.FieldPosition fieldPosition85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer86 = fractionFormat32.format(fraction83, stringBuffer84, fieldPosition85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "10" + "'", str48, "10");
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fraction83);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat28 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        fractionFormat50.setDenominatorFormat(numberFormat56);
        java.lang.Object obj58 = numberFormat56.clone();
        fractionFormat39.setNumeratorFormat(numberFormat56);
        java.lang.Object obj60 = numberFormat56.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat56);
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        java.lang.Object obj64 = numberFormat62.parseObject("-1 / 1");
        fractionFormat2.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (-1L) + "'", obj64, (-1L));
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        java.lang.Object obj22 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str25 = fractionFormat23.format((java.lang.Object) 0);
        java.lang.String str27 = fractionFormat23.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat50);
        java.lang.Object obj52 = numberFormat50.clone();
        fractionFormat33.setNumeratorFormat(numberFormat50);
        java.lang.Object obj54 = numberFormat50.clone();
        java.lang.Object obj55 = numberFormat50.clone();
        fractionFormat28.setDenominatorFormat(numberFormat50);
        fractionFormat23.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat50);
        java.text.NumberFormat numberFormat61 = null;
        java.text.NumberFormat numberFormat62 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat62);
        java.text.NumberFormat numberFormat64 = fractionFormat63.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat63.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        fractionFormat63.setNumeratorFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj80 = fractionFormat78.parseObject("0 / 1");
        java.lang.Object obj82 = fractionFormat78.parseObject("0 / 1");
        java.text.NumberFormat numberFormat83 = fractionFormat78.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj86 = fractionFormat84.parseObject("0 / 1");
        java.text.NumberFormat numberFormat87 = fractionFormat84.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat83, numberFormat87);
        java.lang.Object obj90 = numberFormat87.parseObject("-1 / 1");
        java.lang.Object obj91 = numberFormat87.clone();
        fractionFormat63.setDenominatorFormat(numberFormat87);
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat87);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction95 = fractionFormat93.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0 / 1" + "'", str25, "0 / 1");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1 / 1" + "'", str27, "-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNull(numberFormat64);
        org.junit.Assert.assertNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + (-1L) + "'", obj90, (-1L));
        org.junit.Assert.assertNotNull(obj91);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat2.parse("10 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        java.lang.Object obj19 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat36);
        fractionFormat0.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        fractionFormat55.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat61);
        java.lang.Object obj64 = numberFormat61.clone();
        fractionFormat0.setNumeratorFormat(numberFormat61);
        java.lang.Object obj67 = numberFormat61.parseObject("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.lang.Object obj72 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat68.getNumeratorFormat();
        java.text.NumberFormat numberFormat74 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat74);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.lang.Object obj80 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat81 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj84 = fractionFormat82.parseObject("0 / 1");
        java.text.NumberFormat numberFormat85 = fractionFormat82.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat81, numberFormat85);
        java.text.AttributedCharacterIterator attributedCharacterIterator88 = numberFormat81.formatToCharacterIterator((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat81);
        fractionFormat75.setDenominatorFormat(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(attributedCharacterIterator88);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = null;
        java.text.NumberFormat numberFormat7 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat8.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat25);
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        java.text.NumberFormat numberFormat56 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        fractionFormat49.setNumeratorFormat(numberFormat60);
        fractionFormat2.setNumeratorFormat(numberFormat60);
        java.text.ParsePosition parsePosition65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = fractionFormat2.parseObject("10", parsePosition65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat8 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj9 = numberFormat8.clone();
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj9);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = fractionFormat2.parseObject("100");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj5 = fractionFormat3.parseObject("0 / 1");
        java.lang.Object obj7 = fractionFormat3.parseObject("100");
        java.lang.String str8 = fractionFormat0.format(obj7);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "100 / 1" + "'", str8, "100 / 1");
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat23.getDenominatorFormat();
        fractionFormat21.setNumeratorFormat(numberFormat30);
        java.lang.Object obj33 = numberFormat30.parseObject("10 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10L + "'", obj33, 10L);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat4 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        fractionFormat1.setNumeratorFormat(numberFormat15);
        java.lang.Object obj18 = fractionFormat1.clone();
        java.lang.Object obj20 = fractionFormat1.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        fractionFormat31.setDenominatorFormat(numberFormat37);
        fractionFormat1.setDenominatorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.lang.Object obj61 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat57.getNumeratorFormat();
        fractionFormat56.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat62);
        java.lang.Object obj65 = numberFormat62.clone();
        fractionFormat1.setNumeratorFormat(numberFormat62);
        fractionFormat0.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.Fraction fraction69 = fractionFormat0.parse("10 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction72 = fractionFormat70.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = fractionFormat73.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat76 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator79 = fractionFormat77.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat80 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat76, numberFormat80);
        java.text.NumberFormat numberFormat82 = fractionFormat81.getDenominatorFormat();
        fractionFormat70.setDenominatorFormat(numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat82);
        java.lang.Object obj86 = numberFormat82.parseObject("0");
        fractionFormat0.setNumeratorFormat(numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(attributedCharacterIterator79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 0L + "'", obj86, 0L);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        java.lang.Object obj58 = fractionFormat57.clone();
        java.text.NumberFormat numberFormat59 = fractionFormat57.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat60);
        java.text.NumberFormat numberFormat62 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction65 = fractionFormat63.parse("0 / 1");
        java.lang.String str66 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction65);
        java.lang.String str67 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction65);
        java.lang.String str68 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction65);
        java.lang.String str69 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction65);
        java.lang.String str70 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction65);
        java.lang.StringBuffer stringBuffer71 = null;
        java.text.FieldPosition fieldPosition72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer73 = fractionFormat44.format(fraction65, stringBuffer71, fieldPosition72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "0 / 1" + "'", str66, "0 / 1");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "0 / 1" + "'", str67, "0 / 1");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "0 / 1" + "'", str68, "0 / 1");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "0 / 1" + "'", str69, "0 / 1");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "0 / 1" + "'", str70, "0 / 1");
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        fractionFormat10.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        fractionFormat39.setDenominatorFormat(numberFormat45);
        java.lang.Object obj47 = numberFormat45.clone();
        fractionFormat28.setNumeratorFormat(numberFormat45);
        java.lang.Object obj49 = numberFormat45.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat45);
        fractionFormat10.setDenominatorFormat(numberFormat45);
        java.lang.Object obj53 = fractionFormat10.parseObject("10");
        org.apache.commons.math.fraction.Fraction fraction55 = fractionFormat10.parse("10");
        java.lang.String str56 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction55);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "10 / 1" + "'", str56, "10 / 1");
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat23.getDenominatorFormat();
        fractionFormat21.setNumeratorFormat(numberFormat30);
        org.apache.commons.math.fraction.Fraction fraction33 = fractionFormat21.parse("10");
        java.lang.Class<?> wildcardClass34 = fraction33.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.lang.Object obj74 = fractionFormat70.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat70.getNumeratorFormat();
        fractionFormat69.setDenominatorFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat75);
        fractionFormat50.setNumeratorFormat(numberFormat57);
        java.text.NumberFormat numberFormat79 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat79);
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        fractionFormat28.setNumeratorFormat(numberFormat81);
        java.text.ParsePosition parsePosition84 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction85 = fractionFormat28.parse("0", parsePosition84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat81);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj5 = fractionFormat3.parseObject("0 / 1");
        java.lang.Object obj7 = fractionFormat3.parseObject("0 / 1");
        java.text.NumberFormat numberFormat8 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat22);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        java.text.NumberFormat numberFormat27 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat27);
        java.lang.Object obj29 = fractionFormat28.clone();
        java.text.NumberFormat numberFormat30 = null;
        java.text.NumberFormat numberFormat31 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat31);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        fractionFormat32.setNumeratorFormat(numberFormat38);
        java.lang.Object obj40 = numberFormat38.clone();
        java.lang.String str42 = numberFormat38.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat46);
        fractionFormat28.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat25);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = fractionFormat0.format((java.lang.Object) numberFormat25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "10" + "'", str42, "10");
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        java.lang.Object obj29 = numberFormat22.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = numberFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        fractionFormat30.setDenominatorFormat(numberFormat37);
        java.text.ParsePosition parsePosition44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = fractionFormat30.parseObject("0", parsePosition44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction39 = fractionFormat37.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat37.getNumeratorFormat();
        fractionFormat36.setNumeratorFormat(numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat56 = fractionFormat54.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.lang.Object obj5 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat9.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj28 = fractionFormat24.clone();
        java.text.NumberFormat numberFormat29 = fractionFormat24.getDenominatorFormat();
        java.lang.Object obj31 = fractionFormat24.parseObject("0 / 1");
        java.lang.StringBuffer stringBuffer32 = null;
        java.text.FieldPosition fieldPosition33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer34 = fractionFormat2.format(obj31, stringBuffer32, fieldPosition33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        fractionFormat15.setDenominatorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        fractionFormat4.setNumeratorFormat(numberFormat21);
        java.text.NumberFormat numberFormat25 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32);
        fractionFormat4.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat32);
        java.lang.Object obj37 = fractionFormat35.parseObject("100");
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat30);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = null;
        java.text.NumberFormat numberFormat40 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat40);
        java.lang.Object obj42 = fractionFormat41.clone();
        java.text.NumberFormat numberFormat43 = null;
        java.text.NumberFormat numberFormat44 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        java.text.NumberFormat numberFormat47 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        fractionFormat45.setNumeratorFormat(numberFormat51);
        java.lang.Object obj53 = numberFormat51.clone();
        java.lang.String str55 = numberFormat51.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat59);
        fractionFormat41.setDenominatorFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51);
        java.text.NumberFormat numberFormat68 = null;
        java.text.NumberFormat numberFormat69 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat69);
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        java.text.NumberFormat numberFormat72 = fractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = fractionFormat73.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat76 = fractionFormat73.getDenominatorFormat();
        fractionFormat70.setNumeratorFormat(numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator80 = fractionFormat78.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat81 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator84 = fractionFormat82.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat85 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat81, numberFormat85);
        java.text.NumberFormat numberFormat87 = fractionFormat86.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat87);
        fractionFormat70.setNumeratorFormat(numberFormat87);
        fractionFormat67.setNumeratorFormat(numberFormat87);
        java.text.NumberFormat numberFormat91 = fractionFormat67.getNumeratorFormat();
        fractionFormat37.setNumeratorFormat(numberFormat91);
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = new org.apache.commons.math.fraction.FractionFormat(numberFormat91);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "10" + "'", str55, "10");
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNull(numberFormat71);
        org.junit.Assert.assertNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(attributedCharacterIterator80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(attributedCharacterIterator84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat91);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj27 = fractionFormat24.parseObject("10");
        java.text.NumberFormat numberFormat28 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction36 = fractionFormat34.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        fractionFormat34.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        fractionFormat24.setNumeratorFormat(numberFormat48);
        java.text.NumberFormat numberFormat52 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat58.getNumeratorFormat();
        fractionFormat54.setDenominatorFormat(numberFormat65);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator67 = numberFormat52.formatToCharacterIterator((java.lang.Object) numberFormat65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat38 = fractionFormat8.getNumeratorFormat();
        java.lang.Object obj40 = numberFormat38.parseObject("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        java.lang.Object obj46 = fractionFormat42.clone();
        java.text.NumberFormat numberFormat47 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat60.getNumeratorFormat();
        java.text.NumberFormat numberFormat66 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat67.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat70 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat70);
        fractionFormat59.setNumeratorFormat(numberFormat70);
        fractionFormat42.setNumeratorFormat(numberFormat70);
        fractionFormat41.setDenominatorFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(numberFormat70);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        fractionFormat22.setNumeratorFormat(numberFormat39);
        fractionFormat7.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        fractionFormat2.setNumeratorFormat(numberFormat39);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat2.parse("0");
        java.text.ParsePosition parsePosition49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = fractionFormat2.parseObject("", parsePosition49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(fraction47);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20);
        java.text.ParsePosition parsePosition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = fractionFormat21.parseObject("", parsePosition23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.lang.String str4 = fractionFormat0.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getNumeratorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.text.NumberFormat numberFormat31 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38);
        fractionFormat10.setNumeratorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        java.text.NumberFormat numberFormat47 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.lang.Object obj55 = numberFormat54.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        java.lang.Object obj73 = fractionFormat69.parseObject("0 / 1");
        java.text.NumberFormat numberFormat74 = fractionFormat69.getNumeratorFormat();
        fractionFormat68.setDenominatorFormat(numberFormat74);
        java.lang.Object obj76 = numberFormat74.clone();
        fractionFormat57.setNumeratorFormat(numberFormat74);
        java.lang.Object obj78 = numberFormat74.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat74);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.Fraction fraction83 = fractionFormat81.parse("-1 / 1");
        java.lang.Class<?> wildcardClass84 = fraction83.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 / 1" + "'", str4, "-1 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13);
        java.text.ParsePosition parsePosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = fractionFormat15.parseObject("100", parsePosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat46);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        java.text.NumberFormat numberFormat50 = null;
        java.text.NumberFormat numberFormat51 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat56 = fractionFormat52.getDenominatorFormat();
        java.lang.Object obj57 = fractionFormat52.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getNumeratorFormat();
        fractionFormat52.setDenominatorFormat(numberFormat61);
        fractionFormat21.setNumeratorFormat(numberFormat61);
        java.lang.Class<?> wildcardClass64 = fractionFormat21.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNull(numberFormat54);
        org.junit.Assert.assertNull(numberFormat55);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat13.getNumeratorFormat();
        fractionFormat9.setDenominatorFormat(numberFormat20);
        fractionFormat0.setDenominatorFormat(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat18);
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat29);
        java.lang.Object obj36 = numberFormat29.parseObject("10 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 10L + "'", obj36, 10L);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = null;
        java.text.NumberFormat numberFormat35 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        fractionFormat36.setNumeratorFormat(numberFormat42);
        java.lang.Object obj44 = numberFormat42.clone();
        java.lang.String str46 = numberFormat42.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat50);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat57);
        org.apache.commons.math.fraction.Fraction fraction60 = fractionFormat58.parse("10 / 1");
        java.lang.String str61 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction60);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "10" + "'", str46, "10");
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "10 / 1" + "'", str61, "10 / 1");
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        fractionFormat22.setDenominatorFormat(numberFormat28);
        java.lang.Object obj30 = numberFormat28.clone();
        fractionFormat11.setNumeratorFormat(numberFormat28);
        java.lang.Object obj32 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat2.setNumeratorFormat(numberFormat28);
        java.text.NumberFormat numberFormat35 = null;
        java.text.NumberFormat numberFormat36 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        fractionFormat37.setNumeratorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat2.setNumeratorFormat(numberFormat43);
        java.text.ParsePosition parsePosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = fractionFormat2.parseObject("10 / 1", parsePosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj15 = fractionFormat0.clone();
        org.apache.commons.math.fraction.Fraction fraction17 = fractionFormat0.parse("100");
        java.lang.String str18 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction17);
        java.lang.String str19 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction17);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "100 / 1" + "'", str18, "100 / 1");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "100 / 1" + "'", str19, "100 / 1");
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        java.lang.Object obj15 = numberFormat13.clone();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj15);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = fractionFormat0.parseObject("hi!", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction15 = fractionFormat11.parse("-1 / 1");
        java.text.NumberFormat numberFormat16 = null;
        java.text.NumberFormat numberFormat17 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        fractionFormat18.setNumeratorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        java.lang.String str28 = numberFormat24.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat32);
        java.text.NumberFormat numberFormat39 = null;
        java.text.NumberFormat numberFormat40 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat41.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.lang.Object obj51 = numberFormat50.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat62);
        fractionFormat41.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj79 = fractionFormat77.parseObject("0 / 1");
        java.lang.Object obj81 = fractionFormat77.parseObject("0 / 1");
        java.text.NumberFormat numberFormat82 = fractionFormat77.getNumeratorFormat();
        fractionFormat76.setDenominatorFormat(numberFormat82);
        java.lang.Object obj84 = numberFormat82.clone();
        fractionFormat41.setDenominatorFormat(numberFormat82);
        fractionFormat38.setDenominatorFormat(numberFormat82);
        fractionFormat11.setDenominatorFormat(numberFormat82);
        java.text.NumberFormat numberFormat88 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction90 = fractionFormat11.parse("100 / 1");
        java.text.NumberFormat numberFormat91 = fractionFormat11.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "10" + "'", str28, "10");
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertNotNull(numberFormat91);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction12 = fractionFormat10.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat38 = fractionFormat8.getNumeratorFormat();
        java.lang.Object obj40 = numberFormat38.parseObject("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.lang.Object obj46 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat42.getNumeratorFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        java.text.NumberFormat numberFormat51 = null;
        java.text.NumberFormat numberFormat52 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat52);
        java.lang.Object obj54 = fractionFormat53.clone();
        java.text.NumberFormat numberFormat55 = null;
        java.text.NumberFormat numberFormat56 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat56);
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        java.text.NumberFormat numberFormat59 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        fractionFormat57.setNumeratorFormat(numberFormat63);
        java.lang.Object obj65 = numberFormat63.clone();
        java.lang.String str67 = numberFormat63.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat71);
        fractionFormat53.setDenominatorFormat(numberFormat63);
        fractionFormat50.setDenominatorFormat(numberFormat63);
        java.text.NumberFormat numberFormat80 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat80);
        java.lang.Object obj82 = numberFormat80.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNull(numberFormat58);
        org.junit.Assert.assertNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "10" + "'", str67, "10");
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(obj82);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat48.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat55);
        java.text.NumberFormat numberFormat57 = null;
        java.text.NumberFormat numberFormat58 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        java.text.NumberFormat numberFormat61 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = fractionFormat62.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat65 = fractionFormat62.getDenominatorFormat();
        fractionFormat59.setNumeratorFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.lang.Object obj71 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat67.getNumeratorFormat();
        fractionFormat59.setDenominatorFormat(numberFormat72);
        java.text.NumberFormat numberFormat74 = null;
        java.text.NumberFormat numberFormat75 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74, numberFormat75);
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator81 = fractionFormat79.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat82 = fractionFormat79.getDenominatorFormat();
        fractionFormat76.setNumeratorFormat(numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj86 = fractionFormat84.parseObject("0 / 1");
        java.lang.Object obj88 = fractionFormat84.parseObject("0 / 1");
        java.text.NumberFormat numberFormat89 = fractionFormat84.getNumeratorFormat();
        fractionFormat76.setDenominatorFormat(numberFormat89);
        org.apache.commons.math.fraction.FractionFormat fractionFormat91 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat89);
        fractionFormat56.setNumeratorFormat(numberFormat89);
        java.text.NumberFormat numberFormat93 = fractionFormat56.getNumeratorFormat();
        java.text.ParsePosition parsePosition95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction96 = fractionFormat56.parse("-1 / 1", parsePosition95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNull(numberFormat60);
        org.junit.Assert.assertNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNull(numberFormat77);
        org.junit.Assert.assertNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(numberFormat93);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getNumeratorFormat();
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = fractionFormat0.parseObject("", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        java.lang.Object obj20 = numberFormat10.clone();
        java.lang.Object obj21 = numberFormat10.clone();
        java.text.NumberFormat numberFormat22 = null;
        java.text.NumberFormat numberFormat23 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        fractionFormat24.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        java.text.NumberFormat numberFormat59 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59);
        fractionFormat52.setNumeratorFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat59);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction40 = fractionFormat2.parse("10");
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        fractionFormat43.setNumeratorFormat(numberFormat49);
        java.lang.Object obj51 = numberFormat49.clone();
        java.lang.String str53 = numberFormat49.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat57);
        fractionFormat2.setDenominatorFormat(numberFormat49);
        java.text.NumberFormat numberFormat65 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = fractionFormat2.parseObject("", parsePosition67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "10" + "'", str53, "10");
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat65);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.String str5 = numberFormat3.format((java.lang.Object) (short) 1);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj7 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat8 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(numberFormat8);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat2.setDenominatorFormat(numberFormat43);
        java.lang.Object obj47 = fractionFormat2.clone();
        java.lang.Object obj48 = fractionFormat2.clone();
        java.text.ParsePosition parsePosition50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction51 = fractionFormat2.parse("1", parsePosition50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj15 = fractionFormat0.clone();
        java.text.ParsePosition parsePosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = fractionFormat0.parseObject("", parsePosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj15);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat22.setDenominatorFormat(numberFormat24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: denominator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat23);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat19 = null;
        java.text.NumberFormat numberFormat20 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        fractionFormat21.setNumeratorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat34);
        java.text.NumberFormat numberFormat36 = fractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43);
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) 1.0d);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        fractionFormat44.setDenominatorFormat(numberFormat53);
        fractionFormat21.setDenominatorFormat(numberFormat53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = fractionFormat2.format((java.lang.Object) fractionFormat21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        java.text.ParsePosition parsePosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = fractionFormat2.parseObject("100", parsePosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        java.lang.Object obj22 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        fractionFormat34.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat61.getNumeratorFormat();
        java.text.NumberFormat numberFormat67 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = fractionFormat73.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat76 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator79 = fractionFormat77.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat80 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat76, numberFormat80);
        fractionFormat72.setNumeratorFormat(numberFormat76);
        java.text.NumberFormat numberFormat83 = fractionFormat72.getDenominatorFormat();
        java.text.NumberFormat numberFormat84 = fractionFormat72.getDenominatorFormat();
        java.text.NumberFormat numberFormat85 = fractionFormat72.getNumeratorFormat();
        fractionFormat57.setDenominatorFormat(numberFormat85);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator87 = fractionFormat56.formatToCharacterIterator((java.lang.Object) fractionFormat57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(attributedCharacterIterator79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat85);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        fractionFormat12.setNumeratorFormat(numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat28 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat2.getDenominatorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17);
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.lang.Object obj23 = fractionFormat22.clone();
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat32);
        java.lang.Object obj34 = numberFormat32.clone();
        java.lang.String str36 = numberFormat32.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat40);
        fractionFormat22.setDenominatorFormat(numberFormat32);
        fractionFormat19.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat49 = fractionFormat19.getNumeratorFormat();
        fractionFormat10.setNumeratorFormat(numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat64.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat71);
        fractionFormat63.setNumeratorFormat(numberFormat67);
        java.text.NumberFormat numberFormat74 = fractionFormat63.getDenominatorFormat();
        java.text.NumberFormat numberFormat75 = fractionFormat63.getDenominatorFormat();
        java.lang.Object obj77 = numberFormat75.parseObject("10 / 1");
        fractionFormat10.setNumeratorFormat(numberFormat75);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "10" + "'", str36, "10");
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 10L + "'", obj77, 10L);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        java.lang.Object obj29 = numberFormat22.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.lang.Class<?> wildcardClass32 = fractionFormat30.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        java.lang.Object obj23 = fractionFormat21.parseObject("-1 / 1");
        org.apache.commons.math.fraction.Fraction fraction25 = fractionFormat21.parse("10");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(numberFormat26);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        fractionFormat27.setNumeratorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37);
        java.text.NumberFormat numberFormat40 = null;
        java.text.NumberFormat numberFormat41 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.lang.Object obj59 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat55.getNumeratorFormat();
        fractionFormat54.setDenominatorFormat(numberFormat60);
        java.lang.Object obj62 = numberFormat60.clone();
        fractionFormat42.setDenominatorFormat(numberFormat60);
        java.lang.Object obj64 = numberFormat60.clone();
        fractionFormat39.setDenominatorFormat(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat5.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        fractionFormat5.setDenominatorFormat(numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        fractionFormat25.setNumeratorFormat(numberFormat31);
        java.lang.Object obj33 = numberFormat31.clone();
        java.lang.String str35 = numberFormat31.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        fractionFormat38.setNumeratorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31);
        org.apache.commons.math.fraction.Fraction fraction70 = fractionFormat68.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.lang.Object obj75 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat71.getNumeratorFormat();
        java.text.NumberFormat numberFormat77 = fractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77);
        fractionFormat68.setNumeratorFormat(numberFormat77);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str81 = numberFormat19.format((java.lang.Object) numberFormat77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "10" + "'", str35, "10");
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        fractionFormat27.setNumeratorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat37);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) 1.0d);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15);
        fractionFormat6.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat37.getNumeratorFormat();
        fractionFormat36.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat64);
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        java.lang.Object obj69 = numberFormat67.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj80 = fractionFormat78.parseObject("0 / 1");
        java.text.NumberFormat numberFormat81 = fractionFormat78.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj85 = fractionFormat83.parseObject("0 / 1");
        java.lang.Object obj87 = fractionFormat83.parseObject("0 / 1");
        java.text.NumberFormat numberFormat88 = fractionFormat83.getNumeratorFormat();
        fractionFormat82.setDenominatorFormat(numberFormat88);
        java.lang.Object obj90 = numberFormat88.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat91 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat88);
        fractionFormat6.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (-1L) + "'", obj69, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(obj90);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat9);
        org.apache.commons.math.fraction.Fraction fraction12 = null;
        java.lang.StringBuffer stringBuffer13 = null;
        java.text.FieldPosition fieldPosition14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer15 = fractionFormat11.format(fraction12, stringBuffer13, fieldPosition14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat46);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.lang.Object obj52 = numberFormat28.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.text.NumberFormat numberFormat21 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat0.setNumeratorFormat(numberFormat28);
        java.lang.Object obj31 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat51);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.lang.Object obj56 = numberFormat54.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54);
        fractionFormat0.setDenominatorFormat(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1L) + "'", obj56, (-1L));
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getNumeratorFormat();
        java.text.NumberFormat numberFormat8 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat6.setDenominatorFormat(numberFormat8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: denominator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat16);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        fractionFormat42.setDenominatorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat67.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat70 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat70);
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        java.lang.Object obj75 = numberFormat73.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat73);
        java.text.NumberFormat numberFormat78 = fractionFormat77.getDenominatorFormat();
        fractionFormat22.setNumeratorFormat(numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj82 = fractionFormat80.parseObject("0 / 1");
        java.lang.Object obj84 = fractionFormat80.parseObject("0 / 1");
        java.text.NumberFormat numberFormat85 = fractionFormat80.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj88 = fractionFormat86.parseObject("0 / 1");
        java.text.NumberFormat numberFormat89 = fractionFormat86.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat85, numberFormat89);
        fractionFormat22.setNumeratorFormat(numberFormat89);
        java.text.NumberFormat numberFormat92 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat93 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat94 = new org.apache.commons.math.fraction.FractionFormat(numberFormat93);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (-1L) + "'", obj75, (-1L));
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(fractionFormat86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(numberFormat93);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat16);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        fractionFormat42.setDenominatorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat67.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat70 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat70);
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        java.lang.Object obj75 = numberFormat73.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat73);
        java.text.NumberFormat numberFormat78 = fractionFormat77.getDenominatorFormat();
        fractionFormat22.setNumeratorFormat(numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj82 = fractionFormat80.parseObject("0 / 1");
        java.lang.Object obj84 = fractionFormat80.parseObject("0 / 1");
        java.text.NumberFormat numberFormat85 = fractionFormat80.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj88 = fractionFormat86.parseObject("0 / 1");
        java.text.NumberFormat numberFormat89 = fractionFormat86.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat85, numberFormat89);
        fractionFormat22.setNumeratorFormat(numberFormat89);
        java.lang.Class<?> wildcardClass92 = numberFormat89.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (-1L) + "'", obj75, (-1L));
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(fractionFormat86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        java.text.NumberFormat numberFormat16 = fractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat16);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat7);
        java.text.NumberFormat numberFormat14 = null;
        java.text.NumberFormat numberFormat15 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        fractionFormat30.setNumeratorFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = null;
        java.text.NumberFormat numberFormat52 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        fractionFormat53.setNumeratorFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat61.getNumeratorFormat();
        fractionFormat53.setNumeratorFormat(numberFormat64);
        java.lang.Object obj67 = numberFormat64.parseObject("0 / 1");
        fractionFormat44.setNumeratorFormat(numberFormat64);
        java.text.NumberFormat numberFormat69 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat69);
        fractionFormat16.setDenominatorFormat(numberFormat41);
        java.lang.StringBuffer stringBuffer72 = null;
        java.text.FieldPosition fieldPosition73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer74 = fractionFormat13.format((java.lang.Object) fractionFormat16, stringBuffer72, fieldPosition73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNull(numberFormat54);
        org.junit.Assert.assertNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 0L + "'", obj67, 0L);
        org.junit.Assert.assertNotNull(numberFormat69);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        java.lang.Object obj46 = numberFormat45.clone();
        java.lang.Object obj47 = numberFormat45.clone();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction13 = fractionFormat10.parse("10");
        org.apache.commons.math.fraction.Fraction fraction15 = fractionFormat10.parse("10");
        org.apache.commons.math.fraction.Fraction fraction17 = fractionFormat10.parse("10");
        org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat10.parse("0");
        java.lang.String str20 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction19);
        java.lang.String str21 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction19);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "0 / 1" + "'", str20, "0 / 1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0 / 1" + "'", str21, "0 / 1");
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat30);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = null;
        java.text.NumberFormat numberFormat40 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        fractionFormat41.setNumeratorFormat(numberFormat47);
        java.lang.Object obj49 = numberFormat47.clone();
        java.lang.String str51 = numberFormat47.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat52 = null;
        java.text.NumberFormat numberFormat53 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        java.text.NumberFormat numberFormat56 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = fractionFormat62.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat65 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat65);
        fractionFormat54.setNumeratorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = fractionFormat76.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat79 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat71);
        java.lang.Object obj84 = fractionFormat83.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator87 = fractionFormat85.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat88 = fractionFormat85.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator91 = fractionFormat89.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat92 = fractionFormat89.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = new org.apache.commons.math.fraction.FractionFormat(numberFormat88, numberFormat92);
        java.text.NumberFormat numberFormat94 = fractionFormat93.getDenominatorFormat();
        java.lang.Object obj95 = fractionFormat93.clone();
        java.text.NumberFormat numberFormat96 = fractionFormat93.getDenominatorFormat();
        fractionFormat83.setDenominatorFormat(numberFormat96);
        java.text.NumberFormat numberFormat98 = fractionFormat83.getDenominatorFormat();
        fractionFormat37.setNumeratorFormat(numberFormat98);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "10" + "'", str51, "10");
        org.junit.Assert.assertNull(numberFormat55);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(attributedCharacterIterator87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(fractionFormat89);
        org.junit.Assert.assertNotNull(attributedCharacterIterator91);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(numberFormat94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(numberFormat96);
        org.junit.Assert.assertNotNull(numberFormat98);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat25.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        fractionFormat25.setDenominatorFormat(numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat25.getNumeratorFormat();
        fractionFormat24.setNumeratorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction43 = fractionFormat24.parse("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        fractionFormat55.setNumeratorFormat(numberFormat59);
        java.text.NumberFormat numberFormat66 = fractionFormat55.getDenominatorFormat();
        java.text.NumberFormat numberFormat67 = null;
        java.text.NumberFormat numberFormat68 = null;
        java.text.NumberFormat numberFormat69 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat69);
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        java.text.NumberFormat numberFormat72 = fractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = fractionFormat73.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat76 = fractionFormat73.getDenominatorFormat();
        fractionFormat70.setNumeratorFormat(numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj80 = fractionFormat78.parseObject("0 / 1");
        java.text.NumberFormat numberFormat81 = fractionFormat78.getNumeratorFormat();
        fractionFormat70.setNumeratorFormat(numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat81);
        java.text.NumberFormat numberFormat84 = null;
        java.text.NumberFormat numberFormat85 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat84, numberFormat85);
        java.text.NumberFormat numberFormat87 = fractionFormat86.getDenominatorFormat();
        java.text.NumberFormat numberFormat88 = fractionFormat86.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator91 = fractionFormat89.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat92 = fractionFormat89.getDenominatorFormat();
        fractionFormat86.setNumeratorFormat(numberFormat92);
        org.apache.commons.math.fraction.FractionFormat fractionFormat94 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat92);
        org.apache.commons.math.fraction.FractionFormat fractionFormat95 = new org.apache.commons.math.fraction.FractionFormat(numberFormat92);
        org.apache.commons.math.fraction.FractionFormat fractionFormat96 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat92);
        fractionFormat24.setDenominatorFormat(numberFormat92);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNull(numberFormat71);
        org.junit.Assert.assertNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNull(numberFormat87);
        org.junit.Assert.assertNull(numberFormat88);
        org.junit.Assert.assertNotNull(fractionFormat89);
        org.junit.Assert.assertNotNull(attributedCharacterIterator91);
        org.junit.Assert.assertNotNull(numberFormat92);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat46);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.lang.Object obj51 = numberFormat49.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat49);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.lang.Object obj55 = fractionFormat53.clone();
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat53.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getDenominatorFormat();
        java.lang.Object obj13 = numberFormat11.parseObject("100 / 1");
        java.text.NumberFormat numberFormat14 = null;
        java.text.NumberFormat numberFormat15 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        fractionFormat16.setNumeratorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        java.lang.String str26 = numberFormat22.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        fractionFormat29.setNumeratorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        org.apache.commons.math.fraction.Fraction fraction61 = fractionFormat59.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj64 = fractionFormat62.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat62.getNumeratorFormat();
        java.text.NumberFormat numberFormat66 = fractionFormat62.getNumeratorFormat();
        fractionFormat59.setDenominatorFormat(numberFormat66);
        java.text.NumberFormat numberFormat68 = fractionFormat59.getNumeratorFormat();
        java.text.NumberFormat numberFormat69 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.lang.Object obj74 = fractionFormat70.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75);
        java.text.NumberFormat numberFormat77 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77);
        fractionFormat59.setDenominatorFormat(numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat77);
        java.lang.Object obj81 = fractionFormat80.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "10" + "'", str26, "10");
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25);
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) 1.0d);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        fractionFormat26.setDenominatorFormat(numberFormat35);
        java.text.NumberFormat numberFormat38 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat38);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat38);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34);
        java.text.NumberFormat numberFormat40 = null;
        java.text.NumberFormat numberFormat41 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat41);
        java.lang.Object obj43 = fractionFormat42.clone();
        java.text.NumberFormat numberFormat44 = null;
        java.text.NumberFormat numberFormat45 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat45);
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        fractionFormat46.setNumeratorFormat(numberFormat52);
        java.lang.Object obj54 = numberFormat52.clone();
        java.lang.String str56 = numberFormat52.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat60);
        fractionFormat42.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat68 = fractionFormat42.getDenominatorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.lang.Object obj74 = fractionFormat70.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat79);
        java.text.AttributedCharacterIterator attributedCharacterIterator82 = numberFormat75.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat39.setDenominatorFormat(numberFormat75);
        java.text.ParsePosition parsePosition85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction86 = fractionFormat39.parse("0", parsePosition85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(numberFormat47);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "10" + "'", str56, "10");
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator82);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        fractionFormat15.setNumeratorFormat(numberFormat29);
        fractionFormat0.setDenominatorFormat(numberFormat29);
        java.lang.Object obj33 = numberFormat29.clone();
        java.text.NumberFormat numberFormat34 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat34);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        java.text.NumberFormat numberFormat43 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat43);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        fractionFormat44.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat52.getNumeratorFormat();
        fractionFormat44.setNumeratorFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat55);
        java.text.NumberFormat numberFormat58 = null;
        java.text.NumberFormat numberFormat59 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat59);
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        java.text.NumberFormat numberFormat62 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        fractionFormat60.setNumeratorFormat(numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat66);
        fractionFormat35.setDenominatorFormat(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNull(numberFormat61);
        org.junit.Assert.assertNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        java.text.ParsePosition parsePosition16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = fractionFormat11.parseObject("-1 / 1", parsePosition16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat2.parse("100 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat5);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat33);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat44);
        java.lang.Object obj52 = numberFormat44.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        java.text.ParsePosition parsePosition25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction26 = fractionFormat23.parse("10 / 1", parsePosition25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = null;
        java.text.NumberFormat numberFormat7 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat8.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat25);
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction41 = fractionFormat39.parse("0 / 1");
        java.lang.String str42 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction41);
        java.lang.String str43 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction41);
        java.lang.String str44 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction41);
        java.lang.String str45 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction41);
        java.lang.String str46 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction41);
        java.lang.String str47 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction41);
        java.lang.String str48 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction41);
        java.lang.String str49 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction41);
        java.lang.StringBuffer stringBuffer50 = null;
        java.text.FieldPosition fieldPosition51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer52 = fractionFormat38.format(fraction41, stringBuffer50, fieldPosition51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "0 / 1" + "'", str42, "0 / 1");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "0 / 1" + "'", str43, "0 / 1");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "0 / 1" + "'", str44, "0 / 1");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "0 / 1" + "'", str45, "0 / 1");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "0 / 1" + "'", str46, "0 / 1");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "0 / 1" + "'", str47, "0 / 1");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "0 / 1" + "'", str48, "0 / 1");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "0 / 1" + "'", str49, "0 / 1");
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj15 = fractionFormat0.clone();
        org.apache.commons.math.fraction.Fraction fraction17 = fractionFormat0.parse("100");
        java.text.NumberFormat numberFormat18 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat28.getDenominatorFormat();
        fractionFormat0.setNumeratorFormat(numberFormat30);
        java.lang.Object obj32 = fractionFormat0.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        fractionFormat39.setNumeratorFormat(numberFormat50);
        fractionFormat0.setDenominatorFormat(numberFormat50);
        java.text.ParsePosition parsePosition55 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction56 = fractionFormat0.parse("10 / 1", parsePosition55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat25.getNumeratorFormat();
        java.lang.Object obj29 = fractionFormat25.clone();
        java.text.NumberFormat numberFormat30 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        fractionFormat42.setNumeratorFormat(numberFormat53);
        fractionFormat25.setNumeratorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat53);
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        java.text.ParsePosition parsePosition61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = fractionFormat58.parseObject("0", parsePosition61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat59);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction12 = fractionFormat9.parse("10");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction12);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat48.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat55);
        java.text.NumberFormat numberFormat57 = null;
        java.text.NumberFormat numberFormat58 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        java.text.NumberFormat numberFormat61 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = fractionFormat62.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat65 = fractionFormat62.getDenominatorFormat();
        fractionFormat59.setNumeratorFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.lang.Object obj71 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat67.getNumeratorFormat();
        fractionFormat59.setDenominatorFormat(numberFormat72);
        java.text.NumberFormat numberFormat74 = null;
        java.text.NumberFormat numberFormat75 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74, numberFormat75);
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator81 = fractionFormat79.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat82 = fractionFormat79.getDenominatorFormat();
        fractionFormat76.setNumeratorFormat(numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj86 = fractionFormat84.parseObject("0 / 1");
        java.lang.Object obj88 = fractionFormat84.parseObject("0 / 1");
        java.text.NumberFormat numberFormat89 = fractionFormat84.getNumeratorFormat();
        fractionFormat76.setDenominatorFormat(numberFormat89);
        org.apache.commons.math.fraction.FractionFormat fractionFormat91 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat89);
        fractionFormat56.setNumeratorFormat(numberFormat89);
        java.text.NumberFormat numberFormat93 = fractionFormat56.getNumeratorFormat();
        java.text.ParsePosition parsePosition95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction96 = fractionFormat56.parse("10 / 1", parsePosition95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNull(numberFormat60);
        org.junit.Assert.assertNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNull(numberFormat77);
        org.junit.Assert.assertNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(numberFormat93);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = null;
        java.text.NumberFormat numberFormat36 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        fractionFormat37.setNumeratorFormat(numberFormat43);
        java.text.NumberFormat numberFormat45 = null;
        java.text.NumberFormat numberFormat46 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        fractionFormat47.setNumeratorFormat(numberFormat55);
        fractionFormat37.setDenominatorFormat(numberFormat55);
        java.text.NumberFormat numberFormat63 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat63);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj3 = fractionFormat0.clone();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = fractionFormat0.parseObject("-1 / 1", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(obj3);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat50);
        fractionFormat25.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32);
        java.lang.Object obj55 = numberFormat32.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32);
        java.lang.Object obj57 = numberFormat32.clone();
        java.text.NumberFormat numberFormat58 = null;
        java.text.NumberFormat numberFormat59 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat59);
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        java.text.NumberFormat numberFormat62 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        fractionFormat60.setNumeratorFormat(numberFormat66);
        java.lang.Object obj68 = numberFormat66.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat66);
        java.lang.Class<?> wildcardClass70 = fractionFormat69.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str71 = numberFormat3.format((java.lang.Object) fractionFormat69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNull(numberFormat61);
        org.junit.Assert.assertNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat25.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        fractionFormat25.setDenominatorFormat(numberFormat43);
        java.text.NumberFormat numberFormat45 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45);
        fractionFormat24.setNumeratorFormat(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat45);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        java.text.NumberFormat numberFormat48 = null;
        java.text.NumberFormat numberFormat49 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = numberFormat58.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat50.setDenominatorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58);
        fractionFormat45.setDenominatorFormat(numberFormat58);
        java.text.ParsePosition parsePosition70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = fractionFormat45.parseObject("10", parsePosition70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNull(numberFormat51);
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.lang.Object obj46 = fractionFormat44.clone();
        java.lang.String str48 = fractionFormat44.format((java.lang.Object) (byte) 0);
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat44.parse("0 / 1");
        java.lang.String str51 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction50);
        java.lang.String str52 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction50);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "0 / 1" + "'", str48, "0 / 1");
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "0 / 1" + "'", str51, "0 / 1");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "0 / 1" + "'", str52, "0 / 1");
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.lang.String str4 = fractionFormat0.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        java.lang.Object obj32 = numberFormat27.clone();
        fractionFormat5.setDenominatorFormat(numberFormat27);
        fractionFormat0.setNumeratorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        fractionFormat51.setDenominatorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat60.getNumeratorFormat();
        java.lang.Object obj64 = fractionFormat60.clone();
        java.text.NumberFormat numberFormat65 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        java.text.NumberFormat numberFormat72 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = fractionFormat73.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat76 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj80 = fractionFormat78.parseObject("0 / 1");
        java.lang.Object obj82 = fractionFormat78.parseObject("0 / 1");
        java.text.NumberFormat numberFormat83 = fractionFormat78.getNumeratorFormat();
        java.text.NumberFormat numberFormat84 = fractionFormat78.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator87 = fractionFormat85.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat88 = fractionFormat85.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat84, numberFormat88);
        fractionFormat77.setNumeratorFormat(numberFormat88);
        fractionFormat60.setNumeratorFormat(numberFormat88);
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat88);
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat88);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str94 = numberFormat27.format((java.lang.Object) numberFormat88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 / 1" + "'", str4, "-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(attributedCharacterIterator87);
        org.junit.Assert.assertNotNull(numberFormat88);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction40 = fractionFormat2.parse("10");
        java.text.NumberFormat numberFormat41 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        java.lang.Object obj52 = fractionFormat50.clone();
        java.text.NumberFormat numberFormat53 = fractionFormat50.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat53);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat46);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        java.text.NumberFormat numberFormat50 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        java.text.NumberFormat numberFormat52 = null;
        java.text.NumberFormat numberFormat53 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        java.text.NumberFormat numberFormat56 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        fractionFormat54.setNumeratorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60);
        java.text.NumberFormat numberFormat64 = fractionFormat63.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat63.getNumeratorFormat();
        fractionFormat51.setNumeratorFormat(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNull(numberFormat55);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat43);
        fractionFormat22.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat31);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat47.parse("-1 / 1");
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fraction50);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34);
        java.text.NumberFormat numberFormat40 = null;
        java.text.NumberFormat numberFormat41 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat41);
        java.lang.Object obj43 = fractionFormat42.clone();
        java.text.NumberFormat numberFormat44 = null;
        java.text.NumberFormat numberFormat45 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat45);
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        fractionFormat46.setNumeratorFormat(numberFormat52);
        java.lang.Object obj54 = numberFormat52.clone();
        java.lang.String str56 = numberFormat52.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat60);
        fractionFormat42.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat68 = fractionFormat42.getDenominatorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(numberFormat47);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "10" + "'", str56, "10");
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat68);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        fractionFormat31.setDenominatorFormat(numberFormat37);
        java.lang.Object obj39 = numberFormat37.clone();
        fractionFormat20.setNumeratorFormat(numberFormat37);
        java.text.NumberFormat numberFormat41 = fractionFormat20.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat42);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat21);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat25.getNumeratorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        fractionFormat23.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        fractionFormat50.setDenominatorFormat(numberFormat56);
        java.lang.Object obj58 = numberFormat56.clone();
        fractionFormat39.setNumeratorFormat(numberFormat56);
        java.text.NumberFormat numberFormat60 = fractionFormat39.getDenominatorFormat();
        fractionFormat38.setNumeratorFormat(numberFormat60);
        java.lang.Object obj63 = numberFormat60.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 0L + "'", obj63, 0L);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.text.ParsePosition parsePosition27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction28 = fractionFormat25.parse("", parsePosition27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat4);
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = numberFormat13.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat5.setDenominatorFormat(numberFormat13);
        java.lang.Object obj22 = numberFormat13.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.lang.Object obj29 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = fractionFormat0.format((java.lang.Object) numberFormat13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        fractionFormat12.setNumeratorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        fractionFormat12.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.lang.String str35 = numberFormat29.format((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        fractionFormat38.setNumeratorFormat(numberFormat44);
        java.text.NumberFormat numberFormat46 = null;
        java.text.NumberFormat numberFormat47 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        fractionFormat48.setNumeratorFormat(numberFormat56);
        fractionFormat38.setDenominatorFormat(numberFormat56);
        java.text.NumberFormat numberFormat64 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat64);
        java.text.NumberFormat numberFormat67 = fractionFormat66.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "100" + "'", str35, "100");
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat67);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        fractionFormat7.setNumeratorFormat(numberFormat24);
        java.lang.Object obj28 = numberFormat24.clone();
        java.lang.Object obj29 = numberFormat24.clone();
        fractionFormat2.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        fractionFormat1.setNumeratorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        java.lang.Object obj61 = numberFormat39.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat39);
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63);
        java.lang.Object obj65 = fractionFormat64.clone();
        java.text.NumberFormat numberFormat66 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat64.setDenominatorFormat(numberFormat66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: denominator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1L) + "'", obj61, (-1L));
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        java.lang.Object obj18 = numberFormat14.parseObject("10 / 1");
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10L + "'", obj18, 10L);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.lang.String str4 = fractionFormat0.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        java.lang.Object obj32 = numberFormat27.clone();
        fractionFormat5.setDenominatorFormat(numberFormat27);
        fractionFormat0.setNumeratorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27);
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        fractionFormat38.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat46.getNumeratorFormat();
        fractionFormat38.setNumeratorFormat(numberFormat49);
        java.lang.Object obj52 = numberFormat49.parseObject("0 / 1");
        fractionFormat35.setNumeratorFormat(numberFormat49);
        java.text.NumberFormat numberFormat54 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat55.getNumeratorFormat();
        java.lang.Object obj59 = fractionFormat55.clone();
        java.text.NumberFormat numberFormat60 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat61.getNumeratorFormat();
        java.text.NumberFormat numberFormat67 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj75 = fractionFormat73.parseObject("0 / 1");
        java.lang.Object obj77 = fractionFormat73.parseObject("0 / 1");
        java.text.NumberFormat numberFormat78 = fractionFormat73.getNumeratorFormat();
        java.text.NumberFormat numberFormat79 = fractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator82 = fractionFormat80.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat83 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat79, numberFormat83);
        fractionFormat72.setNumeratorFormat(numberFormat83);
        fractionFormat55.setNumeratorFormat(numberFormat83);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat83);
        java.lang.Class<?> wildcardClass88 = fractionFormat87.getClass();
        java.lang.StringBuffer stringBuffer89 = null;
        java.text.FieldPosition fieldPosition90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer91 = fractionFormat35.format((java.lang.Object) fractionFormat87, stringBuffer89, fieldPosition90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 / 1" + "'", str4, "-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 0L + "'", obj52, 0L);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(attributedCharacterIterator82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat48.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat45.getNumeratorFormat();
        java.lang.Object obj56 = numberFormat54.parseObject("10 / 1");
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 10L + "'", obj56, 10L);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = null;
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.lang.Object obj26 = fractionFormat25.clone();
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        fractionFormat29.setNumeratorFormat(numberFormat35);
        java.lang.Object obj37 = numberFormat35.clone();
        java.lang.String str39 = numberFormat35.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat43);
        fractionFormat25.setDenominatorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat22);
        java.lang.Object obj54 = numberFormat19.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "10" + "'", str39, "10");
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat7 = fractionFormat0.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj7 = fractionFormat0.clone();
        org.apache.commons.math.fraction.Fraction fraction9 = fractionFormat0.parse("0 / 1");
        java.lang.String str10 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction9);
        java.lang.String str11 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction9);
        java.lang.String str12 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction9);
        java.lang.String str13 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction9);
        java.lang.String str14 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction9);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0 / 1" + "'", str10, "0 / 1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0 / 1" + "'", str11, "0 / 1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0 / 1" + "'", str12, "0 / 1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0 / 1" + "'", str13, "0 / 1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0 / 1" + "'", str14, "0 / 1");
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        java.text.NumberFormat numberFormat42 = null;
        java.text.NumberFormat numberFormat43 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat43);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.text.NumberFormat numberFormat46 = null;
        java.text.NumberFormat numberFormat47 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        fractionFormat48.setNumeratorFormat(numberFormat54);
        java.lang.Object obj56 = numberFormat54.clone();
        java.lang.String str58 = numberFormat54.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat62);
        fractionFormat44.setDenominatorFormat(numberFormat54);
        fractionFormat41.setDenominatorFormat(numberFormat54);
        java.text.NumberFormat numberFormat71 = fractionFormat41.getNumeratorFormat();
        java.lang.Object obj73 = numberFormat71.parseObject("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat71);
        java.text.ParsePosition parsePosition77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction78 = fractionFormat75.parse("", parsePosition77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "10" + "'", str58, "10");
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        fractionFormat45.setNumeratorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        java.text.NumberFormat numberFormat62 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        fractionFormat67.setNumeratorFormat(numberFormat71);
        fractionFormat45.setNumeratorFormat(numberFormat71);
        fractionFormat32.setNumeratorFormat(numberFormat71);
        java.lang.Object obj80 = numberFormat71.clone();
        java.lang.Object obj81 = numberFormat71.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37);
        fractionFormat30.setNumeratorFormat(numberFormat37);
        java.text.NumberFormat numberFormat41 = fractionFormat30.getNumeratorFormat();
        java.text.ParsePosition parsePosition43 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction44 = fractionFormat30.parse("100", parsePosition43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat41);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        fractionFormat2.setNumeratorFormat(numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat2.getDenominatorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat22);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        fractionFormat19.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat32);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getNumeratorFormat();
        java.lang.Object obj36 = fractionFormat34.clone();
        java.text.NumberFormat numberFormat37 = null;
        java.text.NumberFormat numberFormat38 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.lang.Object obj46 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        fractionFormat39.setNumeratorFormat(numberFormat47);
        fractionFormat34.setDenominatorFormat(numberFormat47);
        java.lang.Object obj56 = numberFormat47.parseObject("-1 / 1");
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1L) + "'", obj56, (-1L));
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat46);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.text.ParsePosition parsePosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = fractionFormat51.parseObject("hi!", parsePosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        java.lang.Object obj34 = numberFormat33.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat45);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = null;
        java.text.NumberFormat numberFormat50 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = numberFormat59.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat51.setDenominatorFormat(numberFormat59);
        java.lang.Object obj68 = numberFormat59.clone();
        java.text.NumberFormat numberFormat69 = null;
        java.text.NumberFormat numberFormat70 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat70);
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        java.text.NumberFormat numberFormat73 = fractionFormat71.getNumeratorFormat();
        java.text.NumberFormat numberFormat74 = fractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj77 = fractionFormat75.parseObject("0 / 1");
        java.lang.Object obj79 = fractionFormat75.parseObject("0 / 1");
        java.text.NumberFormat numberFormat80 = fractionFormat75.getNumeratorFormat();
        java.lang.Object obj81 = numberFormat80.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj84 = fractionFormat82.parseObject("0 / 1");
        java.lang.Object obj86 = fractionFormat82.parseObject("0 / 1");
        java.text.NumberFormat numberFormat87 = fractionFormat82.getNumeratorFormat();
        java.text.NumberFormat numberFormat88 = fractionFormat82.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator91 = fractionFormat89.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat92 = fractionFormat89.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = new org.apache.commons.math.fraction.FractionFormat(numberFormat88, numberFormat92);
        org.apache.commons.math.fraction.FractionFormat fractionFormat94 = new org.apache.commons.math.fraction.FractionFormat(numberFormat80, numberFormat92);
        fractionFormat71.setNumeratorFormat(numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat96 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat97 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat80);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator98 = fractionFormat24.formatToCharacterIterator((java.lang.Object) numberFormat80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNull(numberFormat72);
        org.junit.Assert.assertNull(numberFormat73);
        org.junit.Assert.assertNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(fractionFormat89);
        org.junit.Assert.assertNotNull(attributedCharacterIterator91);
        org.junit.Assert.assertNotNull(numberFormat92);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        java.lang.Object obj19 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat36);
        fractionFormat0.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        fractionFormat55.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat61);
        java.lang.Object obj64 = numberFormat61.clone();
        fractionFormat0.setNumeratorFormat(numberFormat61);
        java.lang.Object obj67 = numberFormat61.parseObject("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.lang.Object obj72 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat68.getNumeratorFormat();
        java.text.NumberFormat numberFormat74 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat74);
        java.text.NumberFormat numberFormat76 = fractionFormat75.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat76);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj27 = fractionFormat24.parseObject("10");
        java.text.NumberFormat numberFormat28 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction32 = fractionFormat29.parse("10");
        java.lang.String str33 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction32);
        java.lang.String str34 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction32);
        java.lang.String str35 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction32);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "10 / 1" + "'", str33, "10 / 1");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "10 / 1" + "'", str34, "10 / 1");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "10 / 1" + "'", str35, "10 / 1");
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        fractionFormat2.setNumeratorFormat(numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        fractionFormat38.setNumeratorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        fractionFormat60.setNumeratorFormat(numberFormat64);
        fractionFormat38.setNumeratorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat64);
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat73);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat2.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        java.lang.Object obj29 = numberFormat26.parseObject("-1 / 1");
        java.lang.Object obj30 = numberFormat26.clone();
        fractionFormat2.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        java.text.NumberFormat numberFormat38 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat50);
        java.text.NumberFormat numberFormat53 = null;
        java.text.NumberFormat numberFormat54 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        fractionFormat55.setNumeratorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat61);
        fractionFormat2.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat68 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction71 = fractionFormat2.parse("0 / 1", parsePosition70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (-1L) + "'", obj29, (-1L));
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat68);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.Fraction fraction28 = fractionFormat26.parse("0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fraction28);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction9 = fractionFormat7.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat19);
        fractionFormat2.setNumeratorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat41);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        fractionFormat43.setNumeratorFormat(numberFormat51);
        java.lang.String str59 = numberFormat51.format((java.lang.Object) 10);
        fractionFormat2.setNumeratorFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat72.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator81 = fractionFormat79.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat82 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78, numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat82);
        java.lang.Object obj85 = fractionFormat84.clone();
        org.apache.commons.math.fraction.Fraction fraction87 = fractionFormat84.parse("10 / 1");
        java.lang.String str88 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction87);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = fractionFormat2.format((java.lang.Object) str88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "10" + "'", str59, "10");
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(fraction87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "10 / 1" + "'", str88, "10 / 1");
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        fractionFormat27.setNumeratorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction41 = fractionFormat38.parse("100 / 1");
        java.lang.String str42 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction41);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "100 / 1" + "'", str42, "100 / 1");
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.lang.Object obj46 = fractionFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        java.lang.Class<?> wildcardClass49 = numberFormat48.getClass();
        java.lang.StringBuffer stringBuffer50 = null;
        java.text.FieldPosition fieldPosition51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer52 = fractionFormat44.format((java.lang.Object) numberFormat48, stringBuffer50, fieldPosition51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        fractionFormat34.setNumeratorFormat(numberFormat45);
        fractionFormat11.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45);
        java.lang.Class<?> wildcardClass50 = fractionFormat49.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat33);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat36);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction4 = fractionFormat0.parse("-1 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(numberFormat5);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        fractionFormat22.setDenominatorFormat(numberFormat28);
        java.lang.Object obj30 = numberFormat28.clone();
        fractionFormat11.setNumeratorFormat(numberFormat28);
        java.lang.Object obj32 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat2.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        org.apache.commons.math.fraction.Fraction fraction45 = fractionFormat43.parse("0 / 1");
        java.lang.String str46 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction45);
        java.lang.StringBuffer stringBuffer47 = null;
        java.text.FieldPosition fieldPosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer49 = fractionFormat2.format(fraction45, stringBuffer47, fieldPosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "0 / 1" + "'", str46, "0 / 1");
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.lang.Object obj18 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat14.getNumeratorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20);
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.lang.Object obj26 = fractionFormat25.clone();
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        fractionFormat29.setNumeratorFormat(numberFormat35);
        java.lang.Object obj37 = numberFormat35.clone();
        java.lang.String str39 = numberFormat35.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat43);
        fractionFormat25.setDenominatorFormat(numberFormat35);
        fractionFormat22.setDenominatorFormat(numberFormat35);
        java.text.NumberFormat numberFormat52 = fractionFormat22.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str53 = numberFormat12.format((java.lang.Object) numberFormat52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "10" + "'", str39, "10");
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat14.setDenominatorFormat(numberFormat20);
        java.lang.Object obj22 = numberFormat20.clone();
        fractionFormat2.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        fractionFormat26.setNumeratorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat52);
        java.lang.StringBuffer stringBuffer54 = null;
        java.text.FieldPosition fieldPosition55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer56 = fractionFormat2.format((java.lang.Object) numberFormat52, stringBuffer54, fieldPosition55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat31.parse("10");
        org.apache.commons.math.fraction.Fraction fraction36 = fractionFormat31.parse("10");
        org.apache.commons.math.fraction.Fraction fraction38 = fractionFormat31.parse("10");
        java.lang.String str39 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction38);
        java.lang.String str40 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction38);
        java.lang.StringBuffer stringBuffer41 = null;
        java.text.FieldPosition fieldPosition42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer43 = fractionFormat20.format(fraction38, stringBuffer41, fieldPosition42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "10 / 1" + "'", str39, "10 / 1");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "10 / 1" + "'", str40, "10 / 1");
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat3.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat39);
        java.lang.Object obj42 = numberFormat39.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.lang.Object obj55 = fractionFormat53.clone();
        java.text.NumberFormat numberFormat56 = fractionFormat53.getNumeratorFormat();
        fractionFormat44.setNumeratorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.lang.Object obj74 = fractionFormat70.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj83 = fractionFormat81.parseObject("0 / 1");
        java.lang.Object obj85 = fractionFormat81.parseObject("0 / 1");
        java.text.NumberFormat numberFormat86 = fractionFormat81.getNumeratorFormat();
        fractionFormat80.setDenominatorFormat(numberFormat86);
        java.lang.Object obj88 = numberFormat86.clone();
        fractionFormat69.setNumeratorFormat(numberFormat86);
        java.lang.Object obj90 = numberFormat86.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat91 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat86);
        java.text.NumberFormat numberFormat92 = fractionFormat91.getDenominatorFormat();
        java.text.NumberFormat numberFormat93 = fractionFormat91.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str94 = numberFormat56.format((java.lang.Object) fractionFormat91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(numberFormat93);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12);
        java.lang.Object obj16 = numberFormat12.parseObject("0");
        java.lang.Object obj18 = numberFormat12.parseObject("100");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0L + "'", obj16, 0L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25);
        java.text.NumberFormat numberFormat29 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat57);
        java.text.NumberFormat numberFormat60 = null;
        java.text.NumberFormat numberFormat61 = null;
        java.text.NumberFormat numberFormat62 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat62);
        java.lang.Object obj64 = fractionFormat63.clone();
        java.text.NumberFormat numberFormat65 = null;
        java.text.NumberFormat numberFormat66 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat66);
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        java.text.NumberFormat numberFormat69 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = fractionFormat70.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat73 = fractionFormat70.getDenominatorFormat();
        fractionFormat67.setNumeratorFormat(numberFormat73);
        java.lang.Object obj75 = numberFormat73.clone();
        java.lang.String str77 = numberFormat73.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator80 = fractionFormat78.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat81 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator84 = fractionFormat82.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat85 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat81, numberFormat85);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat81);
        fractionFormat63.setDenominatorFormat(numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat91 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat60);
        fractionFormat31.setDenominatorFormat(numberFormat57);
        fractionFormat30.setNumeratorFormat(numberFormat57);
        java.lang.Object obj94 = fractionFormat30.clone();
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNull(numberFormat68);
        org.junit.Assert.assertNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "10" + "'", str77, "10");
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(attributedCharacterIterator80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(attributedCharacterIterator84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10);
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.lang.Object obj24 = fractionFormat23.clone();
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        fractionFormat27.setNumeratorFormat(numberFormat33);
        java.lang.Object obj35 = numberFormat33.clone();
        java.lang.String str37 = numberFormat33.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat41);
        fractionFormat23.setDenominatorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat33);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        java.text.NumberFormat numberFormat52 = null;
        java.text.NumberFormat numberFormat53 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        java.text.NumberFormat numberFormat56 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        fractionFormat54.setNumeratorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat60);
        java.lang.Object obj65 = numberFormat60.parseObject("-1 / 1");
        java.lang.StringBuffer stringBuffer66 = null;
        java.text.FieldPosition fieldPosition67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer68 = fractionFormat19.format((java.lang.Object) "-1 / 1", stringBuffer66, fieldPosition67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "10" + "'", str37, "10");
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNull(numberFormat55);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (-1L) + "'", obj65, (-1L));
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getNumeratorFormat();
        java.lang.Object obj23 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat24 = fractionFormat11.getNumeratorFormat();
        java.lang.Object obj26 = numberFormat24.parseObject("10");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 10L + "'", obj26, 10L);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat7.getNumeratorFormat();
        java.lang.Object obj16 = fractionFormat7.parseObject("-1 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat7.parse("100");
        org.apache.commons.math.fraction.Fraction fraction21 = fractionFormat7.parse("0 / 1");
        java.lang.StringBuffer stringBuffer22 = null;
        java.text.FieldPosition fieldPosition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer24 = fractionFormat6.format(fraction21, stringBuffer22, fieldPosition23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction21);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj8 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat29);
        java.text.NumberFormat numberFormat31 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat39);
        fractionFormat30.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        fractionFormat0.setNumeratorFormat(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        fractionFormat12.setNumeratorFormat(numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat28 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj29 = numberFormat28.clone();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        fractionFormat20.setDenominatorFormat(numberFormat26);
        java.lang.Object obj28 = numberFormat26.clone();
        fractionFormat9.setNumeratorFormat(numberFormat26);
        java.lang.Object obj30 = numberFormat26.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat26);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.lang.StringBuffer stringBuffer39 = null;
        java.text.FieldPosition fieldPosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer41 = fractionFormat2.format((java.lang.Object) "0 / 1", stringBuffer39, fieldPosition40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat16);
        java.lang.Object obj23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = fractionFormat22.format(obj23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        fractionFormat19.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str37 = fractionFormat35.format((java.lang.Object) 0);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "0 / 1" + "'", str37, "0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat16 = null;
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.lang.Object obj20 = fractionFormat19.clone();
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat29);
        java.lang.Object obj31 = numberFormat29.clone();
        java.lang.String str33 = numberFormat29.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat37);
        fractionFormat19.setDenominatorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat29);
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        java.lang.Object obj49 = numberFormat47.parseObject("0 / 1");
        fractionFormat2.setNumeratorFormat(numberFormat47);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "10" + "'", str33, "10");
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 0L + "'", obj49, 0L);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.lang.Object obj26 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        fractionFormat38.setDenominatorFormat(numberFormat44);
        java.lang.Object obj46 = numberFormat44.clone();
        fractionFormat27.setNumeratorFormat(numberFormat44);
        java.text.NumberFormat numberFormat48 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        fractionFormat27.setNumeratorFormat(numberFormat55);
        fractionFormat0.setDenominatorFormat(numberFormat55);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction60 = fractionFormat0.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        java.lang.Object obj22 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction37 = fractionFormat35.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        fractionFormat35.setDenominatorFormat(numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        fractionFormat50.setNumeratorFormat(numberFormat64);
        fractionFormat35.setDenominatorFormat(numberFormat64);
        java.lang.Object obj68 = numberFormat64.clone();
        java.lang.Object obj70 = numberFormat64.parseObject("100");
        fractionFormat34.setDenominatorFormat(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        java.lang.Object obj22 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat55);
        fractionFormat33.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        java.lang.Object obj60 = fractionFormat59.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        fractionFormat26.setNumeratorFormat(numberFormat30);
        java.lang.Object obj37 = numberFormat30.clone();
        fractionFormat14.setDenominatorFormat(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = numberFormat5.formatToCharacterIterator((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat15 = null;
        java.text.NumberFormat numberFormat16 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        fractionFormat17.setNumeratorFormat(numberFormat23);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        fractionFormat27.setNumeratorFormat(numberFormat35);
        fractionFormat17.setDenominatorFormat(numberFormat35);
        java.text.NumberFormat numberFormat43 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat43);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = null;
        java.text.NumberFormat numberFormat12 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        fractionFormat13.setNumeratorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        fractionFormat13.setNumeratorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("0 / 1");
        fractionFormat4.setNumeratorFormat(numberFormat24);
        java.text.NumberFormat numberFormat29 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat4.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat30);
        java.text.ParsePosition parsePosition33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat0.parse("0", parsePosition33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0L + "'", obj27, 0L);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        java.lang.Object obj16 = numberFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat37.getNumeratorFormat();
        fractionFormat36.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat64);
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        java.lang.Object obj69 = numberFormat67.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat67);
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat72);
        java.text.NumberFormat numberFormat74 = fractionFormat73.getNumeratorFormat();
        java.lang.Object obj76 = numberFormat74.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (-1L) + "'", obj69, (-1L));
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 0L + "'", obj76, 0L);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12);
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        fractionFormat31.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        fractionFormat31.setNumeratorFormat(numberFormat48);
        fractionFormat28.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        java.text.NumberFormat numberFormat62 = null;
        java.text.NumberFormat numberFormat63 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        java.text.NumberFormat numberFormat66 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.lang.Object obj71 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj75 = fractionFormat73.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat76);
        java.text.AttributedCharacterIterator attributedCharacterIterator79 = numberFormat72.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat64.setDenominatorFormat(numberFormat72);
        java.lang.Object obj81 = numberFormat72.clone();
        java.lang.Object obj83 = numberFormat72.parseObject("0 / 1");
        java.text.AttributedCharacterIterator attributedCharacterIterator84 = numberFormat61.formatToCharacterIterator(obj83);
        fractionFormat28.setNumeratorFormat(numberFormat61);
        java.lang.Object obj87 = numberFormat61.parseObject("0");
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNull(numberFormat65);
        org.junit.Assert.assertNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(attributedCharacterIterator79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 0L + "'", obj83, 0L);
        org.junit.Assert.assertNotNull(attributedCharacterIterator84);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 0L + "'", obj87, 0L);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat4.getNumeratorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat11);
        java.lang.Object obj13 = fractionFormat0.clone();
        java.text.ParsePosition parsePosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = fractionFormat0.parseObject("10", parsePosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.Fraction fraction39 = fractionFormat8.parse("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        fractionFormat57.setDenominatorFormat(numberFormat63);
        java.lang.Object obj65 = numberFormat63.clone();
        fractionFormat46.setNumeratorFormat(numberFormat63);
        java.lang.Object obj67 = numberFormat63.clone();
        java.lang.Object obj68 = numberFormat63.clone();
        fractionFormat41.setDenominatorFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63);
        fractionFormat40.setNumeratorFormat(numberFormat63);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator72 = fractionFormat8.formatToCharacterIterator((java.lang.Object) numberFormat63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        java.text.NumberFormat numberFormat39 = null;
        java.text.NumberFormat numberFormat40 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat41.getNumeratorFormat();
        java.lang.Object obj43 = fractionFormat41.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = fractionFormat70.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat73 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat73);
        fractionFormat41.setDenominatorFormat(numberFormat73);
        fractionFormat2.setDenominatorFormat(numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj81 = fractionFormat79.parseObject("0 / 1");
        java.lang.Object obj83 = fractionFormat79.parseObject("0 / 1");
        java.text.NumberFormat numberFormat84 = fractionFormat79.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj87 = fractionFormat85.parseObject("0 / 1");
        java.text.NumberFormat numberFormat88 = fractionFormat85.getNumeratorFormat();
        fractionFormat79.setNumeratorFormat(numberFormat88);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str90 = numberFormat73.format((java.lang.Object) numberFormat88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(numberFormat88);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        java.lang.Object obj5 = fractionFormat0.clone();
        java.lang.Object obj6 = fractionFormat0.clone();
        java.lang.Object obj8 = fractionFormat0.parseObject("10 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        java.lang.Object obj16 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat17 = fractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.ParsePosition parsePosition28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction29 = fractionFormat24.parse("", parsePosition28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = null;
        java.text.NumberFormat numberFormat12 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        fractionFormat13.setNumeratorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        fractionFormat13.setNumeratorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("0 / 1");
        fractionFormat4.setNumeratorFormat(numberFormat24);
        java.text.NumberFormat numberFormat29 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat4.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30);
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat32.parse("10 / 1");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0L + "'", obj27, 0L);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fraction34);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat48.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63);
        fractionFormat45.setDenominatorFormat(numberFormat63);
        java.text.NumberFormat numberFormat66 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat45.setDenominatorFormat(numberFormat66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: denominator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat2.setDenominatorFormat(numberFormat43);
        java.lang.Object obj47 = fractionFormat2.clone();
        java.lang.Object obj48 = fractionFormat2.clone();
        java.text.ParsePosition parsePosition50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = fractionFormat2.parseObject("10", parsePosition50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat0.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat38 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat61.getNumeratorFormat();
        fractionFormat60.setDenominatorFormat(numberFormat66);
        java.lang.Object obj68 = numberFormat66.clone();
        fractionFormat49.setNumeratorFormat(numberFormat66);
        java.lang.Object obj70 = numberFormat66.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat66);
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        java.lang.Object obj74 = numberFormat72.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat72);
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        java.text.NumberFormat numberFormat77 = fractionFormat75.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction79 = fractionFormat75.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1L) + "'", obj74, (-1L));
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
    }
}

