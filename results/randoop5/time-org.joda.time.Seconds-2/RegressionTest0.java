import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds2 = org.joda.time.Seconds.secondsBetween(readablePartial0, readablePartial1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds2 = org.joda.time.Seconds.secondsBetween(readableInstant0, readableInstant1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadableInstant objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType5 = seconds1.getFieldType((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Weeks weeks3 = seconds0.toStandardWeeks();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = seconds1.compareTo(baseSingleFieldPeriod5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds4.dividedBy((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType8 = seconds4.getFieldType((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds4.dividedBy((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType8 = seconds4.getFieldType((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Hours hours2 = seconds1.toStandardHours();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(hours2);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Days days2 = seconds1.toStandardDays();
        // The following exception was thrown during execution in test generation
        try {
            int int4 = days2.getValue((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.junit.Assert.assertNotNull(seconds0);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds4.dividedBy((int) '4');
        java.lang.Class<?> wildcardClass7 = seconds6.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds18 = seconds15.multipliedBy((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483644 * 10");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"hi!\"");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds18 = seconds15.plus((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483644 + 10");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        java.lang.Class<?> wildcardClass1 = seconds0.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        int int5 = seconds1.getSeconds();
        org.joda.time.Seconds seconds6 = null;
        boolean boolean7 = seconds1.isLessThan(seconds6);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = seconds1.getValue(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        boolean boolean12 = seconds6.isGreaterThan(seconds11);
        java.lang.Class<?> wildcardClass13 = seconds6.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        java.lang.String str17 = seconds15.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2147483644S" + "'", str17, "PT2147483644S");
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Period period3 = seconds1.toPeriod();
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod4 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int5 = seconds1.compareTo(baseSingleFieldPeriod4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.MutablePeriod mutablePeriod16 = seconds9.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = seconds9.getValue((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod17 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int18 = seconds15.compareTo(baseSingleFieldPeriod17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        java.lang.Class<?> wildcardClass6 = seconds5.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        java.lang.String str3 = seconds1.toString();
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0S" + "'", str3, "PT0S");
        org.junit.Assert.assertNotNull(duration4);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.DurationFieldType durationFieldType26 = seconds4.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType28 = seconds4.getFieldType((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"\"");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds6 = seconds1.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType7 = seconds1.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = seconds9.getValue((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.DurationFieldType durationFieldType14 = seconds4.getFieldType();
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.Seconds seconds21 = seconds19.dividedBy((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds22 = seconds4.plus(seconds21);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483644 + 41297762");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds2 = seconds0.minus((int) (byte) 0);
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod3 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int4 = seconds2.compareTo(baseSingleFieldPeriod3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.Minutes minutes1 = seconds0.toStandardMinutes();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds6 = seconds4.plus((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483644 + 100");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        int int17 = seconds4.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds29 = seconds27.dividedBy((int) '4');
        int int30 = seconds27.size();
        int int31 = seconds22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
        org.joda.time.DurationFieldType durationFieldType32 = seconds22.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds33 = seconds4.plus(seconds22);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483644 + 2147483644");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483644 + "'", int17 == 2147483644);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.DurationFieldType durationFieldType3 = seconds1.getFieldType();
        java.lang.Class<?> wildcardClass4 = seconds1.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        // The following exception was thrown during execution in test generation
        try {
            int int6 = seconds1.getValue(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        boolean boolean9 = seconds1.isLessThan(seconds8);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = seconds1.getValue((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds3 = seconds0.plus(1);
        // The following exception was thrown during execution in test generation
        try {
            int int5 = seconds3.getValue((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds3);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.DurationFieldType durationFieldType3 = seconds1.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            int int5 = seconds1.getValue(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType3);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds33.toMutablePeriod();
        int int41 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds43 = seconds15.minus(2147483644);
        org.joda.time.Seconds seconds45 = seconds43.multipliedBy(0);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.DurationFieldType durationFieldType3 = seconds1.getFieldType();
        org.joda.time.Hours hours4 = seconds1.toStandardHours();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.DurationFieldType durationFieldType23 = seconds22.getFieldType();
        boolean boolean24 = seconds20.isSupported(durationFieldType23);
        boolean boolean25 = seconds0.isSupported(durationFieldType23);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = seconds0.getValue(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        // The following exception was thrown during execution in test generation
        try {
            int int2 = seconds0.getValue((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Weeks weeks2 = seconds0.toStandardWeeks();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        boolean boolean17 = seconds9.isLessThan(seconds14);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds29 = seconds27.dividedBy((int) '4');
        int int30 = seconds27.size();
        int int31 = seconds22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        boolean boolean35 = seconds27.isLessThan(seconds32);
        boolean boolean36 = seconds14.isLessThan(seconds27);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.secondsIn(readableInterval37);
        org.joda.time.DurationFieldType durationFieldType39 = seconds38.getFieldType();
        org.joda.time.Seconds seconds41 = seconds38.dividedBy((-1));
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.secondsIn(readableInterval42);
        int int44 = seconds43.size();
        org.joda.time.Seconds seconds46 = seconds43.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.secondsIn(readableInterval47);
        org.joda.time.DurationFieldType durationFieldType49 = seconds48.getFieldType();
        boolean boolean50 = seconds46.isSupported(durationFieldType49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = seconds51.get(durationFieldType52);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds55 = seconds51.minus(seconds54);
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = seconds56.get(durationFieldType57);
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds60 = seconds56.minus(seconds59);
        org.joda.time.Seconds seconds62 = seconds60.dividedBy((int) '4');
        int int63 = seconds60.size();
        int int64 = seconds55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds60);
        org.joda.time.Seconds seconds66 = seconds60.plus(0);
        org.joda.time.Seconds seconds67 = seconds46.minus(seconds60);
        org.joda.time.DurationFieldType durationFieldType68 = seconds46.getFieldType();
        boolean boolean69 = seconds38.isSupported(durationFieldType68);
        int int70 = seconds14.get(durationFieldType68);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2147483647 + "'", int70 == 2147483647);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        java.lang.Class<?> wildcardClass24 = seconds15.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        // The following exception was thrown during execution in test generation
        try {
            int int2 = seconds0.getValue((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = seconds3.get(durationFieldType4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds7 = seconds3.minus(seconds6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds14 = seconds12.dividedBy((int) '4');
        int int15 = seconds12.size();
        int int16 = seconds7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.joda.time.Seconds seconds18 = seconds12.plus(0);
        java.lang.String str19 = seconds18.toString();
        org.joda.time.Period period20 = seconds18.toPeriod();
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        boolean boolean26 = seconds18.equals((java.lang.Object) seconds22);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = seconds27.get(durationFieldType28);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds31 = seconds27.minus(seconds30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds36 = seconds32.minus(seconds35);
        org.joda.time.Seconds seconds38 = seconds36.dividedBy((int) '4');
        int int39 = seconds36.size();
        int int40 = seconds31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds36);
        org.joda.time.Seconds seconds42 = seconds36.plus(0);
        org.joda.time.MutablePeriod mutablePeriod43 = seconds36.toMutablePeriod();
        int int44 = seconds18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds36);
        org.joda.time.Seconds seconds46 = seconds18.minus(2147483644);
        org.joda.time.Seconds seconds47 = seconds0.minus(seconds46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = seconds51.get(durationFieldType52);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds55 = seconds51.minus(seconds54);
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = seconds56.get(durationFieldType57);
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds60 = seconds56.minus(seconds59);
        org.joda.time.Seconds seconds62 = seconds60.dividedBy((int) '4');
        int int63 = seconds60.size();
        int int64 = seconds55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds60);
        org.joda.time.Seconds seconds66 = seconds60.plus(0);
        java.lang.String str67 = seconds66.toString();
        org.joda.time.Period period68 = seconds66.toPeriod();
        org.joda.time.ReadableInterval readableInterval69 = null;
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.secondsIn(readableInterval69);
        org.joda.time.Seconds seconds71 = seconds70.negated();
        org.joda.time.MutablePeriod mutablePeriod72 = seconds70.toMutablePeriod();
        org.joda.time.Duration duration73 = seconds70.toStandardDuration();
        boolean boolean74 = seconds66.equals((java.lang.Object) seconds70);
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType76 = null;
        int int77 = seconds75.get(durationFieldType76);
        org.joda.time.Seconds seconds78 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds79 = seconds75.minus(seconds78);
        org.joda.time.Seconds seconds80 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType81 = null;
        int int82 = seconds80.get(durationFieldType81);
        org.joda.time.Seconds seconds83 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds84 = seconds80.minus(seconds83);
        org.joda.time.Seconds seconds86 = seconds84.dividedBy((int) '4');
        int int87 = seconds84.size();
        int int88 = seconds79.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds84);
        org.joda.time.Seconds seconds90 = seconds84.plus(0);
        org.joda.time.MutablePeriod mutablePeriod91 = seconds84.toMutablePeriod();
        int int92 = seconds66.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds84);
        org.joda.time.Seconds seconds94 = seconds66.minus(2147483644);
        org.joda.time.Seconds seconds95 = seconds48.minus(seconds94);
        org.joda.time.Seconds seconds97 = org.joda.time.Seconds.seconds(2147483644);
        boolean boolean98 = seconds48.isLessThan(seconds97);
        boolean boolean99 = seconds46.isLessThan(seconds48);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT2147483644S" + "'", str19, "PT2147483644S");
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "PT2147483644S" + "'", str67, "PT2147483644S");
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(mutablePeriod72);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(seconds90);
        org.junit.Assert.assertNotNull(mutablePeriod91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(seconds94);
        org.junit.Assert.assertNotNull(seconds95);
        org.junit.Assert.assertNotNull(seconds97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds33.toMutablePeriod();
        int int41 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        java.lang.Class<?> wildcardClass42 = seconds33.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        int int13 = seconds8.size();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        org.joda.time.Seconds seconds18 = seconds15.dividedBy((-1));
        int int19 = seconds15.getSeconds();
        org.joda.time.Seconds seconds20 = seconds8.minus(seconds15);
        boolean boolean21 = seconds6.isGreaterThan(seconds20);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType23 = seconds20.getFieldType((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        org.joda.time.Hours hours1 = seconds0.toStandardHours();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType3 = hours1.getFieldType(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        java.lang.Class<?> wildcardClass6 = seconds5.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod28 = seconds27.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy((-1));
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds22);
        org.joda.time.DurationFieldType durationFieldType24 = seconds23.getFieldType();
        int int25 = seconds15.get(durationFieldType24);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType27 = seconds15.getFieldType((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2147483644 + "'", int25 == 2147483644);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        int int5 = seconds1.getSeconds();
        org.joda.time.Duration duration6 = seconds1.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(duration6);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds17 = seconds0.multipliedBy((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483648 * 35");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        java.lang.Class<?> wildcardClass4 = seconds1.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.DurationFieldType durationFieldType14 = seconds4.getFieldType();
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.MutablePeriod mutablePeriod20 = seconds18.toMutablePeriod();
        boolean boolean21 = seconds4.isGreaterThan(seconds18);
        int int22 = seconds18.size();
        java.lang.Class<?> wildcardClass23 = seconds18.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds2 = seconds0.minus((int) (byte) 0);
        org.joda.time.PeriodType periodType3 = seconds0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = seconds0.get(durationFieldType4);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) 10);
        int int2 = seconds1.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.joda.time.PeriodType periodType14 = seconds1.getPeriodType();
        java.lang.Class<?> wildcardClass15 = periodType14.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType8 = seconds3.getFieldType((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds5 = seconds1.minus((int) (byte) -1);
        java.lang.Class<?> wildcardClass6 = seconds1.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Duration duration1 = seconds0.toStandardDuration();
        org.joda.time.Period period2 = seconds0.toPeriod();
        org.joda.time.Hours hours3 = seconds0.toStandardHours();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours3);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType55 = seconds53.getFieldType((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds0.getFieldType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            int int9 = seconds0.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        java.lang.String str7 = seconds6.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT-1S" + "'", str7, "PT-1S");
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = seconds9.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        int int13 = seconds8.size();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        org.joda.time.Seconds seconds18 = seconds15.dividedBy((-1));
        int int19 = seconds15.getSeconds();
        org.joda.time.Seconds seconds20 = seconds8.minus(seconds15);
        boolean boolean21 = seconds6.isGreaterThan(seconds20);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = seconds20.getValue((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        boolean boolean17 = seconds9.isLessThan(seconds14);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType19 = seconds9.getFieldType((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds27 = seconds25.multipliedBy(2147483644);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483644 * 2147483644");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        java.lang.Class<?> wildcardClass54 = seconds9.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.PeriodType periodType7 = seconds5.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds8 = seconds6.dividedBy((int) '4');
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        java.lang.Object obj10 = null;
        boolean boolean11 = seconds8.equals(obj10);
        int int12 = seconds8.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds0.getFieldType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((int) ' ');
        org.joda.time.DurationFieldType durationFieldType8 = seconds7.getFieldType();
        java.lang.Class<?> wildcardClass9 = durationFieldType8.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 0);
        boolean boolean19 = seconds15.isLessThan(seconds18);
        java.lang.Class<?> wildcardClass20 = seconds18.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds5);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType9 = seconds7.getFieldType(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds7);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        int int9 = seconds8.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Duration duration10 = seconds7.toStandardDuration();
        int int11 = seconds7.getSeconds();
        boolean boolean12 = seconds1.isLessThan(seconds7);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType14 = seconds1.getFieldType(2147483644);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483644");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        boolean boolean12 = seconds6.isGreaterThan(seconds11);
        org.joda.time.Seconds seconds14 = seconds6.multipliedBy(1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType16 = seconds6.getFieldType((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds14);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.Seconds seconds21 = seconds19.dividedBy((int) '4');
        int int22 = seconds19.size();
        int int23 = seconds14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds19);
        org.joda.time.Seconds seconds25 = seconds19.plus(0);
        java.lang.String str26 = seconds25.toString();
        org.joda.time.Period period27 = seconds25.toPeriod();
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.secondsIn(readableInterval28);
        org.joda.time.Seconds seconds30 = seconds29.negated();
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds29.get(durationFieldType31);
        boolean boolean33 = seconds25.isLessThan(seconds29);
        org.joda.time.Seconds seconds34 = seconds9.minus(seconds25);
        org.joda.time.Duration duration35 = seconds25.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483644S" + "'", str26, "PT2147483644S");
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(duration35);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.secondsIn(readableInterval4);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds6);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = seconds6.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Seconds seconds6 = seconds1.minus(3);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType9 = seconds8.getPeriodType();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds12 = seconds8.multipliedBy(0);
        org.joda.time.Seconds seconds13 = seconds8.negated();
        org.joda.time.Period period14 = seconds13.toPeriod();
        boolean boolean15 = seconds6.equals((java.lang.Object) period14);
        org.joda.time.Seconds seconds17 = seconds6.dividedBy((int) (short) 10);
        org.joda.time.DurationFieldType durationFieldType19 = seconds6.getFieldType((int) (byte) 0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType19);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = seconds2.getValue(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        boolean boolean26 = seconds16.equals((java.lang.Object) seconds22);
        org.joda.time.MutablePeriod mutablePeriod27 = seconds16.toMutablePeriod();
        org.joda.time.Seconds seconds28 = seconds0.plus(seconds16);
        java.lang.Class<?> wildcardClass29 = seconds28.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        // The following exception was thrown during execution in test generation
        try {
            int int2 = seconds0.getValue((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        org.joda.time.Period period28 = seconds27.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        java.lang.String str6 = seconds5.toString();
        int int7 = seconds5.size();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = seconds5.getValue((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Seconds seconds7 = seconds5.negated();
        org.joda.time.PeriodType periodType8 = seconds5.getPeriodType();
        java.lang.Class<?> wildcardClass9 = seconds5.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.joda.time.PeriodType periodType14 = seconds1.getPeriodType();
        java.lang.String str15 = seconds1.toString();
        org.joda.time.Duration duration16 = seconds1.toStandardDuration();
        java.lang.String str17 = seconds1.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT1S" + "'", str15, "PT1S");
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT1S" + "'", str17, "PT1S");
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.DurationFieldType durationFieldType54 = seconds53.getFieldType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(durationFieldType54);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType55 = seconds9.getFieldType(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        org.joda.time.Hours hours2 = seconds0.toStandardHours();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(hours2);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = seconds4.getValue((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Duration duration30 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds32 = seconds28.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds34 = seconds28.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds36 = seconds28.minus(seconds35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds40.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = seconds44.minus(seconds47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = seconds49.minus(seconds52);
        org.joda.time.Seconds seconds55 = seconds53.dividedBy((int) '4');
        int int56 = seconds53.size();
        int int57 = seconds48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds53);
        org.joda.time.Seconds seconds59 = seconds53.plus(0);
        org.joda.time.MutablePeriod mutablePeriod60 = seconds53.toMutablePeriod();
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = seconds61.get(durationFieldType62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds65 = seconds61.minus(seconds64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = seconds66.get(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds70 = seconds66.minus(seconds69);
        org.joda.time.Seconds seconds72 = seconds70.dividedBy((int) '4');
        int int73 = seconds70.size();
        int int74 = seconds65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds70);
        org.joda.time.DurationFieldType durationFieldType75 = seconds65.getFieldType();
        int int76 = seconds53.get(durationFieldType75);
        boolean boolean77 = seconds40.isSupported(durationFieldType75);
        boolean boolean78 = seconds36.isSupported(durationFieldType75);
        boolean boolean79 = seconds10.isGreaterThan(seconds36);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType81 = seconds36.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483644 + "'", int76 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        boolean boolean72 = seconds64.isLessThan(seconds69);
        boolean boolean73 = seconds54.isLessThan(seconds64);
        org.joda.time.Seconds seconds75 = seconds54.multipliedBy((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType77 = seconds75.getFieldType(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(seconds75);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        boolean boolean9 = seconds1.isLessThan(seconds8);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType11 = seconds1.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds8 = seconds6.plus((int) (byte) 10);
        org.joda.time.Seconds seconds9 = seconds6.negated();
        java.lang.Class<?> wildcardClass10 = seconds9.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        int int17 = seconds15.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483644 + "'", int17 == 2147483644);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Duration duration2 = seconds1.toStandardDuration();
        org.joda.time.Hours hours3 = seconds1.toStandardHours();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(hours3);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.plus((int) (short) 0);
        java.lang.String str6 = seconds1.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT1S" + "'", str6, "PT1S");
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds1.get(durationFieldType3);
        org.joda.time.PeriodType periodType5 = seconds1.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds7 = seconds1.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        int int28 = seconds27.size();
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.seconds(2147483647);
        boolean boolean31 = seconds27.isGreaterThan(seconds30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds30);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds32);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        java.lang.Class<?> wildcardClass8 = seconds7.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        int int5 = seconds1.getSeconds();
        org.joda.time.Seconds seconds6 = null;
        boolean boolean7 = seconds1.isLessThan(seconds6);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = seconds1.getValue((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        int int27 = seconds26.size();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.joda.time.PeriodType periodType14 = seconds1.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = seconds1.getValue((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(periodType14);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Period period10 = seconds5.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = seconds5.getValue((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType56 = seconds53.getFieldType(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds8 = seconds6.plus((int) (byte) 10);
        org.joda.time.Seconds seconds9 = seconds6.negated();
        org.joda.time.DurationFieldType durationFieldType11 = seconds9.getFieldType((int) (byte) 0);
        org.joda.time.Duration duration12 = seconds9.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        java.lang.Class<?> wildcardClass5 = seconds0.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Duration duration3 = seconds0.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(duration3);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int9 = seconds8.getSeconds();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds11 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds13 = seconds5.plus(0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType15 = seconds13.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.Seconds seconds20 = seconds17.plus(0);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = seconds20.getValue(2147483644);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483644");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(seconds20);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Duration duration3 = seconds2.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration3);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        int int28 = seconds27.size();
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.seconds(2147483647);
        boolean boolean31 = seconds27.isGreaterThan(seconds30);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds33 = seconds30.multipliedBy(100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 100");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.Seconds seconds40 = seconds19.plus(seconds39);
        org.joda.time.MutablePeriod mutablePeriod41 = seconds40.toMutablePeriod();
        org.joda.time.Period period42 = seconds40.toPeriod();
        org.joda.time.Seconds seconds43 = seconds40.negated();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(seconds43);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.plus((int) (short) 0);
        java.lang.Class<?> wildcardClass6 = seconds5.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType28 = seconds27.getPeriodType();
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.dividedBy((-1));
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds33);
        org.joda.time.Seconds seconds35 = seconds33.negated();
        org.joda.time.Seconds seconds36 = seconds27.plus(seconds33);
        java.lang.Class<?> wildcardClass37 = seconds27.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) 100);
        java.lang.Class<?> wildcardClass2 = seconds1.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((-1));
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) 100);
        org.joda.time.Days days2 = seconds1.toStandardDays();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType4 = seconds1.getFieldType((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds1.get(durationFieldType3);
        org.joda.time.PeriodType periodType5 = seconds1.getPeriodType();
        java.lang.String str6 = seconds1.toString();
        org.joda.time.Seconds seconds8 = seconds1.dividedBy(10);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.secondsIn(readableInterval9);
        org.joda.time.Seconds seconds11 = seconds10.negated();
        org.joda.time.Seconds seconds13 = seconds10.minus((int) '#');
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType16 = seconds15.getPeriodType();
        org.joda.time.Duration duration17 = seconds15.toStandardDuration();
        org.joda.time.Seconds seconds19 = seconds15.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.Duration duration21 = seconds19.toStandardDuration();
        org.joda.time.Seconds seconds22 = seconds19.negated();
        org.joda.time.DurationFieldType durationFieldType23 = seconds19.getFieldType();
        boolean boolean24 = seconds10.isSupported(durationFieldType23);
        boolean boolean25 = seconds8.isSupported(durationFieldType23);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.Seconds seconds40 = seconds19.plus(seconds39);
        org.joda.time.Duration duration41 = seconds39.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(duration41);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Duration duration11 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds9.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds15 = seconds9.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds9.minus(seconds16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        boolean boolean19 = seconds1.isSupported(durationFieldType18);
        org.joda.time.PeriodType periodType20 = seconds1.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(periodType20);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.PeriodType periodType8 = seconds1.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = seconds1.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType6 = seconds4.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration3);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.plus((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int7 = seconds1.getValue((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds8 = seconds6.plus((int) (byte) 10);
        org.joda.time.Seconds seconds9 = seconds6.negated();
        org.joda.time.DurationFieldType durationFieldType11 = seconds9.getFieldType((int) (byte) 0);
        java.lang.String str12 = seconds9.toString();
        java.lang.String str13 = seconds9.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT0S" + "'", str12, "PT0S");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT0S" + "'", str13, "PT0S");
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.DurationFieldType durationFieldType14 = seconds4.getFieldType();
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.MutablePeriod mutablePeriod20 = seconds18.toMutablePeriod();
        boolean boolean21 = seconds4.isGreaterThan(seconds18);
        int int22 = seconds18.size();
        org.joda.time.Period period23 = seconds18.toPeriod();
        org.joda.time.Seconds seconds25 = seconds18.plus((int) ' ');
        org.joda.time.Period period26 = seconds18.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(period26);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        int int10 = seconds9.size();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy(100);
        org.joda.time.PeriodType periodType13 = seconds12.getPeriodType();
        org.joda.time.Seconds seconds15 = seconds12.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds17 = seconds15.minus((-1));
        org.joda.time.DurationFieldType durationFieldType19 = seconds15.getFieldType((int) (byte) 0);
        boolean boolean20 = seconds5.isSupported(durationFieldType19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        int int26 = seconds22.getSeconds();
        java.lang.String str27 = seconds22.toString();
        org.joda.time.Seconds seconds29 = seconds22.minus((int) (short) 10);
        org.joda.time.Seconds seconds30 = seconds5.minus(seconds22);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType33 = seconds30.getFieldType((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT0S" + "'", str27, "PT0S");
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        boolean boolean12 = seconds6.isGreaterThan(seconds11);
        org.joda.time.Seconds seconds14 = seconds6.multipliedBy(0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds14);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        org.joda.time.Seconds seconds10 = seconds1.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds1.minus(2147483647);
        org.joda.time.Seconds seconds14 = seconds1.dividedBy((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = seconds1.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = seconds1.getValue(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Weeks weeks3 = seconds1.toStandardWeeks();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.DurationFieldType durationFieldType5 = seconds1.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.Seconds seconds4 = seconds2.plus((int) (byte) 100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        int int10 = seconds9.size();
        boolean boolean11 = seconds7.isLessThan(seconds9);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        int int14 = seconds13.size();
        org.joda.time.Seconds seconds16 = seconds13.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.secondsIn(readableInterval17);
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        boolean boolean20 = seconds16.isSupported(durationFieldType19);
        boolean boolean21 = seconds9.isSupported(durationFieldType19);
        int int22 = seconds4.get(durationFieldType19);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = seconds4.getValue(2147483644);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483644");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int9 = seconds8.getSeconds();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds11 = seconds5.minus(seconds8);
        int int12 = seconds11.getSeconds();
        java.lang.Class<?> wildcardClass13 = seconds11.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType20 = seconds19.getPeriodType();
        org.joda.time.Duration duration21 = seconds19.toStandardDuration();
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        boolean boolean23 = seconds17.equals((java.lang.Object) seconds19);
        int int24 = seconds17.size();
        org.joda.time.Seconds seconds26 = seconds17.plus(0);
        org.joda.time.Duration duration27 = seconds26.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(duration27);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = seconds17.getValue((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds27 = seconds23.negated();
        java.lang.Class<?> wildcardClass28 = seconds23.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        java.lang.Class<?> wildcardClass1 = seconds0.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) '#');
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy((-1));
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = seconds23.isSupported(durationFieldType24);
        org.joda.time.Seconds seconds27 = seconds23.plus((int) (byte) 1);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) '4');
        int int40 = seconds37.size();
        int int41 = seconds32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        org.joda.time.Seconds seconds43 = seconds37.plus(0);
        java.lang.String str44 = seconds43.toString();
        org.joda.time.Period period45 = seconds43.toPeriod();
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        org.joda.time.Seconds seconds48 = seconds47.negated();
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds47.get(durationFieldType49);
        boolean boolean51 = seconds43.isLessThan(seconds47);
        org.joda.time.Seconds seconds52 = seconds27.minus(seconds43);
        org.joda.time.Seconds seconds54 = seconds52.dividedBy((int) 'a');
        org.joda.time.Seconds seconds55 = seconds11.plus(seconds52);
        org.joda.time.Seconds seconds56 = seconds55.negated();
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = seconds57.get(durationFieldType58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds61 = seconds57.minus(seconds60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = seconds62.get(durationFieldType63);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds66 = seconds62.minus(seconds65);
        org.joda.time.Seconds seconds68 = seconds66.dividedBy((int) '4');
        int int69 = seconds66.size();
        int int70 = seconds61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds66);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = seconds71.get(durationFieldType72);
        boolean boolean74 = seconds66.isLessThan(seconds71);
        boolean boolean75 = seconds56.isLessThan(seconds66);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType78 = seconds77.getPeriodType();
        org.joda.time.Duration duration79 = seconds77.toStandardDuration();
        org.joda.time.Seconds seconds81 = seconds77.dividedBy((int) (byte) 10);
        int int82 = seconds56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds81);
        boolean boolean83 = seconds1.isGreaterThan(seconds56);
        org.joda.time.Seconds seconds85 = seconds1.multipliedBy((int) (byte) 0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2147483644S" + "'", str44, "PT2147483644S");
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(seconds85);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds3 = seconds0.plus(1);
        int int4 = seconds3.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod5 = seconds3.toMutablePeriod();
        java.lang.Class<?> wildcardClass6 = seconds3.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Seconds seconds7 = seconds5.negated();
        org.joda.time.Seconds seconds8 = seconds5.negated();
        java.lang.Class<?> wildcardClass9 = seconds5.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Duration duration30 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds32 = seconds28.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds34 = seconds28.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds36 = seconds28.minus(seconds35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds40.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = seconds44.minus(seconds47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = seconds49.minus(seconds52);
        org.joda.time.Seconds seconds55 = seconds53.dividedBy((int) '4');
        int int56 = seconds53.size();
        int int57 = seconds48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds53);
        org.joda.time.Seconds seconds59 = seconds53.plus(0);
        org.joda.time.MutablePeriod mutablePeriod60 = seconds53.toMutablePeriod();
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = seconds61.get(durationFieldType62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds65 = seconds61.minus(seconds64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = seconds66.get(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds70 = seconds66.minus(seconds69);
        org.joda.time.Seconds seconds72 = seconds70.dividedBy((int) '4');
        int int73 = seconds70.size();
        int int74 = seconds65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds70);
        org.joda.time.DurationFieldType durationFieldType75 = seconds65.getFieldType();
        int int76 = seconds53.get(durationFieldType75);
        boolean boolean77 = seconds40.isSupported(durationFieldType75);
        boolean boolean78 = seconds36.isSupported(durationFieldType75);
        boolean boolean79 = seconds10.isGreaterThan(seconds36);
        org.joda.time.Seconds seconds81 = seconds36.plus(1);
        org.joda.time.DurationFieldType durationFieldType82 = seconds36.getFieldType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483644 + "'", int76 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(durationFieldType82);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds55 = seconds50.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType58 = seconds57.getPeriodType();
        org.joda.time.Duration duration59 = seconds57.toStandardDuration();
        org.joda.time.Seconds seconds61 = seconds57.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.secondsIn(readableInterval62);
        org.joda.time.Seconds seconds64 = seconds63.negated();
        org.joda.time.MutablePeriod mutablePeriod65 = seconds63.toMutablePeriod();
        org.joda.time.Duration duration66 = seconds63.toStandardDuration();
        int int67 = seconds63.getSeconds();
        boolean boolean68 = seconds57.isLessThan(seconds63);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds73 = seconds69.minus(seconds72);
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType75 = null;
        int int76 = seconds74.get(durationFieldType75);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds78 = seconds74.minus(seconds77);
        org.joda.time.Seconds seconds80 = seconds78.dividedBy((int) '4');
        int int81 = seconds78.size();
        int int82 = seconds73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds78);
        org.joda.time.Seconds seconds84 = seconds78.plus(0);
        java.lang.String str85 = seconds84.toString();
        org.joda.time.Period period86 = seconds84.toPeriod();
        org.joda.time.ReadableInterval readableInterval87 = null;
        org.joda.time.Seconds seconds88 = org.joda.time.Seconds.secondsIn(readableInterval87);
        org.joda.time.Seconds seconds89 = seconds88.negated();
        org.joda.time.DurationFieldType durationFieldType90 = null;
        int int91 = seconds88.get(durationFieldType90);
        boolean boolean92 = seconds84.isLessThan(seconds88);
        org.joda.time.Seconds seconds93 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds88);
        org.joda.time.Seconds seconds94 = seconds57.plus(seconds88);
        org.joda.time.Seconds seconds95 = seconds55.plus(seconds88);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = seconds88.getValue(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "PT2147483644S" + "'", str85, "PT2147483644S");
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertNotNull(seconds89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(seconds93);
        org.junit.Assert.assertNotNull(seconds94);
        org.junit.Assert.assertNotNull(seconds95);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds7 = seconds4.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.Seconds seconds23 = seconds17.plus(0);
        org.joda.time.MutablePeriod mutablePeriod24 = seconds17.toMutablePeriod();
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = seconds25.get(durationFieldType26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds29 = seconds25.minus(seconds28);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds36 = seconds34.dividedBy((int) '4');
        int int37 = seconds34.size();
        int int38 = seconds29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds34);
        org.joda.time.DurationFieldType durationFieldType39 = seconds29.getFieldType();
        int int40 = seconds17.get(durationFieldType39);
        boolean boolean41 = seconds4.isSupported(durationFieldType39);
        boolean boolean42 = seconds0.isSupported(durationFieldType39);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds44 = seconds0.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2147483644 + "'", int40 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        org.joda.time.Seconds seconds10 = seconds1.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds1.minus(2147483647);
        java.lang.Class<?> wildcardClass13 = seconds12.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        int int27 = seconds10.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483644 + "'", int27 == 2147483644);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds15 = seconds13.multipliedBy(2147483647);
        java.lang.Class<?> wildcardClass16 = seconds15.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int9 = seconds8.getSeconds();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds11 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds13 = seconds5.plus(0);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = seconds5.getValue(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        int int8 = seconds1.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds7 = seconds5.minus((int) (byte) 0);
        boolean boolean8 = seconds4.isLessThan(seconds7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        org.joda.time.Duration duration13 = seconds11.toStandardDuration();
        org.joda.time.Seconds seconds15 = seconds11.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds17 = seconds11.dividedBy((int) (short) 1);
        boolean boolean18 = seconds4.equals((java.lang.Object) (short) 1);
        boolean boolean19 = seconds1.isGreaterThan(seconds4);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds24 = seconds20.minus(seconds23);
        org.joda.time.Seconds seconds26 = seconds23.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        org.joda.time.Seconds seconds31 = seconds28.dividedBy((-1));
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds28);
        int int33 = seconds28.size();
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.secondsIn(readableInterval34);
        org.joda.time.DurationFieldType durationFieldType36 = seconds35.getFieldType();
        org.joda.time.Seconds seconds38 = seconds35.dividedBy((-1));
        int int39 = seconds35.getSeconds();
        org.joda.time.Seconds seconds40 = seconds28.minus(seconds35);
        boolean boolean41 = seconds26.isGreaterThan(seconds40);
        boolean boolean42 = seconds1.isGreaterThan(seconds40);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds52 = seconds48.minus(seconds51);
        org.joda.time.Seconds seconds54 = seconds52.dividedBy((int) '4');
        int int55 = seconds52.size();
        int int56 = seconds47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds52);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType59 = seconds58.getFieldType();
        int int60 = seconds47.get(durationFieldType59);
        boolean boolean61 = seconds40.isSupported(durationFieldType59);
        org.joda.time.Seconds seconds63 = seconds40.dividedBy(10);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2147483644 + "'", int60 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(seconds63);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Duration duration30 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds32 = seconds28.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds34 = seconds28.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds36 = seconds28.minus(seconds35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds40.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = seconds44.minus(seconds47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = seconds49.minus(seconds52);
        org.joda.time.Seconds seconds55 = seconds53.dividedBy((int) '4');
        int int56 = seconds53.size();
        int int57 = seconds48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds53);
        org.joda.time.Seconds seconds59 = seconds53.plus(0);
        org.joda.time.MutablePeriod mutablePeriod60 = seconds53.toMutablePeriod();
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = seconds61.get(durationFieldType62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds65 = seconds61.minus(seconds64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = seconds66.get(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds70 = seconds66.minus(seconds69);
        org.joda.time.Seconds seconds72 = seconds70.dividedBy((int) '4');
        int int73 = seconds70.size();
        int int74 = seconds65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds70);
        org.joda.time.DurationFieldType durationFieldType75 = seconds65.getFieldType();
        int int76 = seconds53.get(durationFieldType75);
        boolean boolean77 = seconds40.isSupported(durationFieldType75);
        boolean boolean78 = seconds36.isSupported(durationFieldType75);
        boolean boolean79 = seconds10.isGreaterThan(seconds36);
        org.joda.time.Seconds seconds81 = seconds36.plus(1);
        org.joda.time.PeriodType periodType82 = seconds81.getPeriodType();
        org.joda.time.Seconds seconds84 = seconds81.plus((int) (short) 10);
        org.joda.time.Seconds seconds86 = seconds84.dividedBy((int) (byte) -1);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483644 + "'", int76 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds86);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 0);
        boolean boolean19 = seconds15.isLessThan(seconds18);
        org.joda.time.MutablePeriod mutablePeriod20 = seconds18.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(mutablePeriod20);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy((-1));
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds22);
        org.joda.time.DurationFieldType durationFieldType24 = seconds23.getFieldType();
        int int25 = seconds15.get(durationFieldType24);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType27 = seconds15.getFieldType((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2147483644 + "'", int25 == 2147483644);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        org.joda.time.Duration duration23 = seconds21.toStandardDuration();
        org.joda.time.Seconds seconds25 = seconds21.multipliedBy(0);
        org.joda.time.Seconds seconds26 = seconds21.negated();
        org.joda.time.Seconds seconds27 = seconds19.plus(seconds21);
        java.lang.String str28 = seconds19.toString();
        org.joda.time.Seconds seconds29 = seconds17.plus(seconds19);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.THREE;
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        int int32 = seconds30.getSeconds();
        org.joda.time.Seconds seconds34 = seconds30.minus((int) (byte) 0);
        boolean boolean35 = seconds19.isGreaterThan(seconds30);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.secondsIn(readableInterval36);
        org.joda.time.DurationFieldType durationFieldType38 = seconds37.getFieldType();
        org.joda.time.Seconds seconds40 = seconds37.dividedBy((-1));
        boolean boolean41 = seconds19.isLessThan(seconds40);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT1S" + "'", str28, "PT1S");
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 3 + "'", int32 == 3);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = seconds3.get(durationFieldType4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds7 = seconds3.minus(seconds6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds14 = seconds12.dividedBy((int) '4');
        int int15 = seconds12.size();
        int int16 = seconds7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.joda.time.Seconds seconds18 = seconds12.plus(0);
        java.lang.String str19 = seconds18.toString();
        org.joda.time.Period period20 = seconds18.toPeriod();
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        boolean boolean26 = seconds18.equals((java.lang.Object) seconds22);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = seconds27.get(durationFieldType28);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds31 = seconds27.minus(seconds30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds36 = seconds32.minus(seconds35);
        org.joda.time.Seconds seconds38 = seconds36.dividedBy((int) '4');
        int int39 = seconds36.size();
        int int40 = seconds31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds36);
        org.joda.time.Seconds seconds42 = seconds36.plus(0);
        org.joda.time.MutablePeriod mutablePeriod43 = seconds36.toMutablePeriod();
        int int44 = seconds18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds36);
        org.joda.time.Seconds seconds46 = seconds18.minus(2147483644);
        org.joda.time.Seconds seconds47 = seconds0.minus(seconds46);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds49);
        boolean boolean51 = seconds0.isLessThan(seconds50);
        java.lang.String str52 = seconds0.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT2147483644S" + "'", str19, "PT2147483644S");
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT2147483647S" + "'", str52, "PT2147483647S");
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType6 = seconds5.getPeriodType();
        org.joda.time.Duration duration7 = seconds5.toStandardDuration();
        org.joda.time.Seconds seconds9 = seconds5.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds10 = seconds9.negated();
        org.joda.time.Seconds seconds11 = seconds9.negated();
        org.joda.time.Seconds seconds13 = seconds9.dividedBy((-1));
        boolean boolean14 = seconds1.isLessThan(seconds9);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) '#');
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy((-1));
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = seconds23.isSupported(durationFieldType24);
        org.joda.time.Seconds seconds27 = seconds23.plus((int) (byte) 1);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) '4');
        int int40 = seconds37.size();
        int int41 = seconds32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        org.joda.time.Seconds seconds43 = seconds37.plus(0);
        java.lang.String str44 = seconds43.toString();
        org.joda.time.Period period45 = seconds43.toPeriod();
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        org.joda.time.Seconds seconds48 = seconds47.negated();
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds47.get(durationFieldType49);
        boolean boolean51 = seconds43.isLessThan(seconds47);
        org.joda.time.Seconds seconds52 = seconds27.minus(seconds43);
        org.joda.time.Seconds seconds54 = seconds52.dividedBy((int) 'a');
        org.joda.time.Seconds seconds55 = seconds11.plus(seconds52);
        org.joda.time.Seconds seconds56 = seconds55.negated();
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = seconds57.get(durationFieldType58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds61 = seconds57.minus(seconds60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = seconds62.get(durationFieldType63);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds66 = seconds62.minus(seconds65);
        org.joda.time.Seconds seconds68 = seconds66.dividedBy((int) '4');
        int int69 = seconds66.size();
        int int70 = seconds61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds66);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = seconds71.get(durationFieldType72);
        boolean boolean74 = seconds66.isLessThan(seconds71);
        boolean boolean75 = seconds56.isLessThan(seconds66);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType78 = seconds77.getPeriodType();
        org.joda.time.Duration duration79 = seconds77.toStandardDuration();
        org.joda.time.Seconds seconds81 = seconds77.dividedBy((int) (byte) 10);
        int int82 = seconds56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds81);
        boolean boolean83 = seconds1.isGreaterThan(seconds56);
        java.lang.Class<?> wildcardClass84 = seconds56.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2147483644S" + "'", str44, "PT2147483644S");
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds7 = seconds1.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        org.joda.time.DurationFieldType durationFieldType10 = seconds1.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = seconds1.getFieldType((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        int int2 = seconds0.getSeconds();
        org.joda.time.Seconds seconds4 = seconds0.minus((int) (byte) 0);
        org.joda.time.MutablePeriod mutablePeriod5 = seconds0.toMutablePeriod();
        int int6 = seconds0.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 3 + "'", int2 == 3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3 + "'", int6 == 3);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Period period2 = seconds1.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Period period4 = seconds1.toPeriod();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType6 = seconds5.getPeriodType();
        boolean boolean7 = seconds1.isLessThan(seconds5);
        int int8 = seconds5.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Duration duration7 = seconds5.toStandardDuration();
        org.joda.time.Seconds seconds8 = seconds5.negated();
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.secondsIn(readableInterval25);
        org.joda.time.DurationFieldType durationFieldType27 = seconds26.getFieldType();
        org.joda.time.Seconds seconds29 = seconds26.dividedBy((-1));
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds26);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        boolean boolean32 = seconds30.isSupported(durationFieldType31);
        org.joda.time.Seconds seconds34 = seconds30.plus((int) (byte) 1);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = seconds35.get(durationFieldType36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds39 = seconds35.minus(seconds38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = seconds40.get(durationFieldType41);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds44 = seconds40.minus(seconds43);
        org.joda.time.Seconds seconds46 = seconds44.dividedBy((int) '4');
        int int47 = seconds44.size();
        int int48 = seconds39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds44);
        org.joda.time.Seconds seconds50 = seconds44.plus(0);
        java.lang.String str51 = seconds50.toString();
        org.joda.time.Period period52 = seconds50.toPeriod();
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.secondsIn(readableInterval53);
        org.joda.time.Seconds seconds55 = seconds54.negated();
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds54.get(durationFieldType56);
        boolean boolean58 = seconds50.isLessThan(seconds54);
        org.joda.time.Seconds seconds59 = seconds34.minus(seconds50);
        org.joda.time.Seconds seconds61 = seconds59.dividedBy((int) 'a');
        org.joda.time.Seconds seconds62 = seconds18.plus(seconds59);
        org.joda.time.Seconds seconds63 = seconds62.negated();
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds67 = seconds65.minus((int) (byte) 0);
        boolean boolean68 = seconds64.isLessThan(seconds67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds72 = seconds70.minus((int) (byte) 0);
        boolean boolean73 = seconds69.isLessThan(seconds72);
        org.joda.time.Period period74 = seconds69.toPeriod();
        int int75 = seconds67.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds69);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType78 = seconds77.getFieldType();
        boolean boolean79 = seconds67.isSupported(durationFieldType78);
        int int80 = seconds63.get(durationFieldType78);
        boolean boolean81 = seconds8.isSupported(durationFieldType78);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PT2147483644S" + "'", str51, "PT2147483644S");
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds1.get(durationFieldType3);
        org.joda.time.PeriodType periodType5 = seconds1.getPeriodType();
        java.lang.String str6 = seconds1.toString();
        org.joda.time.Seconds seconds8 = seconds1.dividedBy(10);
        org.joda.time.Seconds seconds10 = seconds1.dividedBy((int) 'a');
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.secondsIn(readableInterval11);
        org.joda.time.DurationFieldType durationFieldType13 = seconds12.getFieldType();
        org.joda.time.Seconds seconds15 = seconds12.dividedBy((-1));
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds12);
        int int17 = seconds12.size();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy((-1));
        int int23 = seconds19.getSeconds();
        org.joda.time.Seconds seconds24 = seconds12.minus(seconds19);
        org.joda.time.Seconds seconds26 = seconds24.multipliedBy(2147483647);
        org.joda.time.Seconds seconds27 = null;
        boolean boolean28 = seconds24.isGreaterThan(seconds27);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        int int28 = seconds27.size();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds30 = seconds27.multipliedBy(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483644 * 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Period period6 = seconds1.toPeriod();
        org.joda.time.Duration duration7 = seconds1.toStandardDuration();
        int int8 = seconds1.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType5 = seconds4.getPeriodType();
        org.joda.time.Duration duration6 = seconds4.toStandardDuration();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.MutablePeriod mutablePeriod8 = seconds1.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod8);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Duration duration10 = seconds7.toStandardDuration();
        int int11 = seconds7.getSeconds();
        boolean boolean12 = seconds1.isLessThan(seconds7);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType15 = seconds14.getPeriodType();
        org.joda.time.Duration duration16 = seconds14.toStandardDuration();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds20 = seconds18.minus((int) (byte) 0);
        boolean boolean21 = seconds17.isLessThan(seconds20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType25 = seconds24.getPeriodType();
        org.joda.time.Duration duration26 = seconds24.toStandardDuration();
        org.joda.time.Seconds seconds28 = seconds24.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds30 = seconds24.dividedBy((int) (short) 1);
        boolean boolean31 = seconds17.equals((java.lang.Object) (short) 1);
        boolean boolean32 = seconds14.isGreaterThan(seconds17);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds36.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.secondsIn(readableInterval40);
        org.joda.time.DurationFieldType durationFieldType42 = seconds41.getFieldType();
        org.joda.time.Seconds seconds44 = seconds41.dividedBy((-1));
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds41);
        int int46 = seconds41.size();
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.secondsIn(readableInterval47);
        org.joda.time.DurationFieldType durationFieldType49 = seconds48.getFieldType();
        org.joda.time.Seconds seconds51 = seconds48.dividedBy((-1));
        int int52 = seconds48.getSeconds();
        org.joda.time.Seconds seconds53 = seconds41.minus(seconds48);
        boolean boolean54 = seconds39.isGreaterThan(seconds53);
        boolean boolean55 = seconds14.isGreaterThan(seconds53);
        boolean boolean56 = seconds7.isGreaterThan(seconds14);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType58 = seconds7.getFieldType(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Duration duration10 = seconds7.toStandardDuration();
        int int11 = seconds7.getSeconds();
        boolean boolean12 = seconds1.isLessThan(seconds7);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.dividedBy((int) '4');
        int int25 = seconds22.size();
        int int26 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        org.joda.time.Seconds seconds28 = seconds22.plus(0);
        java.lang.String str29 = seconds28.toString();
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn(readableInterval31);
        org.joda.time.Seconds seconds33 = seconds32.negated();
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds32.get(durationFieldType34);
        boolean boolean36 = seconds28.isLessThan(seconds32);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds32);
        org.joda.time.Seconds seconds38 = seconds1.plus(seconds32);
        org.joda.time.MutablePeriod mutablePeriod39 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds41 = seconds1.multipliedBy((int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds43 = seconds41.dividedBy((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2147483644S" + "'", str29, "PT2147483644S");
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(seconds41);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds15 = seconds13.multipliedBy(2147483647);
        org.joda.time.Seconds seconds16 = seconds13.negated();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.Seconds seconds17 = seconds0.multipliedBy(1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType19 = seconds0.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds7 = seconds1.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        int int10 = seconds1.size();
        org.joda.time.MutablePeriod mutablePeriod11 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(seconds12);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds0.getFieldType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((int) ' ');
        org.joda.time.DurationFieldType durationFieldType8 = seconds7.getFieldType();
        org.joda.time.DurationFieldType durationFieldType9 = seconds7.getFieldType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((-2147483644));
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        boolean boolean12 = seconds6.isGreaterThan(seconds11);
        org.joda.time.Seconds seconds14 = seconds6.multipliedBy(1);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType17 = seconds16.getPeriodType();
        org.joda.time.Duration duration18 = seconds16.toStandardDuration();
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds16);
        org.joda.time.Seconds seconds21 = seconds16.minus(3);
        int int22 = seconds14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds21);
        java.lang.Class<?> wildcardClass23 = seconds21.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds4.dividedBy((int) '4');
        org.joda.time.Seconds seconds8 = seconds6.minus(2147483644);
        java.lang.Class<?> wildcardClass9 = seconds6.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.plus((int) (short) 0);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds9.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.dividedBy((int) '4');
        int int25 = seconds22.size();
        int int26 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        org.joda.time.Seconds seconds28 = seconds22.plus(0);
        org.joda.time.MutablePeriod mutablePeriod29 = seconds22.toMutablePeriod();
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = seconds35.get(durationFieldType36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds39 = seconds35.minus(seconds38);
        org.joda.time.Seconds seconds41 = seconds39.dividedBy((int) '4');
        int int42 = seconds39.size();
        int int43 = seconds34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds39);
        org.joda.time.DurationFieldType durationFieldType44 = seconds34.getFieldType();
        int int45 = seconds22.get(durationFieldType44);
        boolean boolean46 = seconds9.isSupported(durationFieldType44);
        org.joda.time.Seconds seconds47 = seconds5.plus(seconds9);
        org.joda.time.Period period48 = seconds5.toPeriod();
        boolean boolean50 = seconds5.equals((java.lang.Object) (byte) 0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2147483644 + "'", int45 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Period period7 = seconds3.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = seconds3.getValue(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) 10);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.secondsIn(readableInterval2);
        org.joda.time.Seconds seconds4 = seconds3.negated();
        java.lang.String str5 = seconds3.toString();
        int int6 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds3);
        org.joda.time.DurationFieldType durationFieldType7 = seconds3.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod8 = seconds3.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT0S" + "'", str5, "PT0S");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Duration duration30 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds32 = seconds28.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds34 = seconds28.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds36 = seconds28.minus(seconds35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds40.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = seconds44.minus(seconds47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = seconds49.minus(seconds52);
        org.joda.time.Seconds seconds55 = seconds53.dividedBy((int) '4');
        int int56 = seconds53.size();
        int int57 = seconds48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds53);
        org.joda.time.Seconds seconds59 = seconds53.plus(0);
        org.joda.time.MutablePeriod mutablePeriod60 = seconds53.toMutablePeriod();
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = seconds61.get(durationFieldType62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds65 = seconds61.minus(seconds64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = seconds66.get(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds70 = seconds66.minus(seconds69);
        org.joda.time.Seconds seconds72 = seconds70.dividedBy((int) '4');
        int int73 = seconds70.size();
        int int74 = seconds65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds70);
        org.joda.time.DurationFieldType durationFieldType75 = seconds65.getFieldType();
        int int76 = seconds53.get(durationFieldType75);
        boolean boolean77 = seconds40.isSupported(durationFieldType75);
        boolean boolean78 = seconds36.isSupported(durationFieldType75);
        boolean boolean79 = seconds10.isGreaterThan(seconds36);
        org.joda.time.Seconds seconds81 = seconds36.plus(1);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = seconds36.getValue((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483644 + "'", int76 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(seconds81);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        boolean boolean17 = seconds9.isLessThan(seconds14);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType19 = seconds9.getFieldType((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds1.get(durationFieldType3);
        org.joda.time.PeriodType periodType5 = seconds1.getPeriodType();
        java.lang.String str6 = seconds1.toString();
        org.joda.time.Seconds seconds8 = seconds1.dividedBy(10);
        int int10 = seconds8.getValue(0);
        org.joda.time.PeriodType periodType11 = seconds8.getPeriodType();
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType14 = seconds13.getPeriodType();
        org.joda.time.Duration duration15 = seconds13.toStandardDuration();
        org.joda.time.Seconds seconds17 = seconds13.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds18 = seconds17.negated();
        org.joda.time.Duration duration19 = seconds17.toStandardDuration();
        org.joda.time.Seconds seconds20 = seconds17.negated();
        org.joda.time.DurationFieldType durationFieldType21 = seconds17.getFieldType();
        int int22 = seconds8.get(durationFieldType21);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Period period2 = seconds1.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.PeriodType periodType4 = seconds1.getPeriodType();
        java.lang.Class<?> wildcardClass5 = seconds1.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Duration duration30 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds32 = seconds28.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds34 = seconds28.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds36 = seconds28.minus(seconds35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds40.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = seconds44.minus(seconds47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = seconds49.minus(seconds52);
        org.joda.time.Seconds seconds55 = seconds53.dividedBy((int) '4');
        int int56 = seconds53.size();
        int int57 = seconds48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds53);
        org.joda.time.Seconds seconds59 = seconds53.plus(0);
        org.joda.time.MutablePeriod mutablePeriod60 = seconds53.toMutablePeriod();
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = seconds61.get(durationFieldType62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds65 = seconds61.minus(seconds64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = seconds66.get(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds70 = seconds66.minus(seconds69);
        org.joda.time.Seconds seconds72 = seconds70.dividedBy((int) '4');
        int int73 = seconds70.size();
        int int74 = seconds65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds70);
        org.joda.time.DurationFieldType durationFieldType75 = seconds65.getFieldType();
        int int76 = seconds53.get(durationFieldType75);
        boolean boolean77 = seconds40.isSupported(durationFieldType75);
        boolean boolean78 = seconds36.isSupported(durationFieldType75);
        boolean boolean79 = seconds10.isGreaterThan(seconds36);
        org.joda.time.Seconds seconds81 = seconds36.dividedBy((int) ' ');
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int83 = seconds36.compareTo(baseSingleFieldPeriod82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483644 + "'", int76 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(seconds81);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        boolean boolean72 = seconds64.isLessThan(seconds69);
        boolean boolean73 = seconds54.isLessThan(seconds64);
        org.joda.time.DurationFieldType durationFieldType74 = seconds64.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            int int76 = seconds64.getValue((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(durationFieldType74);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.Seconds seconds17 = seconds0.multipliedBy(1);
        org.joda.time.Duration duration18 = seconds0.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(duration18);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Seconds seconds6 = seconds1.minus(3);
        org.joda.time.Seconds seconds8 = seconds1.dividedBy(3);
        org.joda.time.Duration duration9 = seconds1.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(duration9);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        boolean boolean17 = seconds9.isLessThan(seconds14);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds29 = seconds27.dividedBy((int) '4');
        int int30 = seconds27.size();
        int int31 = seconds22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        boolean boolean35 = seconds27.isLessThan(seconds32);
        boolean boolean36 = seconds14.isLessThan(seconds27);
        int int37 = seconds27.size();
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds27);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType43 = seconds42.getPeriodType();
        org.joda.time.Duration duration44 = seconds42.toStandardDuration();
        org.joda.time.Seconds seconds46 = seconds42.multipliedBy(0);
        org.joda.time.Seconds seconds47 = seconds42.negated();
        org.joda.time.Seconds seconds48 = seconds40.plus(seconds42);
        org.joda.time.PeriodType periodType49 = seconds48.getPeriodType();
        org.joda.time.Seconds seconds51 = seconds48.minus(2147483644);
        boolean boolean52 = seconds38.isLessThan(seconds51);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds54 = seconds51.multipliedBy(2147483644);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483642 * 2147483644");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds2 = seconds0.minus((int) (byte) 0);
        org.joda.time.PeriodType periodType3 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds6 = seconds4.minus((int) (byte) 0);
        org.joda.time.PeriodType periodType7 = seconds4.getPeriodType();
        int int8 = seconds0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType10 = seconds4.getFieldType(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT10S");
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int9 = seconds8.getSeconds();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds11 = seconds5.minus(seconds8);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.Seconds seconds14 = seconds13.negated();
        org.joda.time.Seconds seconds16 = seconds13.minus((int) '#');
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds22 = seconds18.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.Duration duration24 = seconds22.toStandardDuration();
        org.joda.time.Seconds seconds25 = seconds22.negated();
        org.joda.time.DurationFieldType durationFieldType26 = seconds22.getFieldType();
        boolean boolean27 = seconds13.isSupported(durationFieldType26);
        boolean boolean28 = seconds11.isSupported(durationFieldType26);
        java.lang.Class<?> wildcardClass29 = seconds11.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.secondsIn(readableInterval4);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds6);
        org.joda.time.Duration duration8 = seconds6.toStandardDuration();
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds9.getFieldType();
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.secondsIn(readableInterval15);
        int int17 = seconds16.size();
        org.joda.time.Seconds seconds19 = seconds16.dividedBy(100);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds24 = seconds20.minus(seconds23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = seconds25.get(durationFieldType26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds29 = seconds25.minus(seconds28);
        org.joda.time.Seconds seconds31 = seconds29.dividedBy((int) '4');
        int int32 = seconds29.size();
        int int33 = seconds24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds29);
        org.joda.time.Seconds seconds35 = seconds29.plus(0);
        org.joda.time.MutablePeriod mutablePeriod36 = seconds29.toMutablePeriod();
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = seconds42.get(durationFieldType43);
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds46 = seconds42.minus(seconds45);
        org.joda.time.Seconds seconds48 = seconds46.dividedBy((int) '4');
        int int49 = seconds46.size();
        int int50 = seconds41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds46);
        org.joda.time.DurationFieldType durationFieldType51 = seconds41.getFieldType();
        int int52 = seconds29.get(durationFieldType51);
        int int53 = seconds16.get(durationFieldType51);
        boolean boolean54 = seconds9.isSupported(durationFieldType51);
        int int55 = seconds6.get(durationFieldType51);
        java.lang.Class<?> wildcardClass56 = durationFieldType51.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2147483644 + "'", int52 == 2147483644);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Period period14 = seconds1.toPeriod();
        java.lang.Class<?> wildcardClass15 = period14.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds15 = seconds13.multipliedBy(2147483647);
        int int16 = seconds15.getSeconds();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds22 = seconds18.multipliedBy(0);
        org.joda.time.Seconds seconds24 = seconds18.multipliedBy(1);
        org.joda.time.Seconds seconds25 = seconds15.plus(seconds24);
        java.lang.Class<?> wildcardClass26 = seconds15.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.Seconds seconds4 = seconds1.minus((int) '#');
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType7 = seconds6.getPeriodType();
        org.joda.time.Duration duration8 = seconds6.toStandardDuration();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds6);
        org.joda.time.Seconds seconds10 = seconds6.negated();
        org.joda.time.Period period11 = seconds10.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds33.toMutablePeriod();
        int int41 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds43 = seconds15.minus(2147483644);
        org.joda.time.Duration duration44 = seconds15.toStandardDuration();
        java.lang.String str45 = seconds15.toString();
        java.lang.Class<?> wildcardClass46 = seconds15.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PT2147483644S" + "'", str45, "PT2147483644S");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Duration duration30 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds32 = seconds28.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds34 = seconds28.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds36 = seconds28.minus(seconds35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds40.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = seconds44.minus(seconds47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = seconds49.minus(seconds52);
        org.joda.time.Seconds seconds55 = seconds53.dividedBy((int) '4');
        int int56 = seconds53.size();
        int int57 = seconds48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds53);
        org.joda.time.Seconds seconds59 = seconds53.plus(0);
        org.joda.time.MutablePeriod mutablePeriod60 = seconds53.toMutablePeriod();
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = seconds61.get(durationFieldType62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds65 = seconds61.minus(seconds64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = seconds66.get(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds70 = seconds66.minus(seconds69);
        org.joda.time.Seconds seconds72 = seconds70.dividedBy((int) '4');
        int int73 = seconds70.size();
        int int74 = seconds65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds70);
        org.joda.time.DurationFieldType durationFieldType75 = seconds65.getFieldType();
        int int76 = seconds53.get(durationFieldType75);
        boolean boolean77 = seconds40.isSupported(durationFieldType75);
        boolean boolean78 = seconds36.isSupported(durationFieldType75);
        boolean boolean79 = seconds10.isGreaterThan(seconds36);
        org.joda.time.Seconds seconds81 = seconds36.plus(1);
        org.joda.time.Seconds seconds83 = seconds36.multipliedBy((int) (byte) -1);
        org.joda.time.Seconds seconds85 = seconds83.dividedBy((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = seconds85.getValue(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483644 + "'", int76 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds85);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.secondsIn(readableInterval4);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds6);
        org.joda.time.Duration duration8 = seconds6.toStandardDuration();
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds9.getFieldType();
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.secondsIn(readableInterval15);
        int int17 = seconds16.size();
        org.joda.time.Seconds seconds19 = seconds16.dividedBy(100);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds24 = seconds20.minus(seconds23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = seconds25.get(durationFieldType26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds29 = seconds25.minus(seconds28);
        org.joda.time.Seconds seconds31 = seconds29.dividedBy((int) '4');
        int int32 = seconds29.size();
        int int33 = seconds24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds29);
        org.joda.time.Seconds seconds35 = seconds29.plus(0);
        org.joda.time.MutablePeriod mutablePeriod36 = seconds29.toMutablePeriod();
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = seconds42.get(durationFieldType43);
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds46 = seconds42.minus(seconds45);
        org.joda.time.Seconds seconds48 = seconds46.dividedBy((int) '4');
        int int49 = seconds46.size();
        int int50 = seconds41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds46);
        org.joda.time.DurationFieldType durationFieldType51 = seconds41.getFieldType();
        int int52 = seconds29.get(durationFieldType51);
        int int53 = seconds16.get(durationFieldType51);
        boolean boolean54 = seconds9.isSupported(durationFieldType51);
        int int55 = seconds6.get(durationFieldType51);
        org.joda.time.Seconds seconds56 = seconds6.negated();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2147483644 + "'", int52 == 2147483644);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(seconds56);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(52);
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.Seconds seconds20 = seconds17.plus(0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType22 = seconds17.getFieldType((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(seconds20);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds28 = seconds26.minus((-2147483644));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483644 + 2147483644");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds2.toMutablePeriod();
        org.joda.time.Duration duration4 = seconds2.toStandardDuration();
        org.joda.time.Seconds seconds6 = seconds2.plus((int) '4');
        org.joda.time.Seconds seconds8 = seconds6.minus(0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds1.get(durationFieldType3);
        org.joda.time.PeriodType periodType5 = seconds1.getPeriodType();
        java.lang.String str6 = seconds1.toString();
        org.joda.time.Seconds seconds8 = seconds1.dividedBy(10);
        int int10 = seconds8.getValue(0);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds11);
        int int13 = seconds12.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        boolean boolean17 = seconds9.isLessThan(seconds14);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds29 = seconds27.dividedBy((int) '4');
        int int30 = seconds27.size();
        int int31 = seconds22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        boolean boolean35 = seconds27.isLessThan(seconds32);
        boolean boolean36 = seconds14.isLessThan(seconds27);
        int int38 = seconds27.getValue(0);
        int int39 = seconds27.size();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2147483644 + "'", int38 == 2147483644);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Period period2 = seconds1.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod4 = seconds1.toMutablePeriod();
        org.joda.time.Days days5 = seconds1.toStandardDays();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(days5);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        boolean boolean17 = seconds9.isLessThan(seconds14);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds29 = seconds27.dividedBy((int) '4');
        int int30 = seconds27.size();
        int int31 = seconds22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        boolean boolean35 = seconds27.isLessThan(seconds32);
        boolean boolean36 = seconds14.isLessThan(seconds27);
        int int37 = seconds27.size();
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds27);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds40 = seconds38.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(seconds38);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        int int4 = seconds1.size();
        org.joda.time.Minutes minutes5 = seconds1.toStandardMinutes();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Duration duration10 = seconds7.toStandardDuration();
        int int11 = seconds7.getSeconds();
        boolean boolean12 = seconds1.isLessThan(seconds7);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType15 = seconds14.getPeriodType();
        org.joda.time.Duration duration16 = seconds14.toStandardDuration();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds20 = seconds18.minus((int) (byte) 0);
        boolean boolean21 = seconds17.isLessThan(seconds20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType25 = seconds24.getPeriodType();
        org.joda.time.Duration duration26 = seconds24.toStandardDuration();
        org.joda.time.Seconds seconds28 = seconds24.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds30 = seconds24.dividedBy((int) (short) 1);
        boolean boolean31 = seconds17.equals((java.lang.Object) (short) 1);
        boolean boolean32 = seconds14.isGreaterThan(seconds17);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds36.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.secondsIn(readableInterval40);
        org.joda.time.DurationFieldType durationFieldType42 = seconds41.getFieldType();
        org.joda.time.Seconds seconds44 = seconds41.dividedBy((-1));
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds41);
        int int46 = seconds41.size();
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.secondsIn(readableInterval47);
        org.joda.time.DurationFieldType durationFieldType49 = seconds48.getFieldType();
        org.joda.time.Seconds seconds51 = seconds48.dividedBy((-1));
        int int52 = seconds48.getSeconds();
        org.joda.time.Seconds seconds53 = seconds41.minus(seconds48);
        boolean boolean54 = seconds39.isGreaterThan(seconds53);
        boolean boolean55 = seconds14.isGreaterThan(seconds53);
        boolean boolean56 = seconds7.isGreaterThan(seconds14);
        org.joda.time.Seconds seconds57 = seconds14.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds59 = seconds14.dividedBy((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(seconds57);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds5);
        org.joda.time.Seconds seconds9 = seconds7.multipliedBy((-2147483644));
        int int10 = seconds9.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds3 = seconds0.plus(1);
        org.joda.time.Duration duration4 = seconds0.toStandardDuration();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds17 = seconds15.dividedBy((int) '4');
        int int18 = seconds15.size();
        int int19 = seconds10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds15);
        boolean boolean20 = seconds5.isLessThan(seconds15);
        boolean boolean21 = seconds0.isLessThan(seconds5);
        org.joda.time.Seconds seconds22 = seconds0.negated();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(seconds22);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.PeriodType periodType5 = seconds4.getPeriodType();
        org.joda.time.Seconds seconds7 = seconds4.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds9 = seconds7.minus((-1));
        org.joda.time.DurationFieldType durationFieldType11 = seconds7.getFieldType((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType13 = seconds7.getFieldType((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType11);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = seconds3.get(durationFieldType4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds7 = seconds3.minus(seconds6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds14 = seconds12.dividedBy((int) '4');
        int int15 = seconds12.size();
        int int16 = seconds7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.joda.time.Seconds seconds18 = seconds12.plus(0);
        java.lang.String str19 = seconds18.toString();
        org.joda.time.Period period20 = seconds18.toPeriod();
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        boolean boolean26 = seconds18.equals((java.lang.Object) seconds22);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = seconds27.get(durationFieldType28);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds31 = seconds27.minus(seconds30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds36 = seconds32.minus(seconds35);
        org.joda.time.Seconds seconds38 = seconds36.dividedBy((int) '4');
        int int39 = seconds36.size();
        int int40 = seconds31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds36);
        org.joda.time.Seconds seconds42 = seconds36.plus(0);
        org.joda.time.MutablePeriod mutablePeriod43 = seconds36.toMutablePeriod();
        int int44 = seconds18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds36);
        org.joda.time.Seconds seconds46 = seconds18.minus(2147483644);
        org.joda.time.Seconds seconds47 = seconds0.minus(seconds46);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType50 = seconds49.getPeriodType();
        org.joda.time.Duration duration51 = seconds49.toStandardDuration();
        org.joda.time.Seconds seconds53 = seconds49.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Duration duration55 = seconds53.toStandardDuration();
        org.joda.time.Seconds seconds56 = seconds53.negated();
        org.joda.time.DurationFieldType durationFieldType57 = seconds53.getFieldType();
        boolean boolean58 = seconds47.isSupported(durationFieldType57);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT2147483644S" + "'", str19, "PT2147483644S");
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        java.lang.Class<?> wildcardClass54 = seconds53.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        int int28 = seconds27.size();
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.seconds(2147483647);
        boolean boolean31 = seconds27.isGreaterThan(seconds30);
        org.joda.time.Period period32 = seconds30.toPeriod();
        int int33 = seconds30.size();
        org.joda.time.Period period34 = seconds30.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(period34);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        int int7 = seconds6.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.PeriodType periodType2 = seconds0.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds33.toMutablePeriod();
        int int41 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds43 = seconds15.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds45 = seconds43.multipliedBy((int) (short) 1);
        java.lang.Class<?> wildcardClass46 = seconds45.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType4 = seconds1.getFieldType((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds16 = seconds14.dividedBy((int) '4');
        int int17 = seconds14.size();
        int int18 = seconds9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds14);
        org.joda.time.Seconds seconds20 = seconds14.plus(0);
        boolean boolean21 = seconds1.isLessThan(seconds14);
        int int22 = seconds14.size();
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.secondsIn(readableInterval23);
        org.joda.time.DurationFieldType durationFieldType25 = seconds24.getFieldType();
        org.joda.time.Seconds seconds27 = seconds24.dividedBy((-1));
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds24);
        int int29 = seconds24.size();
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.secondsIn(readableInterval30);
        org.joda.time.DurationFieldType durationFieldType32 = seconds31.getFieldType();
        org.joda.time.Seconds seconds34 = seconds31.dividedBy((-1));
        int int35 = seconds31.getSeconds();
        org.joda.time.Seconds seconds36 = seconds24.minus(seconds31);
        org.joda.time.Seconds seconds38 = seconds36.multipliedBy(2147483647);
        int int39 = seconds38.getSeconds();
        boolean boolean40 = seconds14.equals((java.lang.Object) seconds38);
        int int41 = seconds14.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2147483644 + "'", int41 == 2147483644);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Duration duration5 = seconds4.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(duration5);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds33.toMutablePeriod();
        int int41 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Duration duration42 = seconds33.toStandardDuration();
        java.lang.String str43 = seconds33.toString();
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = seconds44.minus(seconds47);
        org.joda.time.DurationFieldType durationFieldType49 = seconds44.getFieldType();
        org.joda.time.Seconds seconds51 = seconds44.dividedBy((int) ' ');
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds44);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds53 = seconds33.plus(seconds44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483644 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PT2147483644S" + "'", str43, "PT2147483644S");
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.PeriodType periodType5 = seconds4.getPeriodType();
        org.joda.time.Seconds seconds7 = seconds4.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds9 = seconds7.minus((-1));
        int int10 = seconds7.size();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = seconds7.getValue((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Days days1 = seconds0.toStandardDays();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds8 = seconds6.minus((int) (byte) 0);
        boolean boolean9 = seconds5.isLessThan(seconds8);
        org.joda.time.Period period10 = seconds5.toPeriod();
        int int11 = seconds3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds5);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds3.isSupported(durationFieldType14);
        int int16 = seconds3.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds28 = seconds10.dividedBy((int) '#');
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        java.lang.String str30 = seconds28.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT61356675S" + "'", str30, "PT61356675S");
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Period period7 = seconds6.toPeriod();
        org.joda.time.Seconds seconds9 = seconds6.dividedBy(100);
        org.joda.time.Seconds seconds11 = seconds6.minus(0);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = seconds12.get(durationFieldType13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds16 = seconds12.minus(seconds15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds23 = seconds21.dividedBy((int) '4');
        int int24 = seconds21.size();
        int int25 = seconds16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds21);
        org.joda.time.Seconds seconds27 = seconds21.plus(0);
        java.lang.String str28 = seconds27.toString();
        org.joda.time.Period period29 = seconds27.toPeriod();
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.secondsIn(readableInterval30);
        org.joda.time.Seconds seconds32 = seconds31.negated();
        org.joda.time.MutablePeriod mutablePeriod33 = seconds31.toMutablePeriod();
        org.joda.time.Duration duration34 = seconds31.toStandardDuration();
        boolean boolean35 = seconds27.equals((java.lang.Object) seconds31);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = seconds36.get(durationFieldType37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds40 = seconds36.minus(seconds39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = seconds41.get(durationFieldType42);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds45 = seconds41.minus(seconds44);
        org.joda.time.Seconds seconds47 = seconds45.dividedBy((int) '4');
        int int48 = seconds45.size();
        int int49 = seconds40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds45);
        org.joda.time.Seconds seconds51 = seconds45.plus(0);
        org.joda.time.Seconds seconds52 = seconds31.plus(seconds51);
        int int54 = seconds31.getValue((int) (short) 0);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds61 = seconds58.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = seconds62.get(durationFieldType63);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds66 = seconds62.minus(seconds65);
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = seconds67.get(durationFieldType68);
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds71 = seconds67.minus(seconds70);
        org.joda.time.Seconds seconds73 = seconds71.dividedBy((int) '4');
        int int74 = seconds71.size();
        int int75 = seconds66.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds71);
        org.joda.time.Seconds seconds77 = seconds71.plus(0);
        org.joda.time.MutablePeriod mutablePeriod78 = seconds71.toMutablePeriod();
        org.joda.time.Seconds seconds79 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType80 = null;
        int int81 = seconds79.get(durationFieldType80);
        org.joda.time.Seconds seconds82 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds83 = seconds79.minus(seconds82);
        org.joda.time.Seconds seconds84 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType85 = null;
        int int86 = seconds84.get(durationFieldType85);
        org.joda.time.Seconds seconds87 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds88 = seconds84.minus(seconds87);
        org.joda.time.Seconds seconds90 = seconds88.dividedBy((int) '4');
        int int91 = seconds88.size();
        int int92 = seconds83.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds88);
        org.joda.time.DurationFieldType durationFieldType93 = seconds83.getFieldType();
        int int94 = seconds71.get(durationFieldType93);
        boolean boolean95 = seconds58.isSupported(durationFieldType93);
        int int96 = seconds31.get(durationFieldType93);
        boolean boolean97 = seconds6.isSupported(durationFieldType93);
        org.joda.time.Seconds seconds99 = seconds6.multipliedBy((int) 'a');
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT2147483644S" + "'", str28, "PT2147483644S");
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(seconds87);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertNotNull(seconds90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(durationFieldType93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 2147483644 + "'", int94 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(seconds99);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.PeriodType periodType5 = seconds4.getPeriodType();
        org.joda.time.Seconds seconds7 = seconds4.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds9 = seconds7.minus((-1));
        org.joda.time.DurationFieldType durationFieldType10 = seconds9.getFieldType();
        org.joda.time.Seconds seconds12 = seconds9.multipliedBy(1);
        org.joda.time.Seconds seconds13 = seconds12.negated();
        java.lang.String str14 = seconds13.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT-1S" + "'", str14, "PT-1S");
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Seconds seconds7 = seconds5.negated();
        org.joda.time.Seconds seconds8 = seconds5.negated();
        org.joda.time.Period period9 = seconds5.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT61356675S");
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.PeriodType periodType6 = seconds5.getPeriodType();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds9 = seconds7.minus((int) (byte) 0);
        boolean boolean10 = seconds5.isLessThan(seconds9);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = seconds5.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Seconds seconds7 = seconds5.negated();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.Seconds seconds23 = seconds17.plus(0);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        org.joda.time.Seconds seconds28 = seconds25.dividedBy((-1));
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds25);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        boolean boolean31 = seconds29.isSupported(durationFieldType30);
        org.joda.time.Seconds seconds33 = seconds29.plus((int) (byte) 1);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = seconds34.get(durationFieldType35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds38 = seconds34.minus(seconds37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = seconds39.get(durationFieldType40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds43 = seconds39.minus(seconds42);
        org.joda.time.Seconds seconds45 = seconds43.dividedBy((int) '4');
        int int46 = seconds43.size();
        int int47 = seconds38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds43);
        org.joda.time.Seconds seconds49 = seconds43.plus(0);
        java.lang.String str50 = seconds49.toString();
        org.joda.time.Period period51 = seconds49.toPeriod();
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.secondsIn(readableInterval52);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = seconds53.get(durationFieldType55);
        boolean boolean57 = seconds49.isLessThan(seconds53);
        org.joda.time.Seconds seconds58 = seconds33.minus(seconds49);
        org.joda.time.Seconds seconds60 = seconds58.dividedBy((int) 'a');
        org.joda.time.Seconds seconds61 = seconds17.plus(seconds58);
        org.joda.time.Seconds seconds62 = seconds7.plus(seconds61);
        org.joda.time.ReadableInterval readableInterval63 = null;
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.secondsIn(readableInterval63);
        org.joda.time.DurationFieldType durationFieldType65 = seconds64.getFieldType();
        org.joda.time.Seconds seconds67 = seconds64.dividedBy((-1));
        org.joda.time.Seconds seconds68 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds64);
        org.joda.time.DurationFieldType durationFieldType69 = null;
        boolean boolean70 = seconds68.isSupported(durationFieldType69);
        org.joda.time.Seconds seconds72 = seconds68.plus((int) (byte) 1);
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType74 = null;
        int int75 = seconds73.get(durationFieldType74);
        org.joda.time.Seconds seconds76 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds77 = seconds73.minus(seconds76);
        org.joda.time.Seconds seconds78 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType79 = null;
        int int80 = seconds78.get(durationFieldType79);
        org.joda.time.Seconds seconds81 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds82 = seconds78.minus(seconds81);
        org.joda.time.Seconds seconds84 = seconds82.dividedBy((int) '4');
        int int85 = seconds82.size();
        int int86 = seconds77.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds82);
        org.joda.time.Seconds seconds88 = seconds82.plus(0);
        java.lang.String str89 = seconds88.toString();
        org.joda.time.Period period90 = seconds88.toPeriod();
        org.joda.time.ReadableInterval readableInterval91 = null;
        org.joda.time.Seconds seconds92 = org.joda.time.Seconds.secondsIn(readableInterval91);
        org.joda.time.Seconds seconds93 = seconds92.negated();
        org.joda.time.DurationFieldType durationFieldType94 = null;
        int int95 = seconds92.get(durationFieldType94);
        boolean boolean96 = seconds88.isLessThan(seconds92);
        org.joda.time.Seconds seconds97 = seconds72.minus(seconds88);
        org.joda.time.Seconds seconds98 = seconds62.minus(seconds88);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT2147483644S" + "'", str50, "PT2147483644S");
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "PT2147483644S" + "'", str89, "PT2147483644S");
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(seconds92);
        org.junit.Assert.assertNotNull(seconds93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(seconds97);
        org.junit.Assert.assertNotNull(seconds98);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        boolean boolean72 = seconds64.isLessThan(seconds69);
        boolean boolean73 = seconds54.isLessThan(seconds64);
        org.joda.time.Seconds seconds75 = seconds64.minus((int) 'a');
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(seconds75);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.PeriodType periodType5 = seconds4.getPeriodType();
        org.joda.time.Seconds seconds7 = seconds4.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds9 = seconds7.minus((-2147483644));
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.Hours hours3 = seconds1.toStandardHours();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.PeriodType periodType19 = seconds17.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType21 = seconds17.getFieldType((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Duration duration10 = seconds7.toStandardDuration();
        int int11 = seconds7.getSeconds();
        boolean boolean12 = seconds1.isLessThan(seconds7);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.dividedBy((int) '4');
        int int25 = seconds22.size();
        int int26 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        org.joda.time.Seconds seconds28 = seconds22.plus(0);
        java.lang.String str29 = seconds28.toString();
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn(readableInterval31);
        org.joda.time.Seconds seconds33 = seconds32.negated();
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds32.get(durationFieldType34);
        boolean boolean36 = seconds28.isLessThan(seconds32);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds32);
        org.joda.time.Seconds seconds38 = seconds1.plus(seconds32);
        org.joda.time.MutablePeriod mutablePeriod39 = seconds1.toMutablePeriod();
        java.lang.Class<?> wildcardClass40 = seconds1.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2147483644S" + "'", str29, "PT2147483644S");
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds6 = seconds4.negated();
        org.joda.time.Seconds seconds8 = seconds6.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod9 = seconds6.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.plus((int) (short) 0);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds9.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.dividedBy((int) '4');
        int int25 = seconds22.size();
        int int26 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        org.joda.time.Seconds seconds28 = seconds22.plus(0);
        org.joda.time.MutablePeriod mutablePeriod29 = seconds22.toMutablePeriod();
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = seconds35.get(durationFieldType36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds39 = seconds35.minus(seconds38);
        org.joda.time.Seconds seconds41 = seconds39.dividedBy((int) '4');
        int int42 = seconds39.size();
        int int43 = seconds34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds39);
        org.joda.time.DurationFieldType durationFieldType44 = seconds34.getFieldType();
        int int45 = seconds22.get(durationFieldType44);
        boolean boolean46 = seconds9.isSupported(durationFieldType44);
        org.joda.time.Seconds seconds47 = seconds5.plus(seconds9);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = seconds49.minus(seconds52);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = seconds54.get(durationFieldType55);
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds58 = seconds54.minus(seconds57);
        org.joda.time.Seconds seconds60 = seconds58.dividedBy((int) '4');
        int int61 = seconds58.size();
        int int62 = seconds53.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds58);
        boolean boolean63 = seconds48.isLessThan(seconds58);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = seconds64.get(durationFieldType65);
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds68 = seconds64.minus(seconds67);
        org.joda.time.ReadableInterval readableInterval69 = null;
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.secondsIn(readableInterval69);
        org.joda.time.Seconds seconds71 = seconds70.negated();
        org.joda.time.MutablePeriod mutablePeriod72 = seconds70.toMutablePeriod();
        org.joda.time.Duration duration73 = seconds70.toStandardDuration();
        boolean boolean74 = seconds64.equals((java.lang.Object) seconds70);
        org.joda.time.MutablePeriod mutablePeriod75 = seconds64.toMutablePeriod();
        org.joda.time.Seconds seconds76 = seconds48.plus(seconds64);
        boolean boolean77 = seconds5.isGreaterThan(seconds64);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2147483644 + "'", int45 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(mutablePeriod72);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds10 = seconds8.minus((int) (byte) 0);
        boolean boolean11 = seconds7.isLessThan(seconds10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds15 = seconds13.minus((int) (byte) 0);
        boolean boolean16 = seconds12.isLessThan(seconds15);
        org.joda.time.Period period17 = seconds12.toPeriod();
        int int18 = seconds10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.joda.time.Seconds seconds19 = seconds3.plus(seconds12);
        org.joda.time.Period period20 = seconds3.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType22 = seconds3.getFieldType(41297762);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 41297762");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds5 = seconds1.minus((int) (byte) -1);
        int int6 = seconds1.size();
        org.joda.time.Seconds seconds8 = seconds1.dividedBy((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType10 = seconds8.getFieldType((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds8 = seconds6.dividedBy((int) '4');
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        org.joda.time.Seconds seconds14 = seconds11.dividedBy((-1));
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds22 = seconds18.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        boolean boolean24 = seconds16.isLessThan(seconds23);
        org.joda.time.Seconds seconds25 = seconds14.plus(seconds16);
        org.joda.time.Seconds seconds26 = seconds1.plus(seconds25);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        int int30 = seconds1.get(durationFieldType29);
        java.lang.String str31 = seconds1.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT0S" + "'", str31, "PT0S");
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds5 = seconds1.minus((int) (byte) -1);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType9 = seconds8.getPeriodType();
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.Seconds seconds12 = seconds11.negated();
        org.joda.time.MutablePeriod mutablePeriod13 = seconds11.toMutablePeriod();
        int int14 = seconds8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType17 = seconds16.getPeriodType();
        org.joda.time.Duration duration18 = seconds16.toStandardDuration();
        org.joda.time.Seconds seconds20 = seconds16.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds22 = seconds16.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds24 = seconds16.minus(seconds23);
        org.joda.time.DurationFieldType durationFieldType25 = seconds24.getFieldType();
        boolean boolean26 = seconds8.isSupported(durationFieldType25);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.joda.time.Duration duration31 = seconds28.toStandardDuration();
        boolean boolean32 = seconds8.equals((java.lang.Object) seconds28);
        org.joda.time.Duration duration33 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds34 = seconds28.negated();
        int int35 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds34);
        org.joda.time.Duration duration36 = seconds6.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(duration36);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds28 = seconds10.dividedBy((int) '#');
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType32 = seconds31.getPeriodType();
        org.joda.time.Duration duration33 = seconds31.toStandardDuration();
        org.joda.time.Seconds seconds35 = seconds31.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds36 = seconds35.negated();
        org.joda.time.Seconds seconds37 = seconds35.negated();
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = seconds38.get(durationFieldType39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds42 = seconds38.minus(seconds41);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.Seconds seconds49 = seconds47.dividedBy((int) '4');
        int int50 = seconds47.size();
        int int51 = seconds42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds47);
        org.joda.time.Seconds seconds53 = seconds47.plus(0);
        java.lang.String str54 = seconds53.toString();
        org.joda.time.Period period55 = seconds53.toPeriod();
        org.joda.time.ReadableInterval readableInterval56 = null;
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.secondsIn(readableInterval56);
        org.joda.time.DurationFieldType durationFieldType58 = seconds57.getFieldType();
        org.joda.time.Seconds seconds60 = seconds57.dividedBy((-1));
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds60);
        org.joda.time.DurationFieldType durationFieldType62 = seconds61.getFieldType();
        int int63 = seconds53.get(durationFieldType62);
        boolean boolean64 = seconds37.isSupported(durationFieldType62);
        boolean boolean65 = seconds28.isSupported(durationFieldType62);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "PT2147483644S" + "'", str54, "PT2147483644S");
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2147483644 + "'", int63 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT-2147483648S");
        org.joda.time.Minutes minutes2 = seconds1.toStandardMinutes();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.MutablePeriod mutablePeriod16 = seconds9.toMutablePeriod();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = seconds22.get(durationFieldType23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = seconds22.minus(seconds25);
        org.joda.time.Seconds seconds28 = seconds26.dividedBy((int) '4');
        int int29 = seconds26.size();
        int int30 = seconds21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds26);
        org.joda.time.DurationFieldType durationFieldType31 = seconds21.getFieldType();
        int int32 = seconds9.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = seconds9.negated();
        org.joda.time.DurationFieldType durationFieldType35 = seconds33.getFieldType(0);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483644 + "'", int32 == 2147483644);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(durationFieldType35);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        int int7 = seconds6.size();
        org.joda.time.Seconds seconds9 = seconds6.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        boolean boolean13 = seconds9.isSupported(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = seconds19.get(durationFieldType20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds23 = seconds19.minus(seconds22);
        org.joda.time.Seconds seconds25 = seconds23.dividedBy((int) '4');
        int int26 = seconds23.size();
        int int27 = seconds18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds23);
        org.joda.time.Seconds seconds29 = seconds23.plus(0);
        org.joda.time.Seconds seconds30 = seconds9.minus(seconds23);
        org.joda.time.DurationFieldType durationFieldType31 = seconds9.getFieldType();
        boolean boolean32 = seconds1.isSupported(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType34 = seconds33.getPeriodType();
        org.joda.time.Seconds seconds35 = seconds1.minus(seconds33);
        org.joda.time.Seconds seconds37 = seconds33.multipliedBy((int) 'a');
        org.joda.time.Seconds seconds38 = seconds33.negated();
        org.joda.time.Duration duration39 = seconds38.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType40 = seconds38.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(durationFieldType40);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Days days2 = seconds0.toStandardDays();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds55 = seconds50.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds57 = seconds55.plus((-1));
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds57);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType5 = seconds4.getPeriodType();
        org.joda.time.Duration duration6 = seconds4.toStandardDuration();
        org.joda.time.Seconds seconds8 = seconds4.multipliedBy(0);
        org.joda.time.Seconds seconds9 = seconds4.negated();
        org.joda.time.Period period10 = seconds9.toPeriod();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy(100);
        org.joda.time.Seconds seconds14 = seconds9.minus(0);
        int int15 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds17 = seconds9.plus((int) (short) 10);
        org.joda.time.Period period18 = seconds9.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        boolean boolean17 = seconds9.isLessThan(seconds14);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds29 = seconds27.dividedBy((int) '4');
        int int30 = seconds27.size();
        int int31 = seconds22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        boolean boolean35 = seconds27.isLessThan(seconds32);
        boolean boolean36 = seconds14.isLessThan(seconds27);
        org.joda.time.DurationFieldType durationFieldType37 = seconds27.getFieldType();
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds27);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds40 = seconds27.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(seconds38);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        boolean boolean26 = seconds16.equals((java.lang.Object) seconds22);
        org.joda.time.MutablePeriod mutablePeriod27 = seconds16.toMutablePeriod();
        org.joda.time.Seconds seconds28 = seconds0.plus(seconds16);
        org.joda.time.Period period29 = seconds16.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(period29);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Period period6 = seconds1.toPeriod();
        org.joda.time.Duration duration7 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.parseSeconds("PT-1S");
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.Seconds seconds11 = seconds9.plus(seconds10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds10);
        boolean boolean13 = seconds1.equals((java.lang.Object) seconds10);
        org.joda.time.PeriodType periodType14 = seconds1.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(periodType14);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds16 = seconds14.dividedBy((int) '4');
        int int17 = seconds14.size();
        int int18 = seconds9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds14);
        org.joda.time.Seconds seconds20 = seconds14.plus(0);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.DurationFieldType durationFieldType23 = seconds22.getFieldType();
        org.joda.time.Seconds seconds25 = seconds22.dividedBy((-1));
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds22);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        boolean boolean28 = seconds26.isSupported(durationFieldType27);
        org.joda.time.Seconds seconds30 = seconds26.plus((int) (byte) 1);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = seconds36.get(durationFieldType37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds40 = seconds36.minus(seconds39);
        org.joda.time.Seconds seconds42 = seconds40.dividedBy((int) '4');
        int int43 = seconds40.size();
        int int44 = seconds35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds40);
        org.joda.time.Seconds seconds46 = seconds40.plus(0);
        java.lang.String str47 = seconds46.toString();
        org.joda.time.Period period48 = seconds46.toPeriod();
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.secondsIn(readableInterval49);
        org.joda.time.Seconds seconds51 = seconds50.negated();
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = seconds50.get(durationFieldType52);
        boolean boolean54 = seconds46.isLessThan(seconds50);
        org.joda.time.Seconds seconds55 = seconds30.minus(seconds46);
        org.joda.time.Seconds seconds57 = seconds55.dividedBy((int) 'a');
        org.joda.time.Seconds seconds58 = seconds14.plus(seconds55);
        org.joda.time.Seconds seconds59 = seconds58.negated();
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType66 = null;
        int int67 = seconds65.get(durationFieldType66);
        org.joda.time.Seconds seconds68 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds69 = seconds65.minus(seconds68);
        org.joda.time.Seconds seconds71 = seconds69.dividedBy((int) '4');
        int int72 = seconds69.size();
        int int73 = seconds64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds69);
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType75 = null;
        int int76 = seconds74.get(durationFieldType75);
        boolean boolean77 = seconds69.isLessThan(seconds74);
        boolean boolean78 = seconds59.isLessThan(seconds69);
        org.joda.time.Seconds seconds80 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType81 = seconds80.getPeriodType();
        org.joda.time.Duration duration82 = seconds80.toStandardDuration();
        org.joda.time.Seconds seconds84 = seconds80.dividedBy((int) (byte) 10);
        int int85 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds84);
        int int86 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds84);
        org.joda.time.Seconds seconds87 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT2147483644S" + "'", str47, "PT2147483644S");
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(seconds87);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        org.joda.time.Seconds seconds10 = seconds1.minus(seconds9);
        int int11 = seconds10.size();
        org.joda.time.Period period12 = seconds10.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds2 = seconds0.minus((int) (byte) 0);
        java.lang.String str3 = seconds2.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds5 = seconds2.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT1S" + "'", str3, "PT1S");
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds3 = seconds0.plus(1);
        int int4 = seconds3.getSeconds();
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds8 = seconds3.multipliedBy((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType10 = seconds3.getFieldType((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.Seconds seconds4 = seconds1.minus((int) '#');
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType7 = seconds6.getPeriodType();
        org.joda.time.Duration duration8 = seconds6.toStandardDuration();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds6);
        org.joda.time.Duration duration10 = seconds9.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(duration10);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        boolean boolean9 = seconds1.isGreaterThan(seconds7);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        org.joda.time.Seconds seconds14 = seconds11.dividedBy((-1));
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds14);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int19 = seconds18.getSeconds();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds21 = seconds15.minus(seconds18);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.secondsIn(readableInterval22);
        org.joda.time.Seconds seconds24 = seconds23.negated();
        org.joda.time.Seconds seconds26 = seconds23.minus((int) '#');
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Duration duration30 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds32 = seconds28.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds33 = seconds32.negated();
        org.joda.time.Duration duration34 = seconds32.toStandardDuration();
        org.joda.time.Seconds seconds35 = seconds32.negated();
        org.joda.time.DurationFieldType durationFieldType36 = seconds32.getFieldType();
        boolean boolean37 = seconds23.isSupported(durationFieldType36);
        boolean boolean38 = seconds21.isSupported(durationFieldType36);
        boolean boolean39 = seconds7.isSupported(durationFieldType36);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = seconds40.get(durationFieldType41);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds44 = seconds40.minus(seconds43);
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = seconds45.get(durationFieldType46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds49 = seconds45.minus(seconds48);
        org.joda.time.Seconds seconds51 = seconds49.dividedBy((int) '4');
        int int52 = seconds49.size();
        int int53 = seconds44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds49);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType56 = seconds55.getFieldType();
        int int57 = seconds44.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = seconds44.negated();
        org.joda.time.DurationFieldType durationFieldType59 = seconds44.getFieldType();
        int int60 = seconds7.get(durationFieldType59);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2147483644 + "'", int57 == 2147483644);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds7 = seconds1.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.Seconds seconds23 = seconds17.plus(0);
        java.lang.String str24 = seconds23.toString();
        org.joda.time.Period period25 = seconds23.toPeriod();
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.Seconds seconds28 = seconds27.negated();
        org.joda.time.MutablePeriod mutablePeriod29 = seconds27.toMutablePeriod();
        org.joda.time.Duration duration30 = seconds27.toStandardDuration();
        boolean boolean31 = seconds23.equals((java.lang.Object) seconds27);
        org.joda.time.Seconds seconds32 = seconds1.minus(seconds27);
        org.joda.time.Seconds seconds34 = seconds32.plus((int) (byte) 1);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2147483644S" + "'", str24, "PT2147483644S");
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        int int10 = seconds9.size();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy(100);
        org.joda.time.PeriodType periodType13 = seconds12.getPeriodType();
        org.joda.time.Seconds seconds15 = seconds12.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds17 = seconds15.minus((-1));
        org.joda.time.DurationFieldType durationFieldType19 = seconds15.getFieldType((int) (byte) 0);
        boolean boolean20 = seconds5.isSupported(durationFieldType19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        int int26 = seconds22.getSeconds();
        java.lang.String str27 = seconds22.toString();
        org.joda.time.Seconds seconds29 = seconds22.minus((int) (short) 10);
        org.joda.time.Seconds seconds30 = seconds5.minus(seconds22);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType33 = seconds32.getPeriodType();
        org.joda.time.Duration duration34 = seconds32.toStandardDuration();
        org.joda.time.Seconds seconds36 = seconds32.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds38 = seconds32.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds40 = seconds32.minus(seconds39);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.secondsIn(readableInterval41);
        org.joda.time.Seconds seconds43 = seconds42.negated();
        org.joda.time.MutablePeriod mutablePeriod44 = seconds43.toMutablePeriod();
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = seconds45.get(durationFieldType46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds49 = seconds45.minus(seconds48);
        org.joda.time.DurationFieldType durationFieldType50 = seconds45.getFieldType();
        int int51 = seconds43.get(durationFieldType50);
        boolean boolean52 = seconds40.isSupported(durationFieldType50);
        boolean boolean53 = seconds5.isSupported(durationFieldType50);
        org.joda.time.Duration duration54 = seconds5.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT0S" + "'", str27, "PT0S");
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(duration54);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.MutablePeriod mutablePeriod16 = seconds9.toMutablePeriod();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = seconds22.get(durationFieldType23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = seconds22.minus(seconds25);
        org.joda.time.Seconds seconds28 = seconds26.dividedBy((int) '4');
        int int29 = seconds26.size();
        int int30 = seconds21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds26);
        org.joda.time.Seconds seconds32 = seconds26.plus(0);
        java.lang.String str33 = seconds32.toString();
        org.joda.time.Period period34 = seconds32.toPeriod();
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.secondsIn(readableInterval35);
        org.joda.time.Seconds seconds37 = seconds36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = seconds36.toMutablePeriod();
        org.joda.time.Duration duration39 = seconds36.toStandardDuration();
        boolean boolean40 = seconds32.equals((java.lang.Object) seconds36);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = seconds41.get(durationFieldType42);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds45 = seconds41.minus(seconds44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds46.get(durationFieldType47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds50 = seconds46.minus(seconds49);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) '4');
        int int53 = seconds50.size();
        int int54 = seconds45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds50);
        org.joda.time.Seconds seconds56 = seconds50.plus(0);
        org.joda.time.MutablePeriod mutablePeriod57 = seconds50.toMutablePeriod();
        int int58 = seconds32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds50);
        org.joda.time.Seconds seconds59 = seconds32.negated();
        boolean boolean60 = seconds9.isLessThan(seconds32);
        int int61 = seconds9.getSeconds();
        org.joda.time.Period period62 = seconds9.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT2147483644S" + "'", str33, "PT2147483644S");
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2147483644 + "'", int61 == 2147483644);
        org.junit.Assert.assertNotNull(period62);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds8 = seconds6.dividedBy((int) '4');
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        org.joda.time.Seconds seconds14 = seconds11.dividedBy((-1));
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds22 = seconds18.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        boolean boolean24 = seconds16.isLessThan(seconds23);
        org.joda.time.Seconds seconds25 = seconds14.plus(seconds16);
        org.joda.time.Seconds seconds26 = seconds1.plus(seconds25);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        int int30 = seconds1.get(durationFieldType29);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn(readableInterval31);
        org.joda.time.DurationFieldType durationFieldType33 = seconds32.getFieldType();
        org.joda.time.Seconds seconds35 = seconds32.dividedBy((-1));
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds32);
        int int37 = seconds32.size();
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.secondsIn(readableInterval38);
        org.joda.time.DurationFieldType durationFieldType40 = seconds39.getFieldType();
        org.joda.time.Seconds seconds42 = seconds39.dividedBy((-1));
        int int43 = seconds39.getSeconds();
        org.joda.time.Seconds seconds44 = seconds32.minus(seconds39);
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = seconds45.get(durationFieldType46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds49 = seconds45.minus(seconds48);
        org.joda.time.Seconds seconds51 = seconds48.multipliedBy((int) (short) 0);
        int int52 = seconds44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds51);
        org.joda.time.DurationFieldType durationFieldType53 = seconds44.getFieldType();
        org.joda.time.Seconds seconds55 = seconds44.dividedBy((-2147483644));
        int int56 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds44);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds5);
        int int8 = seconds5.getSeconds();
        org.joda.time.Seconds seconds10 = seconds5.multipliedBy((-2147483647));
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds10);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds7 = seconds1.multipliedBy(1);
        org.joda.time.Seconds seconds9 = seconds1.dividedBy((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            int int11 = seconds1.getValue(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.DurationFieldType durationFieldType3 = seconds1.getFieldType();
        org.joda.time.Days days4 = seconds1.toStandardDays();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(days4);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.dividedBy((-1));
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        boolean boolean12 = seconds10.isSupported(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.secondsIn(readableInterval13);
        int int15 = seconds14.size();
        org.joda.time.Seconds seconds17 = seconds14.dividedBy(100);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.Seconds seconds20 = seconds17.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds22 = seconds20.minus((-1));
        org.joda.time.DurationFieldType durationFieldType24 = seconds20.getFieldType((int) (byte) 0);
        boolean boolean25 = seconds10.isSupported(durationFieldType24);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.Seconds seconds28 = seconds27.negated();
        org.joda.time.MutablePeriod mutablePeriod29 = seconds27.toMutablePeriod();
        org.joda.time.Duration duration30 = seconds27.toStandardDuration();
        int int31 = seconds27.getSeconds();
        java.lang.String str32 = seconds27.toString();
        org.joda.time.Seconds seconds34 = seconds27.minus((int) (short) 10);
        org.joda.time.Seconds seconds35 = seconds10.minus(seconds27);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType38 = seconds37.getPeriodType();
        org.joda.time.Duration duration39 = seconds37.toStandardDuration();
        org.joda.time.Seconds seconds41 = seconds37.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds43 = seconds37.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds45 = seconds37.minus(seconds44);
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        org.joda.time.Seconds seconds48 = seconds47.negated();
        org.joda.time.MutablePeriod mutablePeriod49 = seconds48.toMutablePeriod();
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = seconds50.get(durationFieldType51);
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds54 = seconds50.minus(seconds53);
        org.joda.time.DurationFieldType durationFieldType55 = seconds50.getFieldType();
        int int56 = seconds48.get(durationFieldType55);
        boolean boolean57 = seconds45.isSupported(durationFieldType55);
        boolean boolean58 = seconds10.isSupported(durationFieldType55);
        org.joda.time.Seconds seconds59 = seconds4.plus(seconds10);
        org.joda.time.Seconds seconds60 = seconds59.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int62 = seconds60.getValue((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT0S" + "'", str32, "PT0S");
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Seconds seconds7 = seconds5.negated();
        org.joda.time.PeriodType periodType8 = seconds5.getPeriodType();
        java.lang.Class<?> wildcardClass9 = periodType8.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds55 = seconds50.multipliedBy((int) (byte) 0);
        org.joda.time.Duration duration56 = seconds55.toStandardDuration();
        int int57 = seconds55.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = seconds9.getValue((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType28 = seconds27.getPeriodType();
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.dividedBy((-1));
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds33);
        org.joda.time.Seconds seconds35 = seconds33.negated();
        org.joda.time.Seconds seconds36 = seconds27.plus(seconds33);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = seconds36.getValue((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds2 = seconds0.minus((int) (byte) 0);
        int int3 = seconds0.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType5 = seconds4.getPeriodType();
        org.joda.time.Duration duration6 = seconds4.toStandardDuration();
        org.joda.time.Seconds seconds8 = seconds4.multipliedBy(0);
        org.joda.time.Seconds seconds9 = seconds4.negated();
        org.joda.time.Period period10 = seconds9.toPeriod();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy(100);
        org.joda.time.Seconds seconds14 = seconds9.minus(0);
        int int15 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds17 = seconds9.plus((int) (short) 10);
        org.joda.time.Duration duration18 = seconds17.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(duration18);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds5);
        org.joda.time.Period period8 = seconds7.toPeriod();
        java.lang.Class<?> wildcardClass9 = seconds7.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = seconds21.get(durationFieldType22);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds25 = seconds21.minus(seconds24);
        org.joda.time.Seconds seconds27 = seconds25.dividedBy((int) '4');
        int int28 = seconds25.size();
        int int29 = seconds20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds25);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        boolean boolean33 = seconds25.isLessThan(seconds30);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = seconds34.get(durationFieldType35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds38 = seconds34.minus(seconds37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = seconds39.get(durationFieldType40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds43 = seconds39.minus(seconds42);
        org.joda.time.Seconds seconds45 = seconds43.dividedBy((int) '4');
        int int46 = seconds43.size();
        int int47 = seconds38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds43);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        boolean boolean51 = seconds43.isLessThan(seconds48);
        boolean boolean52 = seconds30.isLessThan(seconds43);
        boolean boolean53 = seconds0.isGreaterThan(seconds43);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(seconds54);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.secondsIn(readableInterval1);
        org.joda.time.DurationFieldType durationFieldType3 = seconds2.getFieldType();
        org.joda.time.Seconds seconds5 = seconds2.dividedBy((-1));
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        int int8 = seconds0.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.DurationFieldType durationFieldType23 = seconds13.getFieldType();
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.MutablePeriod mutablePeriod29 = seconds27.toMutablePeriod();
        boolean boolean30 = seconds13.isGreaterThan(seconds27);
        org.joda.time.Seconds seconds31 = seconds0.minus(seconds13);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(seconds31);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int9 = seconds8.getSeconds();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds11 = seconds5.minus(seconds8);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        int int14 = seconds13.size();
        org.joda.time.Seconds seconds16 = seconds13.dividedBy(100);
        org.joda.time.PeriodType periodType17 = seconds16.getPeriodType();
        org.joda.time.Seconds seconds19 = seconds16.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds21 = seconds19.minus((-1));
        int int22 = seconds19.size();
        int int23 = seconds8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds19);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        int int17 = seconds4.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = seconds4.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType20 = seconds4.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483644 + "'", int17 == 2147483644);
        org.junit.Assert.assertNotNull(seconds18);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        int int17 = seconds4.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = seconds4.negated();
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) (byte) 1);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483644 + "'", int17 == 2147483644);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        int int9 = seconds6.size();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.Seconds seconds40 = seconds19.plus(seconds39);
        org.joda.time.PeriodType periodType41 = seconds40.getPeriodType();
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds40);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(seconds42);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.PeriodType periodType19 = seconds17.getPeriodType();
        org.joda.time.Seconds seconds21 = seconds17.dividedBy(100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds23 = seconds21.dividedBy((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(seconds21);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Seconds seconds10 = seconds9.negated();
        java.lang.Class<?> wildcardClass11 = seconds9.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        int int5 = seconds1.getSeconds();
        java.lang.String str6 = seconds1.toString();
        org.joda.time.DurationFieldType durationFieldType7 = seconds1.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType7);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType6 = seconds5.getPeriodType();
        org.joda.time.Duration duration7 = seconds5.toStandardDuration();
        org.joda.time.Seconds seconds9 = seconds5.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.Seconds seconds12 = seconds11.negated();
        org.joda.time.MutablePeriod mutablePeriod13 = seconds11.toMutablePeriod();
        org.joda.time.Duration duration14 = seconds11.toStandardDuration();
        int int15 = seconds11.getSeconds();
        boolean boolean16 = seconds5.isLessThan(seconds11);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds24 = seconds22.minus((int) (byte) 0);
        boolean boolean25 = seconds21.isLessThan(seconds24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds21);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Duration duration30 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds32 = seconds28.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds34 = seconds28.dividedBy((int) (short) 1);
        boolean boolean35 = seconds21.equals((java.lang.Object) (short) 1);
        boolean boolean36 = seconds18.isGreaterThan(seconds21);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds40.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.DurationFieldType durationFieldType46 = seconds45.getFieldType();
        org.joda.time.Seconds seconds48 = seconds45.dividedBy((-1));
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds45);
        int int50 = seconds45.size();
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.secondsIn(readableInterval51);
        org.joda.time.DurationFieldType durationFieldType53 = seconds52.getFieldType();
        org.joda.time.Seconds seconds55 = seconds52.dividedBy((-1));
        int int56 = seconds52.getSeconds();
        org.joda.time.Seconds seconds57 = seconds45.minus(seconds52);
        boolean boolean58 = seconds43.isGreaterThan(seconds57);
        boolean boolean59 = seconds18.isGreaterThan(seconds57);
        boolean boolean60 = seconds11.isGreaterThan(seconds18);
        org.joda.time.DurationFieldType durationFieldType61 = seconds11.getFieldType();
        org.joda.time.Seconds seconds62 = seconds1.minus(seconds11);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(seconds62);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds7 = seconds5.minus((int) (byte) 0);
        boolean boolean8 = seconds4.isLessThan(seconds7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        org.joda.time.Duration duration13 = seconds11.toStandardDuration();
        org.joda.time.Seconds seconds15 = seconds11.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds17 = seconds11.dividedBy((int) (short) 1);
        boolean boolean18 = seconds4.equals((java.lang.Object) (short) 1);
        boolean boolean19 = seconds1.isGreaterThan(seconds4);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds24 = seconds20.minus(seconds23);
        org.joda.time.Seconds seconds26 = seconds23.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        org.joda.time.Seconds seconds31 = seconds28.dividedBy((-1));
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds28);
        int int33 = seconds28.size();
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.secondsIn(readableInterval34);
        org.joda.time.DurationFieldType durationFieldType36 = seconds35.getFieldType();
        org.joda.time.Seconds seconds38 = seconds35.dividedBy((-1));
        int int39 = seconds35.getSeconds();
        org.joda.time.Seconds seconds40 = seconds28.minus(seconds35);
        boolean boolean41 = seconds26.isGreaterThan(seconds40);
        boolean boolean42 = seconds1.isGreaterThan(seconds40);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds52 = seconds48.minus(seconds51);
        org.joda.time.Seconds seconds54 = seconds52.dividedBy((int) '4');
        int int55 = seconds52.size();
        int int56 = seconds47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds52);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType59 = seconds58.getFieldType();
        int int60 = seconds47.get(durationFieldType59);
        boolean boolean61 = seconds40.isSupported(durationFieldType59);
        org.joda.time.PeriodType periodType62 = seconds40.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2147483644 + "'", int60 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(periodType62);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds8 = seconds6.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.Seconds seconds9 = seconds6.multipliedBy(100);
        org.joda.time.Period period10 = seconds6.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds18 = seconds17.negated();
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.PeriodType periodType6 = seconds5.getPeriodType();
        int int7 = seconds5.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds33.toMutablePeriod();
        int int41 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds43 = seconds15.minus(2147483644);
        org.joda.time.Seconds seconds45 = seconds43.plus((int) ' ');
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        org.joda.time.Seconds seconds10 = seconds1.minus(seconds9);
        org.joda.time.PeriodType periodType11 = seconds1.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(periodType11);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        java.lang.String str6 = seconds5.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType8 = seconds5.getFieldType((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Duration duration10 = seconds7.toStandardDuration();
        int int11 = seconds7.getSeconds();
        boolean boolean12 = seconds1.isLessThan(seconds7);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType15 = seconds14.getPeriodType();
        org.joda.time.Duration duration16 = seconds14.toStandardDuration();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds20 = seconds18.minus((int) (byte) 0);
        boolean boolean21 = seconds17.isLessThan(seconds20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType25 = seconds24.getPeriodType();
        org.joda.time.Duration duration26 = seconds24.toStandardDuration();
        org.joda.time.Seconds seconds28 = seconds24.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds30 = seconds24.dividedBy((int) (short) 1);
        boolean boolean31 = seconds17.equals((java.lang.Object) (short) 1);
        boolean boolean32 = seconds14.isGreaterThan(seconds17);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds36.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.secondsIn(readableInterval40);
        org.joda.time.DurationFieldType durationFieldType42 = seconds41.getFieldType();
        org.joda.time.Seconds seconds44 = seconds41.dividedBy((-1));
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds41);
        int int46 = seconds41.size();
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.secondsIn(readableInterval47);
        org.joda.time.DurationFieldType durationFieldType49 = seconds48.getFieldType();
        org.joda.time.Seconds seconds51 = seconds48.dividedBy((-1));
        int int52 = seconds48.getSeconds();
        org.joda.time.Seconds seconds53 = seconds41.minus(seconds48);
        boolean boolean54 = seconds39.isGreaterThan(seconds53);
        boolean boolean55 = seconds14.isGreaterThan(seconds53);
        boolean boolean56 = seconds7.isGreaterThan(seconds14);
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds14);
        org.joda.time.ReadableInterval readableInterval58 = null;
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.secondsIn(readableInterval58);
        org.joda.time.DurationFieldType durationFieldType60 = seconds59.getFieldType();
        org.joda.time.Seconds seconds62 = seconds59.dividedBy((-1));
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds59);
        org.joda.time.DurationFieldType durationFieldType64 = null;
        boolean boolean65 = seconds63.isSupported(durationFieldType64);
        org.joda.time.ReadableInterval readableInterval66 = null;
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.secondsIn(readableInterval66);
        int int68 = seconds67.size();
        org.joda.time.Seconds seconds70 = seconds67.dividedBy(100);
        org.joda.time.PeriodType periodType71 = seconds70.getPeriodType();
        org.joda.time.Seconds seconds73 = seconds70.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds75 = seconds73.minus((-1));
        org.joda.time.DurationFieldType durationFieldType77 = seconds73.getFieldType((int) (byte) 0);
        boolean boolean78 = seconds63.isSupported(durationFieldType77);
        org.joda.time.ReadableInterval readableInterval79 = null;
        org.joda.time.Seconds seconds80 = org.joda.time.Seconds.secondsIn(readableInterval79);
        org.joda.time.Seconds seconds81 = seconds80.negated();
        org.joda.time.MutablePeriod mutablePeriod82 = seconds80.toMutablePeriod();
        org.joda.time.Duration duration83 = seconds80.toStandardDuration();
        int int84 = seconds80.getSeconds();
        java.lang.String str85 = seconds80.toString();
        org.joda.time.Seconds seconds87 = seconds80.minus((int) (short) 10);
        org.joda.time.Seconds seconds88 = seconds63.minus(seconds80);
        org.joda.time.Seconds seconds90 = seconds80.minus((int) (short) -1);
        boolean boolean91 = seconds57.isGreaterThan(seconds90);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(mutablePeriod82);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "PT0S" + "'", str85, "PT0S");
        org.junit.Assert.assertNotNull(seconds87);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertNotNull(seconds90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Period period14 = seconds1.toPeriod();
        int int15 = seconds1.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds7 = seconds1.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        int int10 = seconds1.size();
        org.joda.time.MutablePeriod mutablePeriod11 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds13 = seconds1.plus((int) (short) 0);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType16 = seconds15.getPeriodType();
        org.joda.time.Duration duration17 = seconds15.toStandardDuration();
        org.joda.time.Seconds seconds19 = seconds15.multipliedBy(0);
        org.joda.time.Seconds seconds20 = seconds15.negated();
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = seconds21.get(durationFieldType22);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds25 = seconds21.minus(seconds24);
        boolean boolean26 = seconds20.isGreaterThan(seconds25);
        org.joda.time.Duration duration27 = seconds20.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod28 = seconds20.toMutablePeriod();
        boolean boolean29 = seconds1.isGreaterThan(seconds20);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        boolean boolean72 = seconds64.isLessThan(seconds69);
        boolean boolean73 = seconds54.isLessThan(seconds64);
        org.joda.time.Seconds seconds75 = seconds54.multipliedBy((int) (byte) -1);
        int int76 = seconds54.size();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType78 = seconds54.getFieldType((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT2147483647S");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.secondsIn(readableInterval2);
        org.joda.time.DurationFieldType durationFieldType4 = seconds3.getFieldType();
        org.joda.time.Seconds seconds6 = seconds3.dividedBy((-1));
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        org.joda.time.DurationFieldType durationFieldType8 = seconds7.getFieldType();
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int11 = seconds10.getSeconds();
        org.joda.time.Duration duration12 = seconds10.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds7.minus(seconds10);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        org.joda.time.Seconds seconds16 = seconds15.negated();
        org.joda.time.Seconds seconds18 = seconds15.minus((int) '#');
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Duration duration22 = seconds20.toStandardDuration();
        org.joda.time.Seconds seconds24 = seconds20.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds25 = seconds24.negated();
        org.joda.time.Duration duration26 = seconds24.toStandardDuration();
        org.joda.time.Seconds seconds27 = seconds24.negated();
        org.joda.time.DurationFieldType durationFieldType28 = seconds24.getFieldType();
        boolean boolean29 = seconds15.isSupported(durationFieldType28);
        boolean boolean30 = seconds13.isSupported(durationFieldType28);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds31 = seconds1.plus(seconds13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 1");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        java.lang.String str6 = seconds5.toString();
        int int7 = seconds5.size();
        org.joda.time.DurationFieldType durationFieldType8 = seconds5.getFieldType();
        org.joda.time.PeriodType periodType9 = seconds5.getPeriodType();
        int int10 = seconds5.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(2147483647);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.multipliedBy(0);
        org.joda.time.Seconds seconds8 = seconds3.negated();
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        boolean boolean14 = seconds8.isGreaterThan(seconds13);
        org.joda.time.Seconds seconds16 = seconds8.multipliedBy(1);
        boolean boolean17 = seconds1.equals((java.lang.Object) 1);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        int int7 = seconds6.size();
        org.joda.time.Seconds seconds9 = seconds6.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        boolean boolean13 = seconds9.isSupported(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = seconds19.get(durationFieldType20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds23 = seconds19.minus(seconds22);
        org.joda.time.Seconds seconds25 = seconds23.dividedBy((int) '4');
        int int26 = seconds23.size();
        int int27 = seconds18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds23);
        org.joda.time.Seconds seconds29 = seconds23.plus(0);
        org.joda.time.Seconds seconds30 = seconds9.minus(seconds23);
        org.joda.time.DurationFieldType durationFieldType31 = seconds9.getFieldType();
        boolean boolean32 = seconds1.isSupported(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType34 = seconds33.getPeriodType();
        org.joda.time.Seconds seconds35 = seconds1.minus(seconds33);
        org.joda.time.Seconds seconds37 = seconds33.multipliedBy((int) 'a');
        java.lang.Class<?> wildcardClass38 = seconds33.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds33.toMutablePeriod();
        int int41 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds43 = seconds15.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.seconds(0);
        org.joda.time.Seconds seconds47 = seconds45.minus((int) (byte) 100);
        org.joda.time.Seconds seconds48 = seconds15.plus(seconds45);
        org.joda.time.Seconds seconds50 = seconds45.plus((int) ' ');
        java.lang.String str51 = seconds45.toString();
        org.joda.time.MutablePeriod mutablePeriod52 = seconds45.toMutablePeriod();
        java.lang.Class<?> wildcardClass53 = seconds45.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PT0S" + "'", str51, "PT0S");
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds33.toMutablePeriod();
        int int41 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds43 = seconds15.minus(2147483644);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType45 = seconds43.getFieldType(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.multipliedBy(0);
        org.joda.time.Seconds seconds8 = seconds3.negated();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds3);
        int int10 = seconds3.getSeconds();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.Seconds seconds22 = seconds20.dividedBy((int) '4');
        int int23 = seconds20.size();
        int int24 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds20);
        org.joda.time.Seconds seconds26 = seconds20.plus(0);
        org.joda.time.Seconds seconds28 = seconds20.multipliedBy(0);
        org.joda.time.Seconds seconds29 = seconds3.minus(seconds20);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType32 = seconds31.getPeriodType();
        org.joda.time.Period period33 = seconds31.toPeriod();
        org.joda.time.Duration duration34 = seconds31.toStandardDuration();
        org.joda.time.Seconds seconds36 = seconds31.plus((int) (short) 0);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType39 = seconds38.getPeriodType();
        org.joda.time.Duration duration40 = seconds38.toStandardDuration();
        org.joda.time.Seconds seconds42 = seconds38.plus((int) (short) 0);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.Seconds seconds49 = seconds46.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = seconds50.get(durationFieldType51);
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds54 = seconds50.minus(seconds53);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds61 = seconds59.dividedBy((int) '4');
        int int62 = seconds59.size();
        int int63 = seconds54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds59);
        org.joda.time.Seconds seconds65 = seconds59.plus(0);
        org.joda.time.MutablePeriod mutablePeriod66 = seconds59.toMutablePeriod();
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = seconds67.get(durationFieldType68);
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds71 = seconds67.minus(seconds70);
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType73 = null;
        int int74 = seconds72.get(durationFieldType73);
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds76 = seconds72.minus(seconds75);
        org.joda.time.Seconds seconds78 = seconds76.dividedBy((int) '4');
        int int79 = seconds76.size();
        int int80 = seconds71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds76);
        org.joda.time.DurationFieldType durationFieldType81 = seconds71.getFieldType();
        int int82 = seconds59.get(durationFieldType81);
        boolean boolean83 = seconds46.isSupported(durationFieldType81);
        org.joda.time.Seconds seconds84 = seconds42.plus(seconds46);
        boolean boolean85 = seconds31.isLessThan(seconds46);
        boolean boolean86 = seconds3.isLessThan(seconds46);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2147483644 + "'", int82 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.multipliedBy(0);
        org.joda.time.Seconds seconds8 = seconds3.negated();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds3);
        org.joda.time.Duration duration10 = seconds9.toStandardDuration();
        java.lang.String str11 = seconds9.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT2S" + "'", str11, "PT2S");
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        java.lang.String str5 = seconds1.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT0S" + "'", str5, "PT0S");
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.DurationFieldType durationFieldType13 = seconds8.getFieldType();
        boolean boolean14 = seconds1.isSupported(durationFieldType13);
        org.joda.time.Period period15 = seconds1.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Seconds seconds17 = seconds15.negated();
        java.lang.Class<?> wildcardClass18 = seconds15.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds0.getFieldType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((int) ' ');
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.secondsIn(readableInterval9);
        org.joda.time.DurationFieldType durationFieldType11 = seconds10.getFieldType();
        org.joda.time.Seconds seconds13 = seconds10.dividedBy((-1));
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds13);
        org.joda.time.DurationFieldType durationFieldType15 = seconds14.getFieldType();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int18 = seconds17.getSeconds();
        org.joda.time.Duration duration19 = seconds17.toStandardDuration();
        org.joda.time.Seconds seconds20 = seconds14.minus(seconds17);
        boolean boolean21 = seconds0.isGreaterThan(seconds14);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.seconds((int) (byte) -1);
        int int24 = seconds23.size();
        org.joda.time.Seconds seconds26 = seconds23.minus(10);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        org.joda.time.Seconds seconds31 = seconds28.dividedBy((-1));
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds31);
        org.joda.time.DurationFieldType durationFieldType33 = seconds32.getFieldType();
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int36 = seconds35.getSeconds();
        org.joda.time.Duration duration37 = seconds35.toStandardDuration();
        org.joda.time.Seconds seconds38 = seconds32.minus(seconds35);
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.secondsIn(readableInterval39);
        org.joda.time.Seconds seconds41 = seconds40.negated();
        org.joda.time.Seconds seconds43 = seconds40.minus((int) '#');
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType46 = seconds45.getPeriodType();
        org.joda.time.Duration duration47 = seconds45.toStandardDuration();
        org.joda.time.Seconds seconds49 = seconds45.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds50 = seconds49.negated();
        org.joda.time.Duration duration51 = seconds49.toStandardDuration();
        org.joda.time.Seconds seconds52 = seconds49.negated();
        org.joda.time.DurationFieldType durationFieldType53 = seconds49.getFieldType();
        boolean boolean54 = seconds40.isSupported(durationFieldType53);
        boolean boolean55 = seconds38.isSupported(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType56 = seconds38.getFieldType();
        boolean boolean57 = seconds26.isSupported(durationFieldType56);
        boolean boolean58 = seconds0.isSupported(durationFieldType56);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType28 = seconds27.getPeriodType();
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.dividedBy((-1));
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds33);
        org.joda.time.Seconds seconds35 = seconds33.negated();
        org.joda.time.Seconds seconds36 = seconds27.plus(seconds33);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int39 = seconds38.getSeconds();
        org.joda.time.Duration duration40 = seconds38.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.secondsIn(readableInterval41);
        org.joda.time.Seconds seconds43 = seconds42.negated();
        int int44 = seconds38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds43);
        org.joda.time.Duration duration45 = seconds43.toStandardDuration();
        org.joda.time.Seconds seconds46 = seconds27.minus(seconds43);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds50 = seconds48.minus((int) (byte) 0);
        boolean boolean51 = seconds47.isLessThan(seconds50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds55 = seconds53.minus((int) (byte) 0);
        boolean boolean56 = seconds52.isLessThan(seconds55);
        org.joda.time.Period period57 = seconds52.toPeriod();
        int int58 = seconds50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds52);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType61 = seconds60.getFieldType();
        boolean boolean62 = seconds50.isSupported(durationFieldType61);
        int int63 = seconds43.get(durationFieldType61);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(1);
        int int2 = seconds1.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(0);
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 100);
        int int4 = seconds3.size();
        int int5 = seconds3.size();
        int int7 = seconds3.getValue(0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-100) + "'", int7 == (-100));
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds2.toMutablePeriod();
        org.joda.time.Duration duration4 = seconds2.toStandardDuration();
        org.joda.time.Seconds seconds6 = seconds2.plus((int) '4');
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.Seconds seconds14 = seconds13.negated();
        org.joda.time.MutablePeriod mutablePeriod15 = seconds13.toMutablePeriod();
        org.joda.time.Duration duration16 = seconds13.toStandardDuration();
        boolean boolean17 = seconds7.equals((java.lang.Object) seconds13);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds13);
        boolean boolean19 = seconds2.isGreaterThan(seconds13);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.PeriodType periodType6 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = seconds12.isSupported(durationFieldType13);
        org.joda.time.Seconds seconds16 = seconds12.plus((int) (byte) 1);
        org.joda.time.Seconds seconds18 = seconds12.multipliedBy((int) (short) 100);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds12);
        org.joda.time.Seconds seconds20 = seconds1.plus(seconds19);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds8 = seconds6.dividedBy((int) '4');
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        org.joda.time.MutablePeriod mutablePeriod10 = seconds9.toMutablePeriod();
        org.joda.time.Seconds seconds12 = seconds9.plus((int) (byte) 0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(seconds12);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds8 = seconds6.minus((int) (byte) 0);
        boolean boolean9 = seconds5.isLessThan(seconds8);
        org.joda.time.Period period10 = seconds5.toPeriod();
        int int11 = seconds3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds5);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.dividedBy((int) '4');
        int int25 = seconds22.size();
        int int26 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        boolean boolean27 = seconds12.isLessThan(seconds22);
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.secondsIn(readableInterval28);
        int int30 = seconds29.size();
        org.joda.time.Seconds seconds32 = seconds29.dividedBy(100);
        org.joda.time.PeriodType periodType33 = seconds32.getPeriodType();
        org.joda.time.Seconds seconds35 = seconds32.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds37 = seconds35.minus((-1));
        org.joda.time.Seconds seconds38 = seconds22.plus(seconds35);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = seconds39.get(durationFieldType40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds43 = seconds39.minus(seconds42);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = seconds44.minus(seconds47);
        org.joda.time.Seconds seconds50 = seconds48.dividedBy((int) '4');
        int int51 = seconds48.size();
        int int52 = seconds43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds48);
        org.joda.time.Seconds seconds54 = seconds48.plus(0);
        org.joda.time.MutablePeriod mutablePeriod55 = seconds48.toMutablePeriod();
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = seconds56.get(durationFieldType57);
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds60 = seconds56.minus(seconds59);
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = seconds61.get(durationFieldType62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds65 = seconds61.minus(seconds64);
        org.joda.time.Seconds seconds67 = seconds65.dividedBy((int) '4');
        int int68 = seconds65.size();
        int int69 = seconds60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds65);
        org.joda.time.DurationFieldType durationFieldType70 = seconds60.getFieldType();
        int int71 = seconds48.get(durationFieldType70);
        int int72 = seconds22.get(durationFieldType70);
        boolean boolean73 = seconds5.isSupported(durationFieldType70);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2147483644 + "'", int71 == 2147483644);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2147483644 + "'", int72 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        int int13 = seconds8.size();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        org.joda.time.Seconds seconds18 = seconds15.dividedBy((-1));
        int int19 = seconds15.getSeconds();
        org.joda.time.Seconds seconds20 = seconds8.minus(seconds15);
        boolean boolean21 = seconds6.isGreaterThan(seconds20);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType24 = seconds23.getPeriodType();
        org.joda.time.Duration duration25 = seconds23.toStandardDuration();
        org.joda.time.Seconds seconds27 = seconds23.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds28 = seconds27.negated();
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.Seconds seconds31 = seconds30.negated();
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.secondsIn(readableInterval32);
        int int34 = seconds33.size();
        boolean boolean35 = seconds31.isLessThan(seconds33);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.secondsIn(readableInterval36);
        int int38 = seconds37.size();
        org.joda.time.Seconds seconds40 = seconds37.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.secondsIn(readableInterval41);
        org.joda.time.DurationFieldType durationFieldType43 = seconds42.getFieldType();
        boolean boolean44 = seconds40.isSupported(durationFieldType43);
        boolean boolean45 = seconds33.isSupported(durationFieldType43);
        boolean boolean46 = seconds27.isSupported(durationFieldType43);
        boolean boolean47 = seconds20.isSupported(durationFieldType43);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds2 = seconds0.minus((int) (byte) 0);
        java.lang.String str3 = seconds2.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int5 = seconds2.getValue(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT1S" + "'", str3, "PT1S");
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.secondsIn(readableInterval4);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds6);
        org.joda.time.Seconds seconds9 = seconds1.multipliedBy(3);
        java.lang.Class<?> wildcardClass10 = seconds1.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.PeriodType periodType7 = seconds5.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Seconds seconds11 = seconds5.multipliedBy((int) (short) 100);
        org.joda.time.PeriodType periodType12 = seconds5.getPeriodType();
        org.joda.time.PeriodType periodType13 = seconds5.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod2 = seconds0.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds4.getFieldType();
        org.joda.time.Seconds seconds7 = seconds4.dividedBy((-1));
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        int int10 = seconds9.size();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.secondsIn(readableInterval13);
        org.joda.time.DurationFieldType durationFieldType15 = seconds14.getFieldType();
        boolean boolean16 = seconds12.isSupported(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = seconds22.get(durationFieldType23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = seconds22.minus(seconds25);
        org.joda.time.Seconds seconds28 = seconds26.dividedBy((int) '4');
        int int29 = seconds26.size();
        int int30 = seconds21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds26);
        org.joda.time.Seconds seconds32 = seconds26.plus(0);
        org.joda.time.Seconds seconds33 = seconds12.minus(seconds26);
        org.joda.time.DurationFieldType durationFieldType34 = seconds12.getFieldType();
        boolean boolean35 = seconds4.isSupported(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType37 = seconds36.getPeriodType();
        org.joda.time.Seconds seconds38 = seconds4.minus(seconds36);
        org.joda.time.DurationFieldType durationFieldType40 = seconds4.getFieldType((int) (short) 0);
        boolean boolean41 = seconds0.isSupported(durationFieldType40);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.Seconds seconds19 = seconds15.multipliedBy((int) (short) 1);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.Seconds seconds21 = seconds19.dividedBy((int) '4');
        int int22 = seconds19.size();
        int int23 = seconds14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds19);
        org.joda.time.Seconds seconds25 = seconds19.plus(0);
        java.lang.String str26 = seconds25.toString();
        org.joda.time.Period period27 = seconds25.toPeriod();
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.secondsIn(readableInterval28);
        org.joda.time.Seconds seconds30 = seconds29.negated();
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds29.get(durationFieldType31);
        boolean boolean33 = seconds25.isLessThan(seconds29);
        org.joda.time.Seconds seconds34 = seconds9.minus(seconds25);
        org.joda.time.Period period35 = seconds25.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds37 = seconds25.plus(32);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483644 + 32");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483644S" + "'", str26, "PT2147483644S");
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(period35);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.Seconds seconds19 = seconds15.multipliedBy((int) (short) -1);
        org.joda.time.PeriodType periodType20 = seconds15.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(periodType20);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Period period7 = seconds3.toPeriod();
        org.joda.time.Seconds seconds8 = seconds3.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = seconds3.getValue(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(seconds8);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        org.joda.time.Duration duration2 = seconds0.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(duration2);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(2147483644);
        org.joda.time.Hours hours2 = seconds1.toStandardHours();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(hours2);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT2147483644S");
        org.joda.time.Weeks weeks2 = seconds1.toStandardWeeks();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) '#');
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy((-1));
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = seconds23.isSupported(durationFieldType24);
        org.joda.time.Seconds seconds27 = seconds23.plus((int) (byte) 1);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) '4');
        int int40 = seconds37.size();
        int int41 = seconds32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        org.joda.time.Seconds seconds43 = seconds37.plus(0);
        java.lang.String str44 = seconds43.toString();
        org.joda.time.Period period45 = seconds43.toPeriod();
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        org.joda.time.Seconds seconds48 = seconds47.negated();
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds47.get(durationFieldType49);
        boolean boolean51 = seconds43.isLessThan(seconds47);
        org.joda.time.Seconds seconds52 = seconds27.minus(seconds43);
        org.joda.time.Seconds seconds54 = seconds52.dividedBy((int) 'a');
        org.joda.time.Seconds seconds55 = seconds11.plus(seconds52);
        org.joda.time.Seconds seconds56 = seconds55.negated();
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = seconds57.get(durationFieldType58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds61 = seconds57.minus(seconds60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = seconds62.get(durationFieldType63);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds66 = seconds62.minus(seconds65);
        org.joda.time.Seconds seconds68 = seconds66.dividedBy((int) '4');
        int int69 = seconds66.size();
        int int70 = seconds61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds66);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = seconds71.get(durationFieldType72);
        boolean boolean74 = seconds66.isLessThan(seconds71);
        boolean boolean75 = seconds56.isLessThan(seconds66);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType78 = seconds77.getPeriodType();
        org.joda.time.Duration duration79 = seconds77.toStandardDuration();
        org.joda.time.Seconds seconds81 = seconds77.dividedBy((int) (byte) 10);
        int int82 = seconds56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds81);
        boolean boolean83 = seconds1.isGreaterThan(seconds56);
        org.joda.time.Seconds seconds85 = seconds1.plus((int) ' ');
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2147483644S" + "'", str44, "PT2147483644S");
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(seconds85);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Duration duration30 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds32 = seconds28.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds34 = seconds28.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds36 = seconds28.minus(seconds35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds40.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = seconds44.minus(seconds47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = seconds49.minus(seconds52);
        org.joda.time.Seconds seconds55 = seconds53.dividedBy((int) '4');
        int int56 = seconds53.size();
        int int57 = seconds48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds53);
        org.joda.time.Seconds seconds59 = seconds53.plus(0);
        org.joda.time.MutablePeriod mutablePeriod60 = seconds53.toMutablePeriod();
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = seconds61.get(durationFieldType62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds65 = seconds61.minus(seconds64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = seconds66.get(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds70 = seconds66.minus(seconds69);
        org.joda.time.Seconds seconds72 = seconds70.dividedBy((int) '4');
        int int73 = seconds70.size();
        int int74 = seconds65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds70);
        org.joda.time.DurationFieldType durationFieldType75 = seconds65.getFieldType();
        int int76 = seconds53.get(durationFieldType75);
        boolean boolean77 = seconds40.isSupported(durationFieldType75);
        boolean boolean78 = seconds36.isSupported(durationFieldType75);
        boolean boolean79 = seconds10.isGreaterThan(seconds36);
        org.joda.time.Seconds seconds81 = seconds36.dividedBy((int) ' ');
        org.joda.time.Seconds seconds82 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds36);
        org.joda.time.MutablePeriod mutablePeriod83 = seconds82.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483644 + "'", int76 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(mutablePeriod83);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        int int16 = seconds15.size();
        org.joda.time.Seconds seconds18 = seconds15.dividedBy(100);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Seconds seconds21 = seconds18.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds23 = seconds21.minus((-1));
        int int24 = seconds21.size();
        int int25 = seconds9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds21);
        org.joda.time.Seconds seconds27 = seconds9.dividedBy((int) (short) 100);
        java.lang.Class<?> wildcardClass28 = seconds9.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.DurationFieldType durationFieldType3 = seconds1.getFieldType();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) ' ');
        java.lang.String str6 = seconds1.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-1S" + "'", str6, "PT-1S");
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds8 = seconds1.multipliedBy(32);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(101);
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds56 = seconds54.dividedBy((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType28 = seconds27.getPeriodType();
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.dividedBy((-1));
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds33);
        org.joda.time.Seconds seconds35 = seconds33.negated();
        org.joda.time.Seconds seconds36 = seconds27.plus(seconds33);
        org.joda.time.PeriodType periodType37 = seconds36.getPeriodType();
        int int38 = seconds36.getSeconds();
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.secondsIn(readableInterval39);
        int int41 = seconds40.size();
        org.joda.time.Seconds seconds43 = seconds40.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.DurationFieldType durationFieldType46 = seconds45.getFieldType();
        boolean boolean47 = seconds43.isSupported(durationFieldType46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds52 = seconds48.minus(seconds51);
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = seconds53.get(durationFieldType54);
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds57 = seconds53.minus(seconds56);
        org.joda.time.Seconds seconds59 = seconds57.dividedBy((int) '4');
        int int60 = seconds57.size();
        int int61 = seconds52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds57);
        org.joda.time.Seconds seconds63 = seconds57.plus(0);
        org.joda.time.Seconds seconds64 = seconds43.minus(seconds57);
        org.joda.time.DurationFieldType durationFieldType65 = seconds43.getFieldType();
        int int66 = seconds43.size();
        org.joda.time.MutablePeriod mutablePeriod67 = seconds43.toMutablePeriod();
        int int68 = seconds36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds43);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = seconds43.getValue((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-2147483644) + "'", int38 == (-2147483644));
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        int int17 = seconds4.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = seconds4.negated();
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        int int21 = seconds19.getSeconds();
        org.joda.time.Seconds seconds22 = seconds4.plus(seconds19);
        org.joda.time.MutablePeriod mutablePeriod23 = seconds4.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483644 + "'", int17 == 2147483644);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds17 = seconds15.dividedBy((int) '4');
        int int18 = seconds15.size();
        int int19 = seconds10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds15);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        int int23 = seconds10.get(durationFieldType22);
        org.joda.time.Seconds seconds24 = seconds10.negated();
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        int int27 = seconds25.getSeconds();
        org.joda.time.Seconds seconds28 = seconds10.plus(seconds25);
        int int29 = seconds0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = seconds35.get(durationFieldType36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds39 = seconds35.minus(seconds38);
        org.joda.time.Seconds seconds41 = seconds39.dividedBy((int) '4');
        int int42 = seconds39.size();
        int int43 = seconds34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds39);
        org.joda.time.Seconds seconds45 = seconds39.plus(0);
        java.lang.String str46 = seconds45.toString();
        org.joda.time.Period period47 = seconds45.toPeriod();
        org.joda.time.Seconds seconds49 = seconds45.multipliedBy((int) (short) -1);
        int int50 = seconds0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds45);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2147483644 + "'", int23 == 2147483644);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT2147483644S" + "'", str46, "PT2147483644S");
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds19.get(durationFieldType21);
        boolean boolean23 = seconds15.isLessThan(seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.DurationFieldType durationFieldType27 = seconds25.getFieldType(0);
        org.joda.time.Seconds seconds29 = seconds25.plus((int) (byte) 1);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(seconds29);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Duration duration10 = seconds7.toStandardDuration();
        int int11 = seconds7.getSeconds();
        boolean boolean12 = seconds1.isLessThan(seconds7);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.dividedBy((int) '4');
        int int25 = seconds22.size();
        int int26 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        org.joda.time.Seconds seconds28 = seconds22.plus(0);
        java.lang.String str29 = seconds28.toString();
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn(readableInterval31);
        org.joda.time.Seconds seconds33 = seconds32.negated();
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds32.get(durationFieldType34);
        boolean boolean36 = seconds28.isLessThan(seconds32);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds32);
        org.joda.time.Seconds seconds38 = seconds1.plus(seconds32);
        org.joda.time.DurationFieldType durationFieldType39 = seconds38.getFieldType();
        org.joda.time.Duration duration40 = seconds38.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2147483644S" + "'", str29, "PT2147483644S");
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(duration40);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        java.lang.Class<?> wildcardClass4 = seconds1.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds33.toMutablePeriod();
        int int41 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds43 = seconds15.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds45 = seconds43.multipliedBy((int) (short) 1);
        org.joda.time.Seconds seconds46 = seconds43.negated();
        java.lang.Class<?> wildcardClass47 = seconds43.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT2147483647S");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.secondsIn(readableInterval2);
        org.joda.time.Seconds seconds4 = seconds3.negated();
        org.joda.time.MutablePeriod mutablePeriod5 = seconds3.toMutablePeriod();
        org.joda.time.Seconds seconds7 = seconds3.minus((int) (byte) -1);
        org.joda.time.Seconds seconds8 = seconds3.negated();
        int int9 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.Seconds seconds21 = seconds19.dividedBy((int) '4');
        int int22 = seconds19.size();
        int int23 = seconds14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds19);
        org.joda.time.Seconds seconds25 = seconds19.plus(0);
        java.lang.String str26 = seconds25.toString();
        org.joda.time.Period period27 = seconds25.toPeriod();
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.secondsIn(readableInterval28);
        org.joda.time.Seconds seconds30 = seconds29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = seconds29.toMutablePeriod();
        org.joda.time.Duration duration32 = seconds29.toStandardDuration();
        boolean boolean33 = seconds25.equals((java.lang.Object) seconds29);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = seconds34.get(durationFieldType35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds38 = seconds34.minus(seconds37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = seconds39.get(durationFieldType40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds43 = seconds39.minus(seconds42);
        org.joda.time.Seconds seconds45 = seconds43.dividedBy((int) '4');
        int int46 = seconds43.size();
        int int47 = seconds38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds43);
        org.joda.time.Seconds seconds49 = seconds43.plus(0);
        org.joda.time.MutablePeriod mutablePeriod50 = seconds43.toMutablePeriod();
        int int51 = seconds25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds43);
        org.joda.time.Seconds seconds53 = seconds25.minus(2147483644);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = seconds54.get(durationFieldType55);
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds58 = seconds54.minus(seconds57);
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = seconds59.get(durationFieldType60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds63 = seconds59.minus(seconds62);
        org.joda.time.Seconds seconds65 = seconds63.dividedBy((int) '4');
        int int66 = seconds63.size();
        int int67 = seconds58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds63);
        org.joda.time.Seconds seconds69 = seconds63.plus(0);
        org.joda.time.MutablePeriod mutablePeriod70 = seconds63.toMutablePeriod();
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType73 = seconds72.getPeriodType();
        org.joda.time.Duration duration74 = seconds72.toStandardDuration();
        org.joda.time.Seconds seconds76 = seconds72.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds77 = seconds76.negated();
        org.joda.time.Duration duration78 = seconds76.toStandardDuration();
        org.joda.time.Seconds seconds79 = seconds76.negated();
        org.joda.time.DurationFieldType durationFieldType80 = seconds76.getFieldType();
        boolean boolean81 = seconds63.isSupported(durationFieldType80);
        int int82 = seconds53.get(durationFieldType80);
        int int83 = seconds8.get(durationFieldType80);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483644S" + "'", str26, "PT2147483644S");
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds0.getFieldType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((int) ' ');
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.Seconds seconds10 = seconds8.plus((int) (short) 0);
        org.joda.time.Seconds seconds11 = seconds8.negated();
        org.joda.time.Seconds seconds13 = seconds8.minus(3);
        org.joda.time.DurationFieldType durationFieldType14 = seconds8.getFieldType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds3 = seconds0.plus(1);
        org.joda.time.Duration duration4 = seconds0.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds0.negated();
        org.joda.time.Duration duration6 = seconds0.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType8 = seconds0.getFieldType(41297762);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 41297762");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(duration6);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        int int15 = seconds13.getValue(0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.Seconds seconds4 = seconds2.plus((int) (byte) 100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        int int10 = seconds9.size();
        boolean boolean11 = seconds7.isLessThan(seconds9);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        int int14 = seconds13.size();
        org.joda.time.Seconds seconds16 = seconds13.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.secondsIn(readableInterval17);
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        boolean boolean20 = seconds16.isSupported(durationFieldType19);
        boolean boolean21 = seconds9.isSupported(durationFieldType19);
        int int22 = seconds4.get(durationFieldType19);
        int int23 = seconds4.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.Seconds seconds20 = seconds17.plus(0);
        org.joda.time.MutablePeriod mutablePeriod21 = seconds20.toMutablePeriod();
        org.joda.time.Seconds seconds23 = seconds20.dividedBy(1);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = seconds27.get(durationFieldType28);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds31 = seconds27.minus(seconds30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds36 = seconds32.minus(seconds35);
        org.joda.time.Seconds seconds38 = seconds36.dividedBy((int) '4');
        int int39 = seconds36.size();
        int int40 = seconds31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds36);
        org.joda.time.Seconds seconds42 = seconds36.plus(0);
        java.lang.String str43 = seconds42.toString();
        org.joda.time.Period period44 = seconds42.toPeriod();
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.secondsIn(readableInterval45);
        org.joda.time.Seconds seconds47 = seconds46.negated();
        org.joda.time.MutablePeriod mutablePeriod48 = seconds46.toMutablePeriod();
        org.joda.time.Duration duration49 = seconds46.toStandardDuration();
        boolean boolean50 = seconds42.equals((java.lang.Object) seconds46);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = seconds51.get(durationFieldType52);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds55 = seconds51.minus(seconds54);
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = seconds56.get(durationFieldType57);
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds60 = seconds56.minus(seconds59);
        org.joda.time.Seconds seconds62 = seconds60.dividedBy((int) '4');
        int int63 = seconds60.size();
        int int64 = seconds55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds60);
        org.joda.time.Seconds seconds66 = seconds60.plus(0);
        org.joda.time.MutablePeriod mutablePeriod67 = seconds60.toMutablePeriod();
        int int68 = seconds42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds60);
        org.joda.time.Seconds seconds70 = seconds42.minus(2147483644);
        org.joda.time.Seconds seconds71 = seconds24.minus(seconds70);
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.seconds(2147483644);
        boolean boolean74 = seconds24.isLessThan(seconds73);
        org.joda.time.Period period75 = seconds73.toPeriod();
        org.joda.time.DurationFieldType durationFieldType76 = seconds73.getFieldType();
        boolean boolean77 = seconds20.isSupported(durationFieldType76);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PT2147483644S" + "'", str43, "PT2147483644S");
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds6 = seconds1.multipliedBy((int) (short) 1);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        int int13 = seconds8.size();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        org.joda.time.Seconds seconds18 = seconds15.dividedBy((-1));
        int int19 = seconds15.getSeconds();
        org.joda.time.Seconds seconds20 = seconds8.minus(seconds15);
        boolean boolean21 = seconds6.isGreaterThan(seconds8);
        org.joda.time.MutablePeriod mutablePeriod22 = seconds6.toMutablePeriod();
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds26 = seconds24.minus((int) (byte) 0);
        boolean boolean27 = seconds23.isLessThan(seconds26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds31 = seconds29.minus((int) (byte) 0);
        boolean boolean32 = seconds28.isLessThan(seconds31);
        org.joda.time.Period period33 = seconds28.toPeriod();
        int int34 = seconds26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds28);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType37 = seconds36.getFieldType();
        boolean boolean38 = seconds26.isSupported(durationFieldType37);
        int int39 = seconds6.get(durationFieldType37);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.DurationFieldType durationFieldType26 = seconds4.getFieldType();
        int int27 = seconds4.size();
        org.joda.time.MutablePeriod mutablePeriod28 = seconds4.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.Seconds seconds31 = seconds30.negated();
        org.joda.time.MutablePeriod mutablePeriod32 = seconds30.toMutablePeriod();
        org.joda.time.Duration duration33 = seconds30.toStandardDuration();
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = seconds34.get(durationFieldType35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds38 = seconds34.minus(seconds37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = seconds39.get(durationFieldType40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds43 = seconds39.minus(seconds42);
        org.joda.time.Seconds seconds45 = seconds43.dividedBy((int) '4');
        int int46 = seconds43.size();
        int int47 = seconds38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds43);
        org.joda.time.Seconds seconds49 = seconds43.plus(0);
        boolean boolean50 = seconds30.isLessThan(seconds43);
        int int51 = seconds43.size();
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.secondsIn(readableInterval52);
        org.joda.time.DurationFieldType durationFieldType54 = seconds53.getFieldType();
        org.joda.time.Seconds seconds56 = seconds53.dividedBy((-1));
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds53);
        int int58 = seconds53.size();
        org.joda.time.ReadableInterval readableInterval59 = null;
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.secondsIn(readableInterval59);
        org.joda.time.DurationFieldType durationFieldType61 = seconds60.getFieldType();
        org.joda.time.Seconds seconds63 = seconds60.dividedBy((-1));
        int int64 = seconds60.getSeconds();
        org.joda.time.Seconds seconds65 = seconds53.minus(seconds60);
        org.joda.time.Seconds seconds67 = seconds65.multipliedBy(2147483647);
        int int68 = seconds67.getSeconds();
        boolean boolean69 = seconds43.equals((java.lang.Object) seconds67);
        boolean boolean70 = seconds4.isGreaterThan(seconds67);
        org.joda.time.DurationFieldType durationFieldType71 = null;
        boolean boolean72 = seconds67.isSupported(durationFieldType71);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        java.lang.String str7 = seconds3.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT3S" + "'", str7, "PT3S");
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.multipliedBy(0);
        org.joda.time.Seconds seconds8 = seconds3.negated();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds3);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        org.joda.time.Seconds seconds14 = seconds11.dividedBy((-1));
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds14);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int19 = seconds18.getSeconds();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds21 = seconds15.minus(seconds18);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.secondsIn(readableInterval22);
        org.joda.time.Seconds seconds24 = seconds23.negated();
        org.joda.time.Seconds seconds26 = seconds23.minus((int) '#');
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Duration duration30 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds32 = seconds28.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds33 = seconds32.negated();
        org.joda.time.Duration duration34 = seconds32.toStandardDuration();
        org.joda.time.Seconds seconds35 = seconds32.negated();
        org.joda.time.DurationFieldType durationFieldType36 = seconds32.getFieldType();
        boolean boolean37 = seconds23.isSupported(durationFieldType36);
        boolean boolean38 = seconds21.isSupported(durationFieldType36);
        org.joda.time.Seconds seconds40 = seconds21.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = seconds41.get(durationFieldType42);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds45 = seconds41.minus(seconds44);
        org.joda.time.Seconds seconds47 = seconds44.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds52 = seconds48.minus(seconds51);
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = seconds53.get(durationFieldType54);
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds57 = seconds53.minus(seconds56);
        org.joda.time.Seconds seconds59 = seconds57.dividedBy((int) '4');
        int int60 = seconds57.size();
        int int61 = seconds52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds57);
        org.joda.time.Seconds seconds63 = seconds57.plus(0);
        org.joda.time.MutablePeriod mutablePeriod64 = seconds57.toMutablePeriod();
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType66 = null;
        int int67 = seconds65.get(durationFieldType66);
        org.joda.time.Seconds seconds68 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds69 = seconds65.minus(seconds68);
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType71 = null;
        int int72 = seconds70.get(durationFieldType71);
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds74 = seconds70.minus(seconds73);
        org.joda.time.Seconds seconds76 = seconds74.dividedBy((int) '4');
        int int77 = seconds74.size();
        int int78 = seconds69.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds74);
        org.joda.time.DurationFieldType durationFieldType79 = seconds69.getFieldType();
        int int80 = seconds57.get(durationFieldType79);
        boolean boolean81 = seconds44.isSupported(durationFieldType79);
        int int82 = seconds40.get(durationFieldType79);
        boolean boolean83 = seconds1.equals((java.lang.Object) int82);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2147483644 + "'", int80 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 32 + "'", int82 == 32);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds7 = seconds1.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.Seconds seconds23 = seconds17.plus(0);
        java.lang.String str24 = seconds23.toString();
        org.joda.time.Period period25 = seconds23.toPeriod();
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.Seconds seconds28 = seconds27.negated();
        org.joda.time.MutablePeriod mutablePeriod29 = seconds27.toMutablePeriod();
        org.joda.time.Duration duration30 = seconds27.toStandardDuration();
        boolean boolean31 = seconds23.equals((java.lang.Object) seconds27);
        org.joda.time.Seconds seconds32 = seconds1.minus(seconds27);
        org.joda.time.Duration duration33 = seconds27.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2147483644S" + "'", str24, "PT2147483644S");
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(duration33);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.MutablePeriod mutablePeriod16 = seconds9.toMutablePeriod();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = seconds22.get(durationFieldType23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = seconds22.minus(seconds25);
        org.joda.time.Seconds seconds28 = seconds26.dividedBy((int) '4');
        int int29 = seconds26.size();
        int int30 = seconds21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds26);
        org.joda.time.DurationFieldType durationFieldType31 = seconds21.getFieldType();
        int int32 = seconds9.get(durationFieldType31);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.secondsIn(readableInterval33);
        org.joda.time.DurationFieldType durationFieldType35 = seconds34.getFieldType();
        org.joda.time.Seconds seconds37 = seconds34.dividedBy((-1));
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds34);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        boolean boolean40 = seconds38.isSupported(durationFieldType39);
        org.joda.time.Seconds seconds42 = seconds38.plus((int) (byte) 1);
        org.joda.time.Seconds seconds44 = seconds38.multipliedBy((int) (short) 100);
        boolean boolean45 = seconds9.isGreaterThan(seconds38);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = seconds47.get(durationFieldType48);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds51 = seconds47.minus(seconds50);
        org.joda.time.Seconds seconds53 = seconds50.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = seconds54.get(durationFieldType55);
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds58 = seconds54.minus(seconds57);
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = seconds59.get(durationFieldType60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds63 = seconds59.minus(seconds62);
        org.joda.time.Seconds seconds65 = seconds63.dividedBy((int) '4');
        int int66 = seconds63.size();
        int int67 = seconds58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds63);
        org.joda.time.Seconds seconds69 = seconds63.plus(0);
        org.joda.time.MutablePeriod mutablePeriod70 = seconds63.toMutablePeriod();
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = seconds71.get(durationFieldType72);
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds75 = seconds71.minus(seconds74);
        org.joda.time.Seconds seconds76 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType77 = null;
        int int78 = seconds76.get(durationFieldType77);
        org.joda.time.Seconds seconds79 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds80 = seconds76.minus(seconds79);
        org.joda.time.Seconds seconds82 = seconds80.dividedBy((int) '4');
        int int83 = seconds80.size();
        int int84 = seconds75.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds80);
        org.joda.time.DurationFieldType durationFieldType85 = seconds75.getFieldType();
        int int86 = seconds63.get(durationFieldType85);
        boolean boolean87 = seconds50.isSupported(durationFieldType85);
        boolean boolean88 = seconds46.isSupported(durationFieldType85);
        boolean boolean89 = seconds38.isSupported(durationFieldType85);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483644 + "'", int32 == 2147483644);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2147483644 + "'", int86 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        boolean boolean72 = seconds64.isLessThan(seconds69);
        boolean boolean73 = seconds54.isLessThan(seconds64);
        org.joda.time.Seconds seconds75 = seconds54.multipliedBy((int) (byte) -1);
        org.joda.time.Seconds seconds77 = seconds54.plus(100);
        org.joda.time.Seconds seconds78 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds79 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds81 = seconds79.minus((int) (byte) 0);
        boolean boolean82 = seconds78.isLessThan(seconds81);
        org.joda.time.Seconds seconds83 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds78);
        org.joda.time.PeriodType periodType84 = seconds78.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType86 = seconds78.getFieldType(0);
        int int87 = seconds54.get(durationFieldType86);
        java.lang.Class<?> wildcardClass88 = durationFieldType86.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.DurationFieldType durationFieldType7 = seconds5.getFieldType();
        org.joda.time.Seconds seconds9 = seconds5.minus(3);
        org.joda.time.Seconds seconds10 = seconds9.negated();
        org.joda.time.Seconds seconds12 = seconds10.minus((-100));
        org.joda.time.PeriodType periodType13 = seconds10.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int9 = seconds8.getSeconds();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds11 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = seconds12.get(durationFieldType13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds16 = seconds12.minus(seconds15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds23 = seconds21.dividedBy((int) '4');
        int int24 = seconds21.size();
        int int25 = seconds16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds21);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        boolean boolean29 = seconds21.isLessThan(seconds26);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = seconds35.get(durationFieldType36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds39 = seconds35.minus(seconds38);
        org.joda.time.Seconds seconds41 = seconds39.dividedBy((int) '4');
        int int42 = seconds39.size();
        int int43 = seconds34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds39);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        boolean boolean47 = seconds39.isLessThan(seconds44);
        boolean boolean48 = seconds26.isLessThan(seconds39);
        int int49 = seconds39.size();
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds39);
        org.joda.time.Seconds seconds51 = seconds5.plus(seconds39);
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.secondsIn(readableInterval52);
        org.joda.time.DurationFieldType durationFieldType54 = seconds53.getFieldType();
        org.joda.time.Seconds seconds56 = seconds53.dividedBy((-1));
        int int57 = seconds53.getSeconds();
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = seconds58.get(durationFieldType59);
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds62 = seconds58.minus(seconds61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType64 = null;
        int int65 = seconds63.get(durationFieldType64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds67 = seconds63.minus(seconds66);
        org.joda.time.Seconds seconds69 = seconds67.dividedBy((int) '4');
        int int70 = seconds67.size();
        int int71 = seconds62.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds67);
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType73 = null;
        int int74 = seconds72.get(durationFieldType73);
        boolean boolean75 = seconds67.isLessThan(seconds72);
        org.joda.time.Seconds seconds76 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType77 = null;
        int int78 = seconds76.get(durationFieldType77);
        org.joda.time.Seconds seconds79 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds80 = seconds76.minus(seconds79);
        org.joda.time.Seconds seconds81 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType82 = null;
        int int83 = seconds81.get(durationFieldType82);
        org.joda.time.Seconds seconds84 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds85 = seconds81.minus(seconds84);
        org.joda.time.Seconds seconds87 = seconds85.dividedBy((int) '4');
        int int88 = seconds85.size();
        int int89 = seconds80.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds85);
        org.joda.time.Seconds seconds90 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType91 = null;
        int int92 = seconds90.get(durationFieldType91);
        boolean boolean93 = seconds85.isLessThan(seconds90);
        boolean boolean94 = seconds72.isLessThan(seconds85);
        org.joda.time.Seconds seconds96 = org.joda.time.Seconds.seconds((int) (byte) 1);
        boolean boolean97 = seconds85.isLessThan(seconds96);
        org.joda.time.Seconds seconds98 = seconds53.minus(seconds96);
        int int99 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds96);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertNotNull(seconds87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(seconds90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(seconds96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(seconds98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + (-1) + "'", int99 == (-1));
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.PeriodType periodType3 = seconds1.getPeriodType();
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration4);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Duration duration2 = seconds1.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        java.lang.Class<?> wildcardClass4 = mutablePeriod3.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        boolean boolean12 = seconds6.isGreaterThan(seconds11);
        org.joda.time.Seconds seconds14 = seconds6.multipliedBy(1);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType17 = seconds16.getPeriodType();
        org.joda.time.Duration duration18 = seconds16.toStandardDuration();
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds16);
        org.joda.time.Seconds seconds21 = seconds16.minus(3);
        int int22 = seconds14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds21);
        org.joda.time.Period period23 = seconds14.toPeriod();
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        int int26 = seconds25.size();
        org.joda.time.Seconds seconds28 = seconds25.dividedBy(100);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Seconds seconds30 = seconds28.negated();
        int int31 = seconds14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds30);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.multipliedBy(0);
        org.joda.time.Seconds seconds8 = seconds3.negated();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds3);
        java.lang.String str10 = seconds1.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = seconds1.getFieldType((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT1S" + "'", str10, "PT1S");
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.multipliedBy(0);
        org.joda.time.Seconds seconds8 = seconds3.negated();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds3);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = seconds19.get(durationFieldType20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds23 = seconds19.minus(seconds22);
        org.joda.time.Seconds seconds25 = seconds23.dividedBy((int) '4');
        int int26 = seconds23.size();
        int int27 = seconds18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds23);
        org.joda.time.Seconds seconds29 = seconds23.plus(0);
        java.lang.String str30 = seconds29.toString();
        org.joda.time.Period period31 = seconds29.toPeriod();
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.secondsIn(readableInterval32);
        org.joda.time.Seconds seconds34 = seconds33.negated();
        org.joda.time.MutablePeriod mutablePeriod35 = seconds33.toMutablePeriod();
        org.joda.time.Duration duration36 = seconds33.toStandardDuration();
        boolean boolean37 = seconds29.equals((java.lang.Object) seconds33);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = seconds38.get(durationFieldType39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds42 = seconds38.minus(seconds41);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.Seconds seconds49 = seconds47.dividedBy((int) '4');
        int int50 = seconds47.size();
        int int51 = seconds42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds47);
        org.joda.time.Seconds seconds53 = seconds47.plus(0);
        org.joda.time.MutablePeriod mutablePeriod54 = seconds47.toMutablePeriod();
        int int55 = seconds29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds47);
        org.joda.time.Seconds seconds57 = seconds29.minus(2147483644);
        org.joda.time.Seconds seconds58 = seconds11.minus(seconds57);
        boolean boolean59 = seconds9.isGreaterThan(seconds11);
        org.joda.time.Seconds seconds61 = seconds9.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.secondsIn(readableInterval62);
        org.joda.time.Seconds seconds64 = seconds63.negated();
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = seconds63.get(durationFieldType65);
        org.joda.time.PeriodType periodType67 = seconds63.getPeriodType();
        java.lang.String str68 = seconds63.toString();
        org.joda.time.Seconds seconds70 = seconds63.dividedBy(10);
        int int72 = seconds70.getValue(0);
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds70);
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds73);
        org.joda.time.Seconds seconds76 = seconds73.plus(2147483647);
        boolean boolean77 = seconds61.equals((java.lang.Object) seconds73);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT2147483644S" + "'", str30, "PT2147483644S");
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "PT0S" + "'", str68, "PT0S");
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.MutablePeriod mutablePeriod8 = seconds6.toMutablePeriod();
        org.joda.time.Duration duration9 = seconds6.toStandardDuration();
        boolean boolean10 = seconds0.equals((java.lang.Object) seconds6);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        java.lang.String str12 = seconds11.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT0S" + "'", str12, "PT0S");
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.MutablePeriod mutablePeriod26 = seconds25.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) '4');
        int int2 = seconds1.getSeconds();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(duration3);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds33.toMutablePeriod();
        int int41 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds43 = seconds15.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds45 = seconds43.multipliedBy((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = seconds45.getValue((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.DurationFieldType durationFieldType26 = seconds4.getFieldType();
        int int27 = seconds4.size();
        org.joda.time.MutablePeriod mutablePeriod28 = seconds4.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.Seconds seconds31 = seconds30.negated();
        org.joda.time.MutablePeriod mutablePeriod32 = seconds30.toMutablePeriod();
        org.joda.time.Duration duration33 = seconds30.toStandardDuration();
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = seconds34.get(durationFieldType35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds38 = seconds34.minus(seconds37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = seconds39.get(durationFieldType40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds43 = seconds39.minus(seconds42);
        org.joda.time.Seconds seconds45 = seconds43.dividedBy((int) '4');
        int int46 = seconds43.size();
        int int47 = seconds38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds43);
        org.joda.time.Seconds seconds49 = seconds43.plus(0);
        boolean boolean50 = seconds30.isLessThan(seconds43);
        int int51 = seconds43.size();
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.secondsIn(readableInterval52);
        org.joda.time.DurationFieldType durationFieldType54 = seconds53.getFieldType();
        org.joda.time.Seconds seconds56 = seconds53.dividedBy((-1));
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds53);
        int int58 = seconds53.size();
        org.joda.time.ReadableInterval readableInterval59 = null;
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.secondsIn(readableInterval59);
        org.joda.time.DurationFieldType durationFieldType61 = seconds60.getFieldType();
        org.joda.time.Seconds seconds63 = seconds60.dividedBy((-1));
        int int64 = seconds60.getSeconds();
        org.joda.time.Seconds seconds65 = seconds53.minus(seconds60);
        org.joda.time.Seconds seconds67 = seconds65.multipliedBy(2147483647);
        int int68 = seconds67.getSeconds();
        boolean boolean69 = seconds43.equals((java.lang.Object) seconds67);
        boolean boolean70 = seconds4.isGreaterThan(seconds67);
        org.joda.time.Seconds seconds72 = seconds4.dividedBy(52);
        java.lang.Class<?> wildcardClass73 = seconds72.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Seconds seconds6 = seconds1.minus(3);
        org.joda.time.MutablePeriod mutablePeriod7 = seconds6.toMutablePeriod();
        org.joda.time.Seconds seconds9 = seconds6.minus((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType11 = seconds6.getFieldType((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(seconds9);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds2 = seconds0.minus((int) (byte) 0);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.Seconds seconds7 = seconds5.plus((int) (byte) 100);
        org.joda.time.Seconds seconds8 = seconds2.plus(seconds7);
        org.joda.time.Seconds seconds10 = seconds7.dividedBy((int) (byte) 1);
        org.joda.time.Seconds seconds12 = seconds7.multipliedBy(0);
        java.lang.String str13 = seconds7.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT100S" + "'", str13, "PT100S");
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        boolean boolean72 = seconds64.isLessThan(seconds69);
        boolean boolean73 = seconds54.isLessThan(seconds64);
        org.joda.time.Seconds seconds75 = seconds54.multipliedBy((int) (byte) -1);
        org.joda.time.Seconds seconds77 = seconds54.plus(100);
        org.joda.time.Seconds seconds79 = seconds77.plus((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType81 = seconds77.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds79);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType4 = seconds1.getFieldType(101);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 101");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        boolean boolean17 = seconds9.isLessThan(seconds14);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds29 = seconds27.dividedBy((int) '4');
        int int30 = seconds27.size();
        int int31 = seconds22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        boolean boolean35 = seconds27.isLessThan(seconds32);
        boolean boolean36 = seconds14.isLessThan(seconds27);
        int int37 = seconds27.size();
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds27);
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.secondsIn(readableInterval39);
        org.joda.time.Seconds seconds41 = seconds40.negated();
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = seconds40.get(durationFieldType42);
        org.joda.time.PeriodType periodType44 = seconds40.getPeriodType();
        java.lang.String str45 = seconds40.toString();
        org.joda.time.Seconds seconds47 = seconds40.dividedBy(10);
        org.joda.time.Seconds seconds49 = seconds40.dividedBy((int) 'a');
        org.joda.time.DurationFieldType durationFieldType51 = seconds40.getFieldType((int) (byte) 0);
        boolean boolean52 = seconds38.equals((java.lang.Object) durationFieldType51);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PT0S" + "'", str45, "PT0S");
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds7 = seconds1.dividedBy((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType9 = seconds1.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        int int9 = seconds4.size();
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.DurationFieldType durationFieldType15 = seconds10.getFieldType();
        org.joda.time.Seconds seconds17 = seconds10.dividedBy((int) ' ');
        org.joda.time.Seconds seconds19 = seconds17.plus(3);
        org.joda.time.Seconds seconds20 = seconds4.minus(seconds17);
        java.lang.Class<?> wildcardClass21 = seconds4.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        boolean boolean72 = seconds64.isLessThan(seconds69);
        boolean boolean73 = seconds54.isLessThan(seconds64);
        org.joda.time.Seconds seconds75 = seconds54.minus(3);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(seconds75);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.joda.time.PeriodType periodType14 = seconds1.getPeriodType();
        java.lang.String str15 = seconds1.toString();
        org.joda.time.Duration duration16 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds18 = seconds1.multipliedBy(10);
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.secondsIn(readableInterval19);
        int int21 = seconds20.size();
        org.joda.time.Seconds seconds23 = seconds20.dividedBy(100);
        org.joda.time.PeriodType periodType24 = seconds23.getPeriodType();
        org.joda.time.Seconds seconds26 = seconds23.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds28 = seconds26.minus((-1));
        org.joda.time.DurationFieldType durationFieldType30 = seconds26.getFieldType((int) (byte) 0);
        org.joda.time.Seconds seconds31 = seconds1.plus(seconds26);
        int int32 = seconds31.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT1S" + "'", str15, "PT1S");
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        java.lang.String str18 = seconds17.toString();
        org.joda.time.Period period19 = seconds17.toPeriod();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        org.joda.time.Seconds seconds24 = seconds21.dividedBy((-1));
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        int int27 = seconds17.get(durationFieldType26);
        boolean boolean28 = seconds0.isLessThan(seconds17);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType31 = seconds30.getPeriodType();
        org.joda.time.Duration duration32 = seconds30.toStandardDuration();
        org.joda.time.Seconds seconds34 = seconds30.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds35 = seconds34.negated();
        org.joda.time.Seconds seconds36 = seconds34.negated();
        org.joda.time.Seconds seconds37 = seconds0.minus(seconds34);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) (byte) 100);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType42 = seconds41.getPeriodType();
        org.joda.time.Duration duration43 = seconds41.toStandardDuration();
        org.joda.time.Seconds seconds45 = seconds41.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.Seconds seconds47 = seconds45.negated();
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds52 = seconds48.minus(seconds51);
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = seconds53.get(durationFieldType54);
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds57 = seconds53.minus(seconds56);
        org.joda.time.Seconds seconds59 = seconds57.dividedBy((int) '4');
        int int60 = seconds57.size();
        int int61 = seconds52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds57);
        org.joda.time.Seconds seconds63 = seconds57.plus(0);
        java.lang.String str64 = seconds63.toString();
        org.joda.time.Period period65 = seconds63.toPeriod();
        org.joda.time.ReadableInterval readableInterval66 = null;
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.secondsIn(readableInterval66);
        org.joda.time.DurationFieldType durationFieldType68 = seconds67.getFieldType();
        org.joda.time.Seconds seconds70 = seconds67.dividedBy((-1));
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds70);
        org.joda.time.DurationFieldType durationFieldType72 = seconds71.getFieldType();
        int int73 = seconds63.get(durationFieldType72);
        boolean boolean74 = seconds47.isSupported(durationFieldType72);
        int int75 = seconds39.get(durationFieldType72);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2147483644S" + "'", str18, "PT2147483644S");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483644 + "'", int27 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT2147483644S" + "'", str64, "PT2147483644S");
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2147483644 + "'", int73 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds5 = seconds1.minus((int) (byte) -1);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType9 = seconds8.getPeriodType();
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.Seconds seconds12 = seconds11.negated();
        org.joda.time.MutablePeriod mutablePeriod13 = seconds11.toMutablePeriod();
        int int14 = seconds8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType17 = seconds16.getPeriodType();
        org.joda.time.Duration duration18 = seconds16.toStandardDuration();
        org.joda.time.Seconds seconds20 = seconds16.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds22 = seconds16.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds24 = seconds16.minus(seconds23);
        org.joda.time.DurationFieldType durationFieldType25 = seconds24.getFieldType();
        boolean boolean26 = seconds8.isSupported(durationFieldType25);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.joda.time.Duration duration31 = seconds28.toStandardDuration();
        boolean boolean32 = seconds8.equals((java.lang.Object) seconds28);
        org.joda.time.Duration duration33 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds34 = seconds28.negated();
        int int35 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds34);
        org.joda.time.Seconds seconds37 = seconds34.plus((int) '4');
        org.joda.time.Seconds seconds39 = seconds34.multipliedBy((int) 'a');
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        boolean boolean72 = seconds64.isLessThan(seconds69);
        boolean boolean73 = seconds54.isLessThan(seconds64);
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType76 = seconds75.getPeriodType();
        org.joda.time.Duration duration77 = seconds75.toStandardDuration();
        org.joda.time.Seconds seconds79 = seconds75.dividedBy((int) (byte) 10);
        int int80 = seconds54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds79);
        org.joda.time.Seconds seconds82 = org.joda.time.Seconds.parseSeconds("PT-1S");
        org.joda.time.Seconds seconds83 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.Seconds seconds84 = seconds82.plus(seconds83);
        org.joda.time.Seconds seconds85 = seconds54.minus(seconds84);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType87 = seconds54.getFieldType((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds85);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType9 = seconds8.getPeriodType();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds12 = seconds8.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds13 = seconds12.negated();
        boolean boolean14 = seconds6.isLessThan(seconds13);
        org.joda.time.Seconds seconds15 = seconds4.plus(seconds6);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = seconds21.get(durationFieldType22);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds25 = seconds21.minus(seconds24);
        org.joda.time.Seconds seconds27 = seconds25.dividedBy((int) '4');
        int int28 = seconds25.size();
        int int29 = seconds20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds25);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        boolean boolean33 = seconds25.isLessThan(seconds30);
        java.lang.Class<?> wildcardClass34 = seconds25.getClass();
        boolean boolean35 = seconds6.equals((java.lang.Object) seconds25);
        org.joda.time.Period period36 = seconds6.toPeriod();
        java.lang.Class<?> wildcardClass37 = seconds6.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Period period7 = seconds6.toPeriod();
        org.joda.time.Seconds seconds9 = seconds6.dividedBy(100);
        org.joda.time.Seconds seconds11 = seconds6.minus(0);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        org.joda.time.Seconds seconds16 = seconds13.dividedBy((-1));
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds13);
        java.lang.String str18 = seconds13.toString();
        org.joda.time.Seconds seconds20 = seconds13.multipliedBy((int) (byte) 10);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType23 = seconds22.getPeriodType();
        org.joda.time.Duration duration24 = seconds22.toStandardDuration();
        org.joda.time.Seconds seconds26 = seconds22.multipliedBy(0);
        java.lang.String str27 = seconds26.toString();
        org.joda.time.DurationFieldType durationFieldType28 = seconds26.getFieldType();
        org.joda.time.Seconds seconds30 = seconds26.minus(3);
        org.joda.time.Seconds seconds31 = seconds30.negated();
        boolean boolean32 = seconds20.equals((java.lang.Object) seconds30);
        org.joda.time.Seconds seconds33 = seconds11.plus(seconds30);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType36 = seconds35.getPeriodType();
        org.joda.time.Duration duration37 = seconds35.toStandardDuration();
        org.joda.time.Seconds seconds39 = seconds35.multipliedBy(0);
        java.lang.String str40 = seconds39.toString();
        org.joda.time.DurationFieldType durationFieldType41 = seconds39.getFieldType();
        int int42 = seconds11.get(durationFieldType41);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT0S" + "'", str18, "PT0S");
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT0S" + "'", str27, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT0S" + "'", str40, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds0.getFieldType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((int) ' ');
        org.joda.time.DurationFieldType durationFieldType8 = seconds7.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Seconds seconds10 = seconds7.negated();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(seconds10);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.plus((int) (short) 0);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds9.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.dividedBy((int) '4');
        int int25 = seconds22.size();
        int int26 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        org.joda.time.Seconds seconds28 = seconds22.plus(0);
        org.joda.time.MutablePeriod mutablePeriod29 = seconds22.toMutablePeriod();
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = seconds35.get(durationFieldType36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds39 = seconds35.minus(seconds38);
        org.joda.time.Seconds seconds41 = seconds39.dividedBy((int) '4');
        int int42 = seconds39.size();
        int int43 = seconds34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds39);
        org.joda.time.DurationFieldType durationFieldType44 = seconds34.getFieldType();
        int int45 = seconds22.get(durationFieldType44);
        boolean boolean46 = seconds9.isSupported(durationFieldType44);
        org.joda.time.Seconds seconds47 = seconds5.plus(seconds9);
        org.joda.time.Seconds seconds49 = seconds47.multipliedBy((int) '4');
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType54 = seconds53.getPeriodType();
        org.joda.time.Duration duration55 = seconds53.toStandardDuration();
        org.joda.time.Seconds seconds57 = seconds53.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds58 = seconds57.negated();
        boolean boolean59 = seconds51.isGreaterThan(seconds57);
        org.joda.time.Seconds seconds61 = seconds57.multipliedBy((int) ' ');
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.secondsIn(readableInterval62);
        org.joda.time.Duration duration64 = seconds63.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval65 = null;
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.secondsIn(readableInterval65);
        org.joda.time.Seconds seconds67 = seconds66.negated();
        org.joda.time.ReadableInterval readableInterval68 = null;
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.secondsIn(readableInterval68);
        int int70 = seconds69.size();
        boolean boolean71 = seconds67.isLessThan(seconds69);
        org.joda.time.ReadableInterval readableInterval72 = null;
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.secondsIn(readableInterval72);
        int int74 = seconds73.size();
        org.joda.time.Seconds seconds76 = seconds73.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval77 = null;
        org.joda.time.Seconds seconds78 = org.joda.time.Seconds.secondsIn(readableInterval77);
        org.joda.time.DurationFieldType durationFieldType79 = seconds78.getFieldType();
        boolean boolean80 = seconds76.isSupported(durationFieldType79);
        boolean boolean81 = seconds69.isSupported(durationFieldType79);
        org.joda.time.Seconds seconds82 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds69);
        boolean boolean83 = seconds63.isLessThan(seconds69);
        boolean boolean84 = seconds57.isGreaterThan(seconds69);
        org.joda.time.Seconds seconds86 = seconds69.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds87 = seconds49.minus(seconds86);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds89 = seconds87.multipliedBy((-2147483644));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 208 * -2147483644");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2147483644 + "'", int45 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertNotNull(seconds87);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds33.toMutablePeriod();
        int int41 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds43 = seconds15.multipliedBy((int) (byte) 0);
        org.joda.time.MutablePeriod mutablePeriod44 = seconds15.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        org.joda.time.Seconds seconds10 = seconds1.minus(seconds9);
        org.joda.time.Duration duration11 = seconds10.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(duration11);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds1.get(durationFieldType3);
        org.joda.time.PeriodType periodType5 = seconds1.getPeriodType();
        java.lang.String str6 = seconds1.toString();
        org.joda.time.Seconds seconds8 = seconds1.dividedBy(10);
        int int10 = seconds8.getValue(0);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds11);
        org.joda.time.Seconds seconds14 = seconds11.plus(2147483647);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType17 = seconds16.getPeriodType();
        org.joda.time.Duration duration18 = seconds16.toStandardDuration();
        org.joda.time.Seconds seconds20 = seconds16.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.DurationFieldType durationFieldType23 = seconds22.getFieldType();
        org.joda.time.Seconds seconds25 = seconds22.dividedBy((-1));
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds22);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        boolean boolean28 = seconds26.isSupported(durationFieldType27);
        org.joda.time.Seconds seconds30 = seconds26.plus((int) (byte) 1);
        org.joda.time.Seconds seconds31 = seconds16.minus(seconds26);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds35 = seconds33.minus((int) (byte) 0);
        boolean boolean36 = seconds32.isLessThan(seconds35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds40 = seconds38.minus((int) (byte) 0);
        boolean boolean41 = seconds37.isLessThan(seconds40);
        org.joda.time.Period period42 = seconds37.toPeriod();
        int int43 = seconds35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        int int44 = seconds35.size();
        int int45 = seconds31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds46 = seconds11.minus(seconds31);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Seconds seconds11 = seconds5.multipliedBy((int) (short) 100);
        org.joda.time.Period period12 = seconds11.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = seconds3.get(durationFieldType4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds7 = seconds3.minus(seconds6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds14 = seconds12.dividedBy((int) '4');
        int int15 = seconds12.size();
        int int16 = seconds7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.joda.time.Seconds seconds18 = seconds12.plus(0);
        java.lang.String str19 = seconds18.toString();
        org.joda.time.Period period20 = seconds18.toPeriod();
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        boolean boolean26 = seconds18.equals((java.lang.Object) seconds22);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = seconds27.get(durationFieldType28);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds31 = seconds27.minus(seconds30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds36 = seconds32.minus(seconds35);
        org.joda.time.Seconds seconds38 = seconds36.dividedBy((int) '4');
        int int39 = seconds36.size();
        int int40 = seconds31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds36);
        org.joda.time.Seconds seconds42 = seconds36.plus(0);
        org.joda.time.MutablePeriod mutablePeriod43 = seconds36.toMutablePeriod();
        int int44 = seconds18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds36);
        org.joda.time.Seconds seconds46 = seconds18.minus(2147483644);
        org.joda.time.Seconds seconds47 = seconds0.minus(seconds46);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds49);
        boolean boolean51 = seconds0.isLessThan(seconds50);
        java.lang.String str52 = seconds50.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType54 = seconds50.getFieldType((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT2147483644S" + "'", str19, "PT2147483644S");
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT0S" + "'", str52, "PT0S");
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.DurationFieldType durationFieldType14 = seconds4.getFieldType();
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.Duration duration19 = seconds17.toStandardDuration();
        org.joda.time.Seconds seconds21 = seconds17.multipliedBy(0);
        org.joda.time.Seconds seconds22 = seconds17.negated();
        org.joda.time.Period period23 = seconds22.toPeriod();
        org.joda.time.Seconds seconds25 = seconds22.dividedBy(100);
        org.joda.time.Seconds seconds27 = seconds22.minus(0);
        boolean boolean28 = seconds4.equals((java.lang.Object) 0);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = seconds34.get(durationFieldType35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds38 = seconds34.minus(seconds37);
        org.joda.time.Seconds seconds40 = seconds38.dividedBy((int) '4');
        int int41 = seconds38.size();
        int int42 = seconds33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds38);
        org.joda.time.Seconds seconds44 = seconds38.plus(0);
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.secondsIn(readableInterval45);
        org.joda.time.DurationFieldType durationFieldType47 = seconds46.getFieldType();
        org.joda.time.Seconds seconds49 = seconds46.dividedBy((-1));
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds46);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        boolean boolean52 = seconds50.isSupported(durationFieldType51);
        org.joda.time.Seconds seconds54 = seconds50.plus((int) (byte) 1);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds70 = seconds64.plus(0);
        java.lang.String str71 = seconds70.toString();
        org.joda.time.Period period72 = seconds70.toPeriod();
        org.joda.time.ReadableInterval readableInterval73 = null;
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.secondsIn(readableInterval73);
        org.joda.time.Seconds seconds75 = seconds74.negated();
        org.joda.time.DurationFieldType durationFieldType76 = null;
        int int77 = seconds74.get(durationFieldType76);
        boolean boolean78 = seconds70.isLessThan(seconds74);
        org.joda.time.Seconds seconds79 = seconds54.minus(seconds70);
        org.joda.time.Seconds seconds81 = seconds79.dividedBy((int) 'a');
        org.joda.time.Seconds seconds82 = seconds38.plus(seconds79);
        int int83 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds79);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "PT2147483644S" + "'", str71, "PT2147483644S");
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.MutablePeriod mutablePeriod5 = seconds0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds7 = seconds0.negated();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(seconds7);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.Seconds seconds40 = seconds19.plus(seconds39);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = seconds19.getValue(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(0);
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 100);
        org.joda.time.Seconds seconds4 = seconds3.negated();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds7 = seconds1.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.Seconds seconds23 = seconds17.plus(0);
        java.lang.String str24 = seconds23.toString();
        org.joda.time.Period period25 = seconds23.toPeriod();
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.Seconds seconds28 = seconds27.negated();
        org.joda.time.MutablePeriod mutablePeriod29 = seconds27.toMutablePeriod();
        org.joda.time.Duration duration30 = seconds27.toStandardDuration();
        boolean boolean31 = seconds23.equals((java.lang.Object) seconds27);
        org.joda.time.Seconds seconds32 = seconds1.minus(seconds27);
        org.joda.time.Seconds seconds34 = seconds27.multipliedBy(52);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.THREE;
        org.joda.time.Duration duration36 = seconds35.toStandardDuration();
        org.joda.time.Period period37 = seconds35.toPeriod();
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period37);
        org.joda.time.DurationFieldType durationFieldType40 = seconds38.getFieldType(0);
        boolean boolean41 = seconds34.equals((java.lang.Object) seconds38);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2147483644S" + "'", str24, "PT2147483644S");
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType28 = seconds27.getPeriodType();
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.dividedBy((-1));
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds33);
        org.joda.time.Seconds seconds35 = seconds33.negated();
        org.joda.time.Seconds seconds36 = seconds27.plus(seconds33);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int39 = seconds38.getSeconds();
        org.joda.time.Duration duration40 = seconds38.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.secondsIn(readableInterval41);
        org.joda.time.Seconds seconds43 = seconds42.negated();
        int int44 = seconds38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds43);
        org.joda.time.Duration duration45 = seconds43.toStandardDuration();
        org.joda.time.Seconds seconds46 = seconds27.minus(seconds43);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds48 = seconds46.minus(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483644 + -10");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(seconds46);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(2147483644);
        org.joda.time.Weeks weeks2 = seconds1.toStandardWeeks();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds17 = seconds15.dividedBy((int) '4');
        int int18 = seconds15.size();
        int int19 = seconds10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds15);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        int int23 = seconds10.get(durationFieldType22);
        org.joda.time.Seconds seconds24 = seconds10.negated();
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        int int27 = seconds25.getSeconds();
        org.joda.time.Seconds seconds28 = seconds10.plus(seconds25);
        int int29 = seconds0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        java.lang.Class<?> wildcardClass30 = seconds0.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2147483644 + "'", int23 == 2147483644);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Weeks weeks3 = seconds1.toStandardWeeks();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds17 = seconds15.dividedBy((int) '4');
        int int18 = seconds15.size();
        int int19 = seconds10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds15);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        int int23 = seconds10.get(durationFieldType22);
        org.joda.time.Seconds seconds24 = seconds10.negated();
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        int int27 = seconds25.getSeconds();
        org.joda.time.Seconds seconds28 = seconds10.plus(seconds25);
        int int29 = seconds0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType31 = seconds10.getFieldType(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2147483644 + "'", int23 == 2147483644);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds5);
        org.joda.time.Seconds seconds9 = seconds7.multipliedBy((-2147483644));
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        org.joda.time.Duration duration13 = seconds11.toStandardDuration();
        org.joda.time.Seconds seconds15 = seconds11.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.Seconds seconds18 = seconds17.negated();
        org.joda.time.MutablePeriod mutablePeriod19 = seconds17.toMutablePeriod();
        org.joda.time.Duration duration20 = seconds17.toStandardDuration();
        int int21 = seconds17.getSeconds();
        boolean boolean22 = seconds11.isLessThan(seconds17);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = seconds17.plus(seconds23);
        org.joda.time.Seconds seconds27 = seconds7.plus(seconds17);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds1.get(durationFieldType3);
        org.joda.time.PeriodType periodType5 = seconds1.getPeriodType();
        java.lang.String str6 = seconds1.toString();
        org.joda.time.Seconds seconds8 = seconds1.dividedBy(10);
        org.joda.time.Period period9 = seconds1.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.MutablePeriod mutablePeriod16 = seconds9.toMutablePeriod();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = seconds22.get(durationFieldType23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = seconds22.minus(seconds25);
        org.joda.time.Seconds seconds28 = seconds26.dividedBy((int) '4');
        int int29 = seconds26.size();
        int int30 = seconds21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds26);
        org.joda.time.DurationFieldType durationFieldType31 = seconds21.getFieldType();
        int int32 = seconds9.get(durationFieldType31);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.secondsIn(readableInterval33);
        org.joda.time.DurationFieldType durationFieldType35 = seconds34.getFieldType();
        org.joda.time.Seconds seconds37 = seconds34.dividedBy((-1));
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds34);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        boolean boolean40 = seconds38.isSupported(durationFieldType39);
        org.joda.time.Seconds seconds42 = seconds38.plus((int) (byte) 1);
        org.joda.time.Seconds seconds44 = seconds38.multipliedBy((int) (short) 100);
        boolean boolean45 = seconds9.isGreaterThan(seconds38);
        java.lang.Object obj46 = null;
        boolean boolean47 = seconds38.equals(obj46);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483644 + "'", int32 == 2147483644);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        boolean boolean9 = seconds1.isLessThan(seconds8);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        org.joda.time.Duration duration13 = seconds11.toStandardDuration();
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds15.minus((int) (byte) 0);
        boolean boolean18 = seconds14.isLessThan(seconds17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds14);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        org.joda.time.Duration duration23 = seconds21.toStandardDuration();
        org.joda.time.Seconds seconds25 = seconds21.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds27 = seconds21.dividedBy((int) (short) 1);
        boolean boolean28 = seconds14.equals((java.lang.Object) (short) 1);
        boolean boolean29 = seconds11.isGreaterThan(seconds14);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds36 = seconds33.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.secondsIn(readableInterval37);
        org.joda.time.DurationFieldType durationFieldType39 = seconds38.getFieldType();
        org.joda.time.Seconds seconds41 = seconds38.dividedBy((-1));
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds38);
        int int43 = seconds38.size();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.DurationFieldType durationFieldType46 = seconds45.getFieldType();
        org.joda.time.Seconds seconds48 = seconds45.dividedBy((-1));
        int int49 = seconds45.getSeconds();
        org.joda.time.Seconds seconds50 = seconds38.minus(seconds45);
        boolean boolean51 = seconds36.isGreaterThan(seconds50);
        boolean boolean52 = seconds11.isGreaterThan(seconds50);
        org.joda.time.Seconds seconds53 = seconds8.minus(seconds11);
        // The following exception was thrown during execution in test generation
        try {
            int int55 = seconds11.getValue(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(seconds53);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy((-1));
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds22);
        org.joda.time.DurationFieldType durationFieldType24 = seconds23.getFieldType();
        int int25 = seconds15.get(durationFieldType24);
        int int26 = seconds15.size();
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.Seconds seconds29 = seconds28.negated();
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.secondsIn(readableInterval30);
        int int32 = seconds31.size();
        boolean boolean33 = seconds29.isLessThan(seconds31);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.secondsIn(readableInterval34);
        int int36 = seconds35.size();
        org.joda.time.Seconds seconds38 = seconds35.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.secondsIn(readableInterval39);
        org.joda.time.DurationFieldType durationFieldType41 = seconds40.getFieldType();
        boolean boolean42 = seconds38.isSupported(durationFieldType41);
        boolean boolean43 = seconds31.isSupported(durationFieldType41);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds31);
        org.joda.time.PeriodType periodType45 = seconds44.getPeriodType();
        org.joda.time.Seconds seconds47 = seconds44.plus(0);
        org.joda.time.MutablePeriod mutablePeriod48 = seconds47.toMutablePeriod();
        org.joda.time.Seconds seconds50 = seconds47.dividedBy(1);
        int int51 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds47);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2147483644 + "'", int25 == 2147483644);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Seconds seconds4 = seconds1.minus((int) (byte) 0);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds17 = seconds15.dividedBy((int) '4');
        int int18 = seconds15.size();
        int int19 = seconds10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds15);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        boolean boolean23 = seconds15.isLessThan(seconds20);
        org.joda.time.Seconds seconds25 = seconds20.dividedBy(1);
        boolean boolean26 = seconds5.isGreaterThan(seconds25);
        java.lang.Class<?> wildcardClass27 = seconds5.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds(2147483647);
        boolean boolean29 = seconds23.isLessThan(seconds28);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds28);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(seconds30);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        java.lang.String str25 = seconds24.toString();
        org.joda.time.Period period26 = seconds24.toPeriod();
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.Seconds seconds29 = seconds28.negated();
        org.joda.time.MutablePeriod mutablePeriod30 = seconds28.toMutablePeriod();
        org.joda.time.Duration duration31 = seconds28.toStandardDuration();
        boolean boolean32 = seconds24.equals((java.lang.Object) seconds28);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = seconds38.get(durationFieldType39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds42 = seconds38.minus(seconds41);
        org.joda.time.Seconds seconds44 = seconds42.dividedBy((int) '4');
        int int45 = seconds42.size();
        int int46 = seconds37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds42);
        org.joda.time.Seconds seconds48 = seconds42.plus(0);
        org.joda.time.MutablePeriod mutablePeriod49 = seconds42.toMutablePeriod();
        int int50 = seconds24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds42);
        org.joda.time.Seconds seconds52 = seconds24.minus(2147483644);
        org.joda.time.Seconds seconds53 = seconds6.minus(seconds52);
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.secondsIn(readableInterval54);
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds55);
        boolean boolean57 = seconds6.isLessThan(seconds56);
        int int58 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds56);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType61 = seconds60.getFieldType();
        org.joda.time.Seconds seconds62 = seconds1.minus(seconds60);
        org.joda.time.ReadableInterval readableInterval63 = null;
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.secondsIn(readableInterval63);
        org.joda.time.Seconds seconds65 = seconds64.negated();
        org.joda.time.MutablePeriod mutablePeriod66 = seconds64.toMutablePeriod();
        org.joda.time.Seconds seconds68 = seconds64.minus((int) (byte) -1);
        int int69 = seconds64.size();
        org.joda.time.Seconds seconds71 = seconds64.dividedBy((int) (short) 10);
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int74 = seconds73.getSeconds();
        org.joda.time.Duration duration75 = seconds73.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval76 = null;
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.secondsIn(readableInterval76);
        org.joda.time.Seconds seconds78 = seconds77.negated();
        int int79 = seconds73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds78);
        org.joda.time.Duration duration80 = seconds73.toStandardDuration();
        boolean boolean81 = seconds71.isGreaterThan(seconds73);
        org.joda.time.ReadableInterval readableInterval82 = null;
        org.joda.time.Seconds seconds83 = org.joda.time.Seconds.secondsIn(readableInterval82);
        int int84 = seconds83.size();
        org.joda.time.Seconds seconds86 = seconds83.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval87 = null;
        org.joda.time.Seconds seconds88 = org.joda.time.Seconds.secondsIn(readableInterval87);
        org.joda.time.DurationFieldType durationFieldType89 = seconds88.getFieldType();
        boolean boolean90 = seconds86.isSupported(durationFieldType89);
        boolean boolean91 = seconds71.isSupported(durationFieldType89);
        int int92 = seconds62.get(durationFieldType89);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT2147483644S" + "'", str25, "PT2147483644S");
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 2 + "'", int92 == 2);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        java.lang.String str18 = seconds17.toString();
        org.joda.time.Period period19 = seconds17.toPeriod();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        org.joda.time.Seconds seconds24 = seconds21.dividedBy((-1));
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        int int27 = seconds17.get(durationFieldType26);
        boolean boolean28 = seconds0.isLessThan(seconds17);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType31 = seconds30.getPeriodType();
        org.joda.time.Duration duration32 = seconds30.toStandardDuration();
        org.joda.time.Seconds seconds34 = seconds30.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds35 = seconds34.negated();
        org.joda.time.Seconds seconds36 = seconds34.negated();
        org.joda.time.Seconds seconds37 = seconds0.minus(seconds34);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds41 = seconds39.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2147483644S" + "'", str18, "PT2147483644S");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483644 + "'", int27 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.Seconds seconds4 = seconds1.minus((int) '#');
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType7 = seconds6.getPeriodType();
        org.joda.time.Duration duration8 = seconds6.toStandardDuration();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds6);
        org.joda.time.Seconds seconds10 = seconds6.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = seconds10.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Period period3 = seconds1.toPeriod();
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds6 = seconds1.plus((int) (short) 0);
        org.joda.time.Seconds seconds8 = seconds6.minus((int) (byte) 100);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.dividedBy((int) '4');
        int int25 = seconds22.size();
        int int26 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        int int29 = seconds28.size();
        org.joda.time.Seconds seconds31 = seconds28.dividedBy(100);
        org.joda.time.PeriodType periodType32 = seconds31.getPeriodType();
        org.joda.time.Seconds seconds34 = seconds31.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds36 = seconds34.minus((-1));
        int int37 = seconds34.size();
        int int38 = seconds22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds34);
        org.joda.time.Seconds seconds40 = seconds22.dividedBy((int) (short) 100);
        boolean boolean41 = seconds8.equals((java.lang.Object) seconds22);
        int int42 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds8);
        org.joda.time.DurationFieldType durationFieldType43 = seconds8.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(durationFieldType43);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds0.getFieldType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((int) ' ');
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = seconds9.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Duration duration11 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds9.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds15 = seconds9.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds9.minus(seconds16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        boolean boolean19 = seconds1.isSupported(durationFieldType18);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        org.joda.time.Period period23 = seconds21.toPeriod();
        org.joda.time.Duration duration24 = seconds21.toStandardDuration();
        boolean boolean25 = seconds1.equals((java.lang.Object) seconds21);
        java.lang.Class<?> wildcardClass26 = seconds21.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Period period6 = seconds1.toPeriod();
        org.joda.time.Duration duration7 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.parseSeconds("PT-1S");
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.Seconds seconds11 = seconds9.plus(seconds10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds10);
        boolean boolean13 = seconds1.equals((java.lang.Object) seconds10);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        org.joda.time.Seconds seconds18 = seconds15.dividedBy((-1));
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds15);
        org.joda.time.Period period20 = seconds15.toPeriod();
        org.joda.time.Duration duration21 = seconds15.toStandardDuration();
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.parseSeconds("PT-1S");
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.Seconds seconds25 = seconds23.plus(seconds24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds24);
        boolean boolean27 = seconds15.equals((java.lang.Object) seconds24);
        boolean boolean28 = seconds10.equals((java.lang.Object) boolean27);
        java.lang.String str29 = seconds10.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2147483647S" + "'", str29, "PT2147483647S");
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds19.get(durationFieldType21);
        boolean boolean23 = seconds15.isLessThan(seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.DurationFieldType durationFieldType26 = seconds19.getFieldType(0);
        org.joda.time.DurationFieldType durationFieldType27 = seconds19.getFieldType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(durationFieldType27);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        int int5 = seconds1.getSeconds();
        java.lang.String str6 = seconds1.toString();
        int int7 = seconds1.getSeconds();
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Duration duration11 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds9.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds15 = seconds9.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = seconds21.get(durationFieldType22);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds25 = seconds21.minus(seconds24);
        org.joda.time.Seconds seconds27 = seconds25.dividedBy((int) '4');
        int int28 = seconds25.size();
        int int29 = seconds20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds25);
        org.joda.time.Seconds seconds31 = seconds25.plus(0);
        java.lang.String str32 = seconds31.toString();
        org.joda.time.Period period33 = seconds31.toPeriod();
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.secondsIn(readableInterval34);
        org.joda.time.Seconds seconds36 = seconds35.negated();
        org.joda.time.MutablePeriod mutablePeriod37 = seconds35.toMutablePeriod();
        org.joda.time.Duration duration38 = seconds35.toStandardDuration();
        boolean boolean39 = seconds31.equals((java.lang.Object) seconds35);
        org.joda.time.Seconds seconds40 = seconds9.minus(seconds35);
        boolean boolean41 = seconds1.equals((java.lang.Object) seconds40);
        org.joda.time.Duration duration42 = seconds1.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT2147483644S" + "'", str32, "PT2147483644S");
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration42);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Seconds seconds6 = seconds1.minus(3);
        org.joda.time.MutablePeriod mutablePeriod7 = seconds6.toMutablePeriod();
        org.joda.time.Seconds seconds9 = seconds6.minus((int) (byte) 0);
        org.joda.time.Period period10 = seconds9.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT-1S");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.Seconds seconds3 = seconds1.plus(seconds2);
        boolean boolean5 = seconds2.equals((java.lang.Object) 0L);
        org.joda.time.Duration duration6 = seconds2.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(duration6);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        boolean boolean17 = seconds9.isLessThan(seconds14);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds29 = seconds27.dividedBy((int) '4');
        int int30 = seconds27.size();
        int int31 = seconds22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        boolean boolean35 = seconds27.isLessThan(seconds32);
        boolean boolean36 = seconds14.isLessThan(seconds27);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.seconds((int) (byte) 1);
        boolean boolean39 = seconds27.isLessThan(seconds38);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType42 = seconds41.getPeriodType();
        org.joda.time.Duration duration43 = seconds41.toStandardDuration();
        org.joda.time.Seconds seconds45 = seconds41.plus((int) (short) 0);
        int int46 = seconds27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds41);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds8 = seconds5.multipliedBy(0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds8);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType5 = seconds4.getPeriodType();
        org.joda.time.Duration duration6 = seconds4.toStandardDuration();
        org.joda.time.Seconds seconds8 = seconds4.multipliedBy(0);
        org.joda.time.Seconds seconds9 = seconds4.negated();
        org.joda.time.Period period10 = seconds9.toPeriod();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy(100);
        org.joda.time.Seconds seconds14 = seconds9.minus(0);
        int int15 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType17 = seconds1.getFieldType(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds2 = seconds0.minus((int) (byte) 0);
        org.joda.time.PeriodType periodType3 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds6 = seconds4.minus((int) (byte) 0);
        org.joda.time.PeriodType periodType7 = seconds4.getPeriodType();
        int int8 = seconds0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        java.lang.String str9 = seconds0.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT1S" + "'", str9, "PT1S");
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType9 = seconds8.getPeriodType();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds12 = seconds8.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds13 = seconds12.negated();
        boolean boolean14 = seconds6.isLessThan(seconds13);
        org.joda.time.Seconds seconds15 = seconds4.plus(seconds6);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds22 = seconds18.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.secondsIn(readableInterval23);
        org.joda.time.DurationFieldType durationFieldType25 = seconds24.getFieldType();
        org.joda.time.Seconds seconds27 = seconds24.dividedBy((-1));
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds24);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        boolean boolean30 = seconds28.isSupported(durationFieldType29);
        org.joda.time.Seconds seconds32 = seconds28.plus((int) (byte) 1);
        org.joda.time.Seconds seconds33 = seconds18.minus(seconds28);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType36 = seconds35.getFieldType();
        org.joda.time.Seconds seconds38 = seconds35.minus((int) (short) 1);
        int int39 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds38);
        org.joda.time.Duration duration40 = seconds28.toStandardDuration();
        boolean boolean41 = seconds16.isGreaterThan(seconds28);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds5 = seconds1.minus((int) (byte) -1);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType9 = seconds8.getPeriodType();
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.Seconds seconds12 = seconds11.negated();
        org.joda.time.MutablePeriod mutablePeriod13 = seconds11.toMutablePeriod();
        int int14 = seconds8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType17 = seconds16.getPeriodType();
        org.joda.time.Duration duration18 = seconds16.toStandardDuration();
        org.joda.time.Seconds seconds20 = seconds16.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds22 = seconds16.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds24 = seconds16.minus(seconds23);
        org.joda.time.DurationFieldType durationFieldType25 = seconds24.getFieldType();
        boolean boolean26 = seconds8.isSupported(durationFieldType25);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.joda.time.Duration duration31 = seconds28.toStandardDuration();
        boolean boolean32 = seconds8.equals((java.lang.Object) seconds28);
        org.joda.time.Duration duration33 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds34 = seconds28.negated();
        int int35 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds34);
        org.joda.time.Seconds seconds37 = seconds34.plus((int) '4');
        java.lang.Class<?> wildcardClass38 = seconds37.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.DurationFieldType durationFieldType26 = seconds4.getFieldType();
        int int27 = seconds4.size();
        org.joda.time.MutablePeriod mutablePeriod28 = seconds4.toMutablePeriod();
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType31 = seconds30.getPeriodType();
        org.joda.time.Duration duration32 = seconds30.toStandardDuration();
        org.joda.time.Seconds seconds34 = seconds30.multipliedBy(0);
        org.joda.time.Seconds seconds35 = seconds30.negated();
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = seconds36.get(durationFieldType37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds40 = seconds36.minus(seconds39);
        boolean boolean41 = seconds35.isGreaterThan(seconds40);
        org.joda.time.Seconds seconds43 = seconds35.multipliedBy(1);
        int int44 = seconds35.getSeconds();
        org.joda.time.Seconds seconds45 = seconds4.plus(seconds35);
        java.lang.Class<?> wildcardClass46 = seconds35.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Period period2 = seconds1.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Period period4 = seconds1.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = seconds1.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType11 = seconds9.getFieldType(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = seconds21.get(durationFieldType22);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds25 = seconds21.minus(seconds24);
        org.joda.time.Seconds seconds27 = seconds25.dividedBy((int) '4');
        int int28 = seconds25.size();
        int int29 = seconds20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds25);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        boolean boolean33 = seconds25.isLessThan(seconds30);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = seconds34.get(durationFieldType35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds38 = seconds34.minus(seconds37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = seconds39.get(durationFieldType40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds43 = seconds39.minus(seconds42);
        org.joda.time.Seconds seconds45 = seconds43.dividedBy((int) '4');
        int int46 = seconds43.size();
        int int47 = seconds38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds43);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        boolean boolean51 = seconds43.isLessThan(seconds48);
        boolean boolean52 = seconds30.isLessThan(seconds43);
        boolean boolean53 = seconds0.isGreaterThan(seconds43);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds55 = seconds43.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.DurationFieldType durationFieldType26 = seconds4.getFieldType();
        int int27 = seconds4.size();
        org.joda.time.MutablePeriod mutablePeriod28 = seconds4.toMutablePeriod();
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType31 = seconds30.getPeriodType();
        org.joda.time.Duration duration32 = seconds30.toStandardDuration();
        org.joda.time.Seconds seconds34 = seconds30.multipliedBy(0);
        org.joda.time.Seconds seconds35 = seconds30.negated();
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = seconds36.get(durationFieldType37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds40 = seconds36.minus(seconds39);
        boolean boolean41 = seconds35.isGreaterThan(seconds40);
        org.joda.time.Seconds seconds43 = seconds35.multipliedBy(1);
        int int44 = seconds35.getSeconds();
        org.joda.time.Seconds seconds45 = seconds4.plus(seconds35);
        org.joda.time.Seconds seconds46 = seconds4.negated();
        org.joda.time.Seconds seconds48 = seconds4.dividedBy((int) (short) 100);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds48);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT-1S");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.Seconds seconds3 = seconds1.plus(seconds2);
        org.joda.time.Seconds seconds5 = seconds2.minus((int) (byte) 100);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds5);
        org.joda.time.Duration duration7 = seconds5.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(duration7);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.DurationFieldType durationFieldType3 = seconds1.getFieldType();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) ' ');
        org.joda.time.Seconds seconds7 = seconds1.minus((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds9 = seconds7.dividedBy((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        java.lang.String str6 = seconds5.toString();
        int int7 = seconds5.size();
        org.joda.time.DurationFieldType durationFieldType8 = seconds5.getFieldType();
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.secondsIn(readableInterval9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds17 = seconds15.dividedBy((int) '4');
        org.joda.time.Seconds seconds18 = seconds10.minus(seconds17);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int21 = seconds20.getSeconds();
        org.joda.time.DurationFieldType durationFieldType22 = seconds20.getFieldType();
        boolean boolean23 = seconds10.isSupported(durationFieldType22);
        boolean boolean24 = seconds5.isSupported(durationFieldType22);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        boolean boolean26 = seconds16.equals((java.lang.Object) seconds22);
        org.joda.time.MutablePeriod mutablePeriod27 = seconds16.toMutablePeriod();
        org.joda.time.Seconds seconds28 = seconds0.plus(seconds16);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds29 = seconds0.negated();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Integer.MIN_VALUE cannot be negated");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(seconds28);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        org.joda.time.Duration duration23 = seconds21.toStandardDuration();
        org.joda.time.Seconds seconds25 = seconds21.multipliedBy(0);
        org.joda.time.Seconds seconds26 = seconds21.negated();
        org.joda.time.Seconds seconds27 = seconds19.plus(seconds21);
        java.lang.String str28 = seconds19.toString();
        org.joda.time.Seconds seconds29 = seconds17.plus(seconds19);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType32 = seconds31.getPeriodType();
        org.joda.time.Duration duration33 = seconds31.toStandardDuration();
        org.joda.time.Seconds seconds35 = seconds31.multipliedBy(0);
        org.joda.time.Seconds seconds36 = seconds17.minus(seconds31);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT1S" + "'", str28, "PT1S");
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        boolean boolean17 = seconds9.isLessThan(seconds14);
        org.joda.time.Seconds seconds19 = seconds14.dividedBy(1);
        int int20 = seconds19.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds2.toMutablePeriod();
        org.joda.time.Duration duration4 = seconds2.toStandardDuration();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds16 = seconds14.dividedBy((int) '4');
        int int17 = seconds14.size();
        int int18 = seconds9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds14);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = seconds19.get(durationFieldType20);
        boolean boolean22 = seconds14.isLessThan(seconds19);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds34 = seconds32.dividedBy((int) '4');
        int int35 = seconds32.size();
        int int36 = seconds27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds32);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        boolean boolean40 = seconds32.isLessThan(seconds37);
        boolean boolean41 = seconds19.isLessThan(seconds32);
        org.joda.time.DurationFieldType durationFieldType42 = seconds32.getFieldType();
        boolean boolean43 = seconds2.isSupported(durationFieldType42);
        int int44 = seconds2.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.Seconds seconds4 = seconds1.minus((int) '#');
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType7 = seconds6.getPeriodType();
        org.joda.time.Duration duration8 = seconds6.toStandardDuration();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds6);
        org.joda.time.Seconds seconds10 = seconds6.negated();
        org.joda.time.Seconds seconds12 = seconds6.plus((-1));
        org.joda.time.Seconds seconds14 = seconds12.multipliedBy(2147483644);
        org.joda.time.Seconds seconds16 = seconds12.multipliedBy((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType18 = seconds16.getFieldType(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds3.getFieldType();
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        int int8 = seconds7.size();
        org.joda.time.Seconds seconds10 = seconds7.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.secondsIn(readableInterval11);
        org.joda.time.DurationFieldType durationFieldType13 = seconds12.getFieldType();
        boolean boolean14 = seconds10.isSupported(durationFieldType13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds24 = seconds20.minus(seconds23);
        org.joda.time.Seconds seconds26 = seconds24.dividedBy((int) '4');
        int int27 = seconds24.size();
        int int28 = seconds19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds24);
        org.joda.time.Seconds seconds30 = seconds24.plus(0);
        org.joda.time.Seconds seconds31 = seconds10.minus(seconds24);
        org.joda.time.Seconds seconds33 = seconds24.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType34 = seconds33.getPeriodType();
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.secondsIn(readableInterval35);
        org.joda.time.DurationFieldType durationFieldType37 = seconds36.getFieldType();
        org.joda.time.Seconds seconds39 = seconds36.dividedBy((-1));
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds39);
        org.joda.time.Seconds seconds41 = seconds39.negated();
        org.joda.time.Seconds seconds42 = seconds33.plus(seconds39);
        org.joda.time.DurationFieldType durationFieldType43 = seconds39.getFieldType();
        boolean boolean44 = seconds3.isSupported(durationFieldType43);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.PeriodType periodType19 = seconds17.getPeriodType();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        int int22 = seconds21.size();
        org.joda.time.Seconds seconds24 = seconds21.dividedBy(100);
        org.joda.time.PeriodType periodType25 = seconds24.getPeriodType();
        org.joda.time.Seconds seconds27 = seconds24.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds29 = seconds27.minus((-1));
        org.joda.time.DurationFieldType durationFieldType30 = seconds29.getFieldType();
        int int31 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds29);
        int int32 = seconds29.getSeconds();
        org.joda.time.Duration duration33 = seconds29.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(duration33);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Period period7 = seconds3.toPeriod();
        org.joda.time.Seconds seconds8 = seconds3.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds3.toMutablePeriod();
        java.lang.String str10 = seconds3.toString();
        org.joda.time.Duration duration11 = seconds3.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT3S" + "'", str10, "PT3S");
        org.junit.Assert.assertNotNull(duration11);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds15 = seconds13.multipliedBy(2147483647);
        org.joda.time.Seconds seconds17 = seconds15.plus(0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.DurationFieldType durationFieldType3 = seconds1.getFieldType();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            int int7 = seconds5.getValue((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(seconds5);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Duration duration30 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds32 = seconds28.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds34 = seconds28.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds36 = seconds28.minus(seconds35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds40.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = seconds44.minus(seconds47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = seconds49.minus(seconds52);
        org.joda.time.Seconds seconds55 = seconds53.dividedBy((int) '4');
        int int56 = seconds53.size();
        int int57 = seconds48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds53);
        org.joda.time.Seconds seconds59 = seconds53.plus(0);
        org.joda.time.MutablePeriod mutablePeriod60 = seconds53.toMutablePeriod();
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = seconds61.get(durationFieldType62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds65 = seconds61.minus(seconds64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = seconds66.get(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds70 = seconds66.minus(seconds69);
        org.joda.time.Seconds seconds72 = seconds70.dividedBy((int) '4');
        int int73 = seconds70.size();
        int int74 = seconds65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds70);
        org.joda.time.DurationFieldType durationFieldType75 = seconds65.getFieldType();
        int int76 = seconds53.get(durationFieldType75);
        boolean boolean77 = seconds40.isSupported(durationFieldType75);
        boolean boolean78 = seconds36.isSupported(durationFieldType75);
        boolean boolean79 = seconds10.isGreaterThan(seconds36);
        org.joda.time.Seconds seconds81 = seconds36.plus(1);
        org.joda.time.PeriodType periodType82 = seconds81.getPeriodType();
        org.joda.time.Seconds seconds84 = seconds81.plus((int) (short) 10);
        org.joda.time.Seconds seconds86 = seconds81.plus(32);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483644 + "'", int76 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds86);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        boolean boolean22 = seconds7.isLessThan(seconds17);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.secondsIn(readableInterval28);
        org.joda.time.Seconds seconds30 = seconds29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = seconds29.toMutablePeriod();
        org.joda.time.Duration duration32 = seconds29.toStandardDuration();
        boolean boolean33 = seconds23.equals((java.lang.Object) seconds29);
        org.joda.time.MutablePeriod mutablePeriod34 = seconds23.toMutablePeriod();
        org.joda.time.Seconds seconds35 = seconds7.plus(seconds23);
        org.joda.time.PeriodType periodType36 = seconds23.getPeriodType();
        boolean boolean37 = seconds6.isGreaterThan(seconds23);
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod38 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int39 = seconds23.compareTo(baseSingleFieldPeriod38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.DurationFieldType durationFieldType14 = seconds4.getFieldType();
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType17 = seconds15.getFieldType((-2147483647));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds15);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.Seconds seconds21 = seconds19.dividedBy((int) '4');
        int int22 = seconds19.size();
        int int23 = seconds14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds19);
        org.joda.time.Seconds seconds25 = seconds19.plus(0);
        java.lang.String str26 = seconds25.toString();
        org.joda.time.Period period27 = seconds25.toPeriod();
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.secondsIn(readableInterval28);
        org.joda.time.Seconds seconds30 = seconds29.negated();
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds29.get(durationFieldType31);
        boolean boolean33 = seconds25.isLessThan(seconds29);
        org.joda.time.Seconds seconds34 = seconds9.minus(seconds25);
        org.joda.time.Seconds seconds36 = seconds34.dividedBy((int) 'a');
        org.joda.time.Seconds seconds38 = seconds36.plus(10);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483644S" + "'", str26, "PT2147483644S");
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT-1S");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.Seconds seconds3 = seconds1.plus(seconds2);
        // The following exception was thrown during execution in test generation
        try {
            int int5 = seconds2.getValue(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds6 = seconds1.multipliedBy((int) (short) 1);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.Seconds seconds9 = seconds8.negated();
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        int int12 = seconds11.size();
        boolean boolean13 = seconds9.isLessThan(seconds11);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        org.joda.time.Seconds seconds18 = seconds15.dividedBy((-1));
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        int int21 = seconds11.get(durationFieldType20);
        boolean boolean22 = seconds1.isSupported(durationFieldType20);
        org.joda.time.Seconds seconds24 = seconds1.dividedBy(35);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(seconds24);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds7 = seconds4.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.Seconds seconds23 = seconds17.plus(0);
        org.joda.time.MutablePeriod mutablePeriod24 = seconds17.toMutablePeriod();
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = seconds25.get(durationFieldType26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds29 = seconds25.minus(seconds28);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds36 = seconds34.dividedBy((int) '4');
        int int37 = seconds34.size();
        int int38 = seconds29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds34);
        org.joda.time.DurationFieldType durationFieldType39 = seconds29.getFieldType();
        int int40 = seconds17.get(durationFieldType39);
        boolean boolean41 = seconds4.isSupported(durationFieldType39);
        boolean boolean42 = seconds0.isSupported(durationFieldType39);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds44 = seconds0.minus(35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -35");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2147483644 + "'", int40 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds0.getFieldType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((int) ' ');
        org.joda.time.Seconds seconds9 = seconds7.plus(3);
        org.joda.time.Seconds seconds10 = seconds9.negated();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds0.getFieldType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((int) ' ');
        org.joda.time.DurationFieldType durationFieldType8 = seconds7.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Duration duration10 = seconds7.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration10);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType5 = seconds4.getPeriodType();
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        int int10 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds7);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.secondsIn(readableInterval11);
        org.joda.time.Seconds seconds13 = seconds4.minus(seconds12);
        int int14 = seconds13.size();
        int int15 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds13);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        int int7 = seconds6.size();
        org.joda.time.Seconds seconds9 = seconds6.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        boolean boolean13 = seconds9.isSupported(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = seconds19.get(durationFieldType20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds23 = seconds19.minus(seconds22);
        org.joda.time.Seconds seconds25 = seconds23.dividedBy((int) '4');
        int int26 = seconds23.size();
        int int27 = seconds18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds23);
        org.joda.time.Seconds seconds29 = seconds23.plus(0);
        org.joda.time.Seconds seconds30 = seconds9.minus(seconds23);
        org.joda.time.DurationFieldType durationFieldType31 = seconds9.getFieldType();
        boolean boolean32 = seconds1.isSupported(durationFieldType31);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = seconds1.getValue((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds6 = seconds1.multipliedBy((int) (short) 1);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        int int13 = seconds8.size();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        org.joda.time.Seconds seconds18 = seconds15.dividedBy((-1));
        int int19 = seconds15.getSeconds();
        org.joda.time.Seconds seconds20 = seconds8.minus(seconds15);
        boolean boolean21 = seconds6.isGreaterThan(seconds8);
        org.joda.time.DurationFieldType durationFieldType22 = seconds8.getFieldType();
        org.joda.time.Seconds seconds23 = seconds8.negated();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(seconds23);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Duration duration11 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds9.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds15 = seconds9.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds9.minus(seconds16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        boolean boolean19 = seconds1.isSupported(durationFieldType18);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        org.joda.time.Period period23 = seconds21.toPeriod();
        org.joda.time.Duration duration24 = seconds21.toStandardDuration();
        boolean boolean25 = seconds1.equals((java.lang.Object) seconds21);
        org.joda.time.Duration duration26 = seconds21.toStandardDuration();
        org.joda.time.Seconds seconds27 = seconds21.negated();
        java.lang.Class<?> wildcardClass28 = seconds27.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        java.lang.String str6 = seconds5.toString();
        int int7 = seconds5.size();
        org.joda.time.DurationFieldType durationFieldType8 = seconds5.getFieldType();
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        java.lang.String str25 = seconds24.toString();
        org.joda.time.Period period26 = seconds24.toPeriod();
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.Seconds seconds29 = seconds28.negated();
        org.joda.time.MutablePeriod mutablePeriod30 = seconds28.toMutablePeriod();
        org.joda.time.Duration duration31 = seconds28.toStandardDuration();
        boolean boolean32 = seconds24.equals((java.lang.Object) seconds28);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = seconds38.get(durationFieldType39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds42 = seconds38.minus(seconds41);
        org.joda.time.Seconds seconds44 = seconds42.dividedBy((int) '4');
        int int45 = seconds42.size();
        int int46 = seconds37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds42);
        org.joda.time.Seconds seconds48 = seconds42.plus(0);
        org.joda.time.MutablePeriod mutablePeriod49 = seconds42.toMutablePeriod();
        int int50 = seconds24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds42);
        org.joda.time.Seconds seconds52 = seconds24.minus(2147483644);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType55 = seconds54.getPeriodType();
        org.joda.time.Duration duration56 = seconds54.toStandardDuration();
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds54);
        org.joda.time.Seconds seconds59 = seconds54.minus(3);
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType62 = seconds61.getPeriodType();
        org.joda.time.Duration duration63 = seconds61.toStandardDuration();
        org.joda.time.Seconds seconds65 = seconds61.multipliedBy(0);
        org.joda.time.Seconds seconds66 = seconds61.negated();
        org.joda.time.Period period67 = seconds66.toPeriod();
        boolean boolean68 = seconds59.equals((java.lang.Object) period67);
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType71 = seconds70.getPeriodType();
        org.joda.time.Duration duration72 = seconds70.toStandardDuration();
        org.joda.time.Seconds seconds74 = seconds70.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds76 = seconds70.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds78 = seconds70.minus(seconds77);
        boolean boolean79 = seconds59.isLessThan(seconds77);
        org.joda.time.Seconds seconds80 = seconds24.plus(seconds77);
        boolean boolean81 = seconds5.equals((java.lang.Object) seconds77);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT2147483644S" + "'", str25, "PT2147483644S");
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.Seconds seconds40 = seconds19.plus(seconds39);
        org.joda.time.MutablePeriod mutablePeriod41 = seconds40.toMutablePeriod();
        java.lang.String str42 = seconds40.toString();
        org.joda.time.PeriodType periodType43 = seconds40.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(periodType43);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.MutablePeriod mutablePeriod16 = seconds9.toMutablePeriod();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = seconds22.get(durationFieldType23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = seconds22.minus(seconds25);
        org.joda.time.Seconds seconds28 = seconds26.dividedBy((int) '4');
        int int29 = seconds26.size();
        int int30 = seconds21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds26);
        org.joda.time.DurationFieldType durationFieldType31 = seconds21.getFieldType();
        int int32 = seconds9.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = seconds9.negated();
        java.lang.String str34 = seconds9.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483644 + "'", int32 == 2147483644);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT2147483644S" + "'", str34, "PT2147483644S");
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.multipliedBy(0);
        org.joda.time.Seconds seconds8 = seconds3.negated();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds3);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = seconds19.get(durationFieldType20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds23 = seconds19.minus(seconds22);
        org.joda.time.Seconds seconds25 = seconds23.dividedBy((int) '4');
        int int26 = seconds23.size();
        int int27 = seconds18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds23);
        org.joda.time.Seconds seconds29 = seconds23.plus(0);
        java.lang.String str30 = seconds29.toString();
        org.joda.time.Period period31 = seconds29.toPeriod();
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.secondsIn(readableInterval32);
        org.joda.time.Seconds seconds34 = seconds33.negated();
        org.joda.time.MutablePeriod mutablePeriod35 = seconds33.toMutablePeriod();
        org.joda.time.Duration duration36 = seconds33.toStandardDuration();
        boolean boolean37 = seconds29.equals((java.lang.Object) seconds33);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = seconds38.get(durationFieldType39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds42 = seconds38.minus(seconds41);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.Seconds seconds49 = seconds47.dividedBy((int) '4');
        int int50 = seconds47.size();
        int int51 = seconds42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds47);
        org.joda.time.Seconds seconds53 = seconds47.plus(0);
        org.joda.time.MutablePeriod mutablePeriod54 = seconds47.toMutablePeriod();
        int int55 = seconds29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds47);
        org.joda.time.Seconds seconds57 = seconds29.minus(2147483644);
        org.joda.time.Seconds seconds58 = seconds11.minus(seconds57);
        boolean boolean59 = seconds9.isGreaterThan(seconds11);
        org.joda.time.PeriodType periodType60 = seconds9.getPeriodType();
        org.joda.time.Duration duration61 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds63 = seconds9.dividedBy((-2147483647));
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT2147483644S" + "'", str30, "PT2147483644S");
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(seconds63);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.dividedBy(2147483647);
        org.joda.time.Seconds seconds8 = seconds6.multipliedBy((int) (byte) 1);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Seconds seconds4 = seconds1.minus((int) '#');
        org.joda.time.PeriodType periodType5 = seconds4.getPeriodType();
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Period period8 = seconds7.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Period period10 = seconds7.toPeriod();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        boolean boolean13 = seconds7.isLessThan(seconds11);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds15.minus((int) (byte) 0);
        boolean boolean18 = seconds14.isLessThan(seconds17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds22 = seconds20.minus((int) (byte) 0);
        boolean boolean23 = seconds19.isLessThan(seconds22);
        org.joda.time.Period period24 = seconds19.toPeriod();
        int int25 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds19);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType28 = seconds27.getFieldType();
        boolean boolean29 = seconds17.isSupported(durationFieldType28);
        org.joda.time.Seconds seconds30 = seconds7.plus(seconds17);
        org.joda.time.Seconds seconds32 = seconds30.dividedBy((int) (byte) 100);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.secondsIn(readableInterval33);
        org.joda.time.DurationFieldType durationFieldType35 = seconds34.getFieldType();
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType38 = seconds37.getPeriodType();
        org.joda.time.Duration duration39 = seconds37.toStandardDuration();
        org.joda.time.Seconds seconds41 = seconds37.multipliedBy(0);
        org.joda.time.Seconds seconds42 = seconds37.negated();
        org.joda.time.Period period43 = seconds42.toPeriod();
        org.joda.time.Seconds seconds45 = seconds42.dividedBy(100);
        org.joda.time.Seconds seconds47 = seconds42.minus(0);
        int int48 = seconds34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds42);
        org.joda.time.Seconds seconds50 = seconds42.minus(10);
        org.joda.time.MutablePeriod mutablePeriod51 = seconds50.toMutablePeriod();
        int int52 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds50);
        org.joda.time.Seconds seconds53 = seconds4.minus(seconds50);
        org.joda.time.MutablePeriod mutablePeriod54 = seconds50.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Seconds seconds3 = seconds1.negated();
        org.joda.time.Seconds seconds5 = seconds3.dividedBy(1);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds5);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Period period5 = seconds0.toPeriod();
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds17 = seconds15.dividedBy((int) '4');
        int int18 = seconds15.size();
        int int19 = seconds10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds15);
        org.joda.time.Duration duration20 = seconds15.toStandardDuration();
        int int21 = seconds0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds15);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int9 = seconds8.getSeconds();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds11 = seconds5.minus(seconds8);
        int int12 = seconds8.size();
        org.joda.time.Seconds seconds14 = seconds8.multipliedBy(1);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(seconds14);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds8 = seconds6.dividedBy((int) '4');
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        org.joda.time.Seconds seconds14 = seconds11.dividedBy((-1));
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds22 = seconds18.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        boolean boolean24 = seconds16.isLessThan(seconds23);
        org.joda.time.Seconds seconds25 = seconds14.plus(seconds16);
        org.joda.time.Seconds seconds26 = seconds1.plus(seconds25);
        org.joda.time.PeriodType periodType27 = seconds25.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(periodType27);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        int int10 = seconds9.size();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy(100);
        org.joda.time.PeriodType periodType13 = seconds12.getPeriodType();
        org.joda.time.Seconds seconds15 = seconds12.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds17 = seconds15.minus((-1));
        org.joda.time.DurationFieldType durationFieldType19 = seconds15.getFieldType((int) (byte) 0);
        boolean boolean20 = seconds5.isSupported(durationFieldType19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        int int26 = seconds22.getSeconds();
        java.lang.String str27 = seconds22.toString();
        org.joda.time.Seconds seconds29 = seconds22.minus((int) (short) 10);
        org.joda.time.Seconds seconds30 = seconds5.minus(seconds22);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.dividedBy((int) (short) 1);
        org.joda.time.PeriodType periodType34 = seconds33.getPeriodType();
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.secondsIn(readableInterval35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds41.dividedBy((int) '4');
        org.joda.time.Seconds seconds44 = seconds36.minus(seconds43);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int47 = seconds46.getSeconds();
        org.joda.time.DurationFieldType durationFieldType48 = seconds46.getFieldType();
        boolean boolean49 = seconds36.isSupported(durationFieldType48);
        boolean boolean50 = seconds33.isSupported(durationFieldType48);
        java.lang.Class<?> wildcardClass51 = durationFieldType48.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT0S" + "'", str27, "PT0S");
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        boolean boolean17 = seconds9.isLessThan(seconds14);
        org.joda.time.Seconds seconds19 = seconds9.minus(1);
        org.joda.time.PeriodType periodType20 = seconds9.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(periodType20);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.PeriodType periodType6 = seconds5.getPeriodType();
        org.joda.time.Seconds seconds8 = seconds5.minus(41297762);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(seconds8);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        boolean boolean72 = seconds64.isLessThan(seconds69);
        boolean boolean73 = seconds54.isLessThan(seconds64);
        org.joda.time.Seconds seconds75 = seconds54.multipliedBy((int) (byte) -1);
        org.joda.time.Seconds seconds77 = seconds54.plus(100);
        org.joda.time.Seconds seconds79 = seconds77.plus((int) 'a');
        org.joda.time.Period period80 = seconds79.toPeriod();
        java.lang.Class<?> wildcardClass81 = seconds79.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Period period7 = seconds6.toPeriod();
        org.joda.time.Seconds seconds9 = seconds6.dividedBy(100);
        org.joda.time.DurationFieldType durationFieldType10 = seconds9.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds12.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType14);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds15 = seconds13.multipliedBy(2147483647);
        int int16 = seconds15.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod17 = seconds15.toMutablePeriod();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(seconds18);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds58 = seconds56.minus((int) (byte) 0);
        boolean boolean59 = seconds55.isLessThan(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds63 = seconds61.minus((int) (byte) 0);
        boolean boolean64 = seconds60.isLessThan(seconds63);
        org.joda.time.Period period65 = seconds60.toPeriod();
        int int66 = seconds58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds60);
        org.joda.time.Seconds seconds68 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType69 = seconds68.getFieldType();
        boolean boolean70 = seconds58.isSupported(durationFieldType69);
        int int71 = seconds54.get(durationFieldType69);
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType73 = null;
        int int74 = seconds72.get(durationFieldType73);
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds76 = seconds72.minus(seconds75);
        org.joda.time.ReadableInterval readableInterval77 = null;
        org.joda.time.Seconds seconds78 = org.joda.time.Seconds.secondsIn(readableInterval77);
        org.joda.time.Seconds seconds79 = seconds78.negated();
        org.joda.time.MutablePeriod mutablePeriod80 = seconds78.toMutablePeriod();
        org.joda.time.Duration duration81 = seconds78.toStandardDuration();
        boolean boolean82 = seconds72.equals((java.lang.Object) seconds78);
        org.joda.time.Seconds seconds84 = seconds78.dividedBy((int) (byte) 100);
        boolean boolean85 = seconds54.isGreaterThan(seconds84);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(mutablePeriod80);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds3 = seconds0.plus(1);
        int int4 = seconds3.getSeconds();
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType7 = seconds3.getFieldType();
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        int int10 = seconds9.size();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.secondsIn(readableInterval13);
        org.joda.time.DurationFieldType durationFieldType15 = seconds14.getFieldType();
        boolean boolean16 = seconds12.isSupported(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = seconds22.get(durationFieldType23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = seconds22.minus(seconds25);
        org.joda.time.Seconds seconds28 = seconds26.dividedBy((int) '4');
        int int29 = seconds26.size();
        int int30 = seconds21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds26);
        org.joda.time.Seconds seconds32 = seconds26.plus(0);
        org.joda.time.Seconds seconds33 = seconds12.minus(seconds26);
        org.joda.time.Seconds seconds35 = seconds26.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType36 = seconds35.getPeriodType();
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.secondsIn(readableInterval37);
        org.joda.time.DurationFieldType durationFieldType39 = seconds38.getFieldType();
        org.joda.time.Seconds seconds41 = seconds38.dividedBy((-1));
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds41);
        org.joda.time.Seconds seconds43 = seconds41.negated();
        org.joda.time.Seconds seconds44 = seconds35.plus(seconds41);
        int int45 = seconds3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds41);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Duration duration11 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds9.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds15 = seconds9.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds9.minus(seconds16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        boolean boolean19 = seconds1.isSupported(durationFieldType18);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        org.joda.time.Period period23 = seconds21.toPeriod();
        org.joda.time.Duration duration24 = seconds21.toStandardDuration();
        boolean boolean25 = seconds1.equals((java.lang.Object) seconds21);
        int int26 = seconds21.size();
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.Seconds seconds29 = seconds28.negated();
        org.joda.time.Seconds seconds31 = seconds28.minus((int) '#');
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType34 = seconds33.getPeriodType();
        org.joda.time.Duration duration35 = seconds33.toStandardDuration();
        org.joda.time.Seconds seconds36 = seconds28.plus(seconds33);
        boolean boolean37 = seconds21.equals((java.lang.Object) seconds33);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.secondsIn(readableInterval38);
        org.joda.time.Seconds seconds40 = seconds39.negated();
        org.joda.time.MutablePeriod mutablePeriod41 = seconds39.toMutablePeriod();
        org.joda.time.Duration duration42 = seconds39.toStandardDuration();
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds52 = seconds48.minus(seconds51);
        org.joda.time.Seconds seconds54 = seconds52.dividedBy((int) '4');
        int int55 = seconds52.size();
        int int56 = seconds47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds52);
        org.joda.time.Seconds seconds58 = seconds52.plus(0);
        boolean boolean59 = seconds39.isLessThan(seconds52);
        org.joda.time.DurationFieldType durationFieldType60 = seconds39.getFieldType();
        boolean boolean61 = seconds21.isGreaterThan(seconds39);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType64 = seconds63.getPeriodType();
        org.joda.time.Duration duration65 = seconds63.toStandardDuration();
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds63);
        org.joda.time.Seconds seconds68 = seconds63.minus(3);
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType71 = seconds70.getPeriodType();
        org.joda.time.Duration duration72 = seconds70.toStandardDuration();
        org.joda.time.Seconds seconds74 = seconds70.multipliedBy(0);
        org.joda.time.Seconds seconds75 = seconds70.negated();
        org.joda.time.Period period76 = seconds75.toPeriod();
        boolean boolean77 = seconds68.equals((java.lang.Object) period76);
        org.joda.time.Seconds seconds79 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType80 = seconds79.getPeriodType();
        org.joda.time.Duration duration81 = seconds79.toStandardDuration();
        org.joda.time.Seconds seconds83 = seconds79.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds85 = seconds79.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds86 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds87 = seconds79.minus(seconds86);
        boolean boolean88 = seconds68.isLessThan(seconds86);
        boolean boolean89 = seconds39.isGreaterThan(seconds68);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertNotNull(seconds87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Duration duration7 = seconds5.toStandardDuration();
        org.joda.time.Seconds seconds8 = seconds5.negated();
        org.joda.time.Seconds seconds10 = seconds8.multipliedBy((-1));
        org.joda.time.Period period11 = seconds10.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Duration duration6 = seconds5.toStandardDuration();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType9 = seconds8.getPeriodType();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds12 = seconds8.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds13 = seconds12.negated();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        org.joda.time.Seconds seconds16 = seconds15.negated();
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.secondsIn(readableInterval17);
        int int19 = seconds18.size();
        boolean boolean20 = seconds16.isLessThan(seconds18);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        int int23 = seconds22.size();
        org.joda.time.Seconds seconds25 = seconds22.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.DurationFieldType durationFieldType28 = seconds27.getFieldType();
        boolean boolean29 = seconds25.isSupported(durationFieldType28);
        boolean boolean30 = seconds18.isSupported(durationFieldType28);
        boolean boolean31 = seconds12.isSupported(durationFieldType28);
        int int32 = seconds12.size();
        org.joda.time.Seconds seconds33 = seconds5.plus(seconds12);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = seconds33.getValue(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(seconds33);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Seconds seconds6 = seconds1.minus(3);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType9 = seconds8.getPeriodType();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds12 = seconds8.multipliedBy(0);
        org.joda.time.Seconds seconds13 = seconds8.negated();
        org.joda.time.Period period14 = seconds13.toPeriod();
        boolean boolean15 = seconds6.equals((java.lang.Object) period14);
        org.joda.time.Seconds seconds17 = seconds6.dividedBy((int) (short) 10);
        org.joda.time.Period period18 = seconds6.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.DurationFieldType durationFieldType7 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        boolean boolean23 = seconds8.isLessThan(seconds18);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        int int26 = seconds25.size();
        org.joda.time.Seconds seconds28 = seconds25.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        boolean boolean32 = seconds28.isSupported(durationFieldType31);
        boolean boolean33 = seconds8.isSupported(durationFieldType31);
        org.joda.time.Seconds seconds34 = seconds5.plus(seconds8);
        org.joda.time.Period period35 = seconds34.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(period35);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds8 = seconds6.dividedBy((int) '4');
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType11 = seconds1.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.multipliedBy(0);
        org.joda.time.Seconds seconds8 = seconds3.negated();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds3);
        int int10 = seconds3.getSeconds();
        org.joda.time.Period period11 = seconds3.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.MutablePeriod mutablePeriod8 = seconds6.toMutablePeriod();
        org.joda.time.Duration duration9 = seconds6.toStandardDuration();
        boolean boolean10 = seconds0.equals((java.lang.Object) seconds6);
        org.joda.time.Seconds seconds12 = seconds6.plus((int) (byte) 10);
        org.joda.time.Seconds seconds14 = seconds6.multipliedBy((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = seconds14.isSupported(durationFieldType15);
        org.joda.time.DurationFieldType durationFieldType17 = seconds14.getFieldType();
        int int18 = seconds14.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds1.get(durationFieldType3);
        org.joda.time.PeriodType periodType5 = seconds1.getPeriodType();
        java.lang.String str6 = seconds1.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = seconds1.getValue((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.Seconds seconds40 = seconds19.plus(seconds39);
        org.joda.time.MutablePeriod mutablePeriod41 = seconds40.toMutablePeriod();
        java.lang.String str42 = seconds40.toString();
        int int43 = seconds40.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2147483644 + "'", int43 == 2147483644);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.Seconds seconds17 = seconds0.dividedBy(3);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds7 = seconds1.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        int int10 = seconds1.size();
        org.joda.time.MutablePeriod mutablePeriod11 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds13 = seconds1.plus((int) (short) 0);
        org.joda.time.MutablePeriod mutablePeriod14 = seconds13.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType15 = seconds13.getFieldType();
        org.joda.time.Seconds seconds17 = seconds13.dividedBy(10);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(seconds17);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        boolean boolean12 = seconds6.isGreaterThan(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        org.joda.time.PeriodType periodType14 = seconds6.getPeriodType();
        java.lang.Class<?> wildcardClass15 = periodType14.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.Seconds seconds40 = seconds19.plus(seconds39);
        org.joda.time.MutablePeriod mutablePeriod41 = seconds40.toMutablePeriod();
        int int42 = seconds40.size();
        int int43 = seconds40.size();
        org.joda.time.MutablePeriod mutablePeriod44 = seconds40.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod44);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) -1);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.minus(10);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.seconds(0);
        org.joda.time.Seconds seconds8 = seconds6.minus((int) (byte) 100);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds10 = seconds1.plus(seconds8);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds10);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds8 = seconds6.plus((int) (byte) 10);
        org.joda.time.Seconds seconds9 = seconds6.negated();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        org.joda.time.Duration duration13 = seconds11.toStandardDuration();
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds11);
        org.joda.time.Seconds seconds16 = seconds11.minus(3);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds22 = seconds18.multipliedBy(0);
        org.joda.time.Seconds seconds23 = seconds18.negated();
        org.joda.time.Period period24 = seconds23.toPeriod();
        boolean boolean25 = seconds16.equals((java.lang.Object) period24);
        org.joda.time.Seconds seconds26 = seconds6.minus(seconds16);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds26);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) '#');
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy((-1));
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = seconds23.isSupported(durationFieldType24);
        org.joda.time.Seconds seconds27 = seconds23.plus((int) (byte) 1);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) '4');
        int int40 = seconds37.size();
        int int41 = seconds32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        org.joda.time.Seconds seconds43 = seconds37.plus(0);
        java.lang.String str44 = seconds43.toString();
        org.joda.time.Period period45 = seconds43.toPeriod();
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        org.joda.time.Seconds seconds48 = seconds47.negated();
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds47.get(durationFieldType49);
        boolean boolean51 = seconds43.isLessThan(seconds47);
        org.joda.time.Seconds seconds52 = seconds27.minus(seconds43);
        org.joda.time.Seconds seconds54 = seconds52.dividedBy((int) 'a');
        org.joda.time.Seconds seconds55 = seconds11.plus(seconds52);
        org.joda.time.Seconds seconds56 = seconds55.negated();
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = seconds57.get(durationFieldType58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds61 = seconds57.minus(seconds60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = seconds62.get(durationFieldType63);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds66 = seconds62.minus(seconds65);
        org.joda.time.Seconds seconds68 = seconds66.dividedBy((int) '4');
        int int69 = seconds66.size();
        int int70 = seconds61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds66);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = seconds71.get(durationFieldType72);
        boolean boolean74 = seconds66.isLessThan(seconds71);
        boolean boolean75 = seconds56.isLessThan(seconds66);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType78 = seconds77.getPeriodType();
        org.joda.time.Duration duration79 = seconds77.toStandardDuration();
        org.joda.time.Seconds seconds81 = seconds77.dividedBy((int) (byte) 10);
        int int82 = seconds56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds81);
        boolean boolean83 = seconds1.isGreaterThan(seconds56);
        org.joda.time.Duration duration84 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds86 = seconds1.plus((-1));
        org.joda.time.Seconds seconds88 = seconds86.plus((-100));
        org.joda.time.Period period89 = seconds88.toPeriod();
        org.joda.time.DurationFieldType durationFieldType91 = seconds88.getFieldType((int) (byte) 0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2147483644S" + "'", str44, "PT2147483644S");
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(durationFieldType91);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        boolean boolean72 = seconds64.isLessThan(seconds69);
        boolean boolean73 = seconds54.isLessThan(seconds64);
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType76 = seconds75.getPeriodType();
        org.joda.time.Duration duration77 = seconds75.toStandardDuration();
        org.joda.time.Seconds seconds79 = seconds75.dividedBy((int) (byte) 10);
        int int80 = seconds54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds79);
        org.joda.time.Seconds seconds82 = org.joda.time.Seconds.parseSeconds("PT-1S");
        org.joda.time.Seconds seconds83 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.Seconds seconds84 = seconds82.plus(seconds83);
        org.joda.time.Seconds seconds85 = seconds54.minus(seconds84);
        int int86 = seconds54.size();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.MutablePeriod mutablePeriod16 = seconds9.toMutablePeriod();
        java.lang.String str17 = seconds9.toString();
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds9.get(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2147483644S" + "'", str17, "PT2147483644S");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds17.multipliedBy((int) (short) 0);
        int int21 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds20);
        org.joda.time.DurationFieldType durationFieldType22 = seconds13.getFieldType();
        org.joda.time.Seconds seconds24 = seconds13.dividedBy((-2147483644));
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int27 = seconds26.getSeconds();
        org.joda.time.DurationFieldType durationFieldType28 = seconds26.getFieldType();
        org.joda.time.Seconds seconds30 = seconds26.dividedBy((int) ' ');
        org.joda.time.Seconds seconds32 = seconds26.minus((int) (byte) 10);
        boolean boolean33 = seconds24.isGreaterThan(seconds32);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) '#');
        org.joda.time.Hours hours2 = seconds1.toStandardHours();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(hours2);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) -1);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.minus(10);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.dividedBy((-1));
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds9);
        org.joda.time.DurationFieldType durationFieldType11 = seconds10.getFieldType();
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int14 = seconds13.getSeconds();
        org.joda.time.Duration duration15 = seconds13.toStandardDuration();
        org.joda.time.Seconds seconds16 = seconds10.minus(seconds13);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.secondsIn(readableInterval17);
        org.joda.time.Seconds seconds19 = seconds18.negated();
        org.joda.time.Seconds seconds21 = seconds18.minus((int) '#');
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType24 = seconds23.getPeriodType();
        org.joda.time.Duration duration25 = seconds23.toStandardDuration();
        org.joda.time.Seconds seconds27 = seconds23.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds28 = seconds27.negated();
        org.joda.time.Duration duration29 = seconds27.toStandardDuration();
        org.joda.time.Seconds seconds30 = seconds27.negated();
        org.joda.time.DurationFieldType durationFieldType31 = seconds27.getFieldType();
        boolean boolean32 = seconds18.isSupported(durationFieldType31);
        boolean boolean33 = seconds16.isSupported(durationFieldType31);
        org.joda.time.DurationFieldType durationFieldType34 = seconds16.getFieldType();
        boolean boolean35 = seconds4.isSupported(durationFieldType34);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType37 = seconds4.getFieldType(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        int int26 = seconds4.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int9 = seconds8.getSeconds();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds11 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = seconds12.get(durationFieldType13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds16 = seconds12.minus(seconds15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds23 = seconds21.dividedBy((int) '4');
        int int24 = seconds21.size();
        int int25 = seconds16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds21);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        boolean boolean29 = seconds21.isLessThan(seconds26);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = seconds35.get(durationFieldType36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds39 = seconds35.minus(seconds38);
        org.joda.time.Seconds seconds41 = seconds39.dividedBy((int) '4');
        int int42 = seconds39.size();
        int int43 = seconds34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds39);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        boolean boolean47 = seconds39.isLessThan(seconds44);
        boolean boolean48 = seconds26.isLessThan(seconds39);
        int int49 = seconds39.size();
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds39);
        org.joda.time.Seconds seconds51 = seconds5.plus(seconds39);
        org.joda.time.Seconds seconds52 = seconds5.negated();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Period period7 = seconds6.toPeriod();
        org.joda.time.Seconds seconds9 = seconds6.dividedBy(100);
        org.joda.time.Seconds seconds11 = seconds6.minus(0);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds5);
        org.joda.time.Seconds seconds9 = seconds7.multipliedBy((-2147483644));
        java.lang.String str10 = seconds7.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0S" + "'", str10, "PT0S");
    }
}

