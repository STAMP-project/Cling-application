import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        double[] doubleArray19 = new double[] {};
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray24 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        double double39 = tTestImpl20.tTest(doubleArray24, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = tTestImpl0.homoscedasticTTest(doubleArray19, doubleArray24, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.2806531524060034d + "'", double39 == 0.2806531524060034d);
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl0.t(doubleArray43, doubleArray57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double62 = tTestImpl0.t(2.2085058899383956d, statisticalSummary61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.5172120199559697d + "'", double59 == 0.5172120199559697d);
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray12 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution13 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution13);
        double[] doubleArray20 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray25 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double26 = tTestImpl14.homoscedasticT(doubleArray20, doubleArray25);
        double double27 = tTestImpl8.tTest(doubleArray12, doubleArray25);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        tTestImpl8.setDistribution(tDistribution28);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        tTestImpl8.setDistribution(tDistribution30);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray37 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        double double52 = tTestImpl33.tTest(doubleArray37, doubleArray50);
        double double53 = tTestImpl8.t(0.35800486798369846d, doubleArray50);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray58 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl54.tTest(doubleArray58, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        tTestImpl54.setDistribution(tDistribution74);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl54.setDistribution(tDistribution76);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl79 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl79.tTest((double) (short) 100, doubleArray88);
        double double96 = tTestImpl54.t((double) (byte) 1, doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            double double97 = tTestImpl1.homoscedasticTTest(doubleArray50, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.405429217622299d) + "'", double26 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2806531524060034d + "'", double27 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.2806531524060034d + "'", double52 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.384536475695448d + "'", double53 == 1.384536475695448d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.2806531524060034d + "'", double73 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.01613264369976175d + "'", double95 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.987358558121667d + "'", double96 == 0.987358558121667d);
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary57 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double59 = tTestImpl1.homoscedasticTTest(statisticalSummary57, statisticalSummary58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        tTestImpl0.setDistribution(tDistribution50);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary53 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double54 = tTestImpl0.tTest((-0.09656583816243881d), statisticalSummary53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double44 = tTestImpl0.tTest((double) 1.0f, statisticalSummary43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double26 = tTestImpl0.t((double) 1, statisticalSummary25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        tTestImpl24.setDistribution(tDistribution37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray44 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl40.tTest(doubleArray44, doubleArray57);
        double double60 = tTestImpl24.t(10.0d, doubleArray44);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl24.t(100.0d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl1.homoscedasticT(doubleArray74, doubleArray84);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl1.tTest(0.0d, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.2806531524060034d + "'", double59 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 3.8d + "'", double60 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-2.8418588844347075d) + "'", double76 == (-2.8418588844347075d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.405429217622299d + "'", double91 == 0.405429217622299d);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl0.tTest(1.3385956498818976d, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary74 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double75 = tTestImpl0.homoscedasticTTest(statisticalSummary73, statisticalSummary74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl51.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray73 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl69.tTest(doubleArray73, doubleArray86);
        double double89 = tTestImpl51.t((double) (short) 10, doubleArray73);
        double double90 = tTestImpl0.t(1.088109431399388d, doubleArray73);
        java.lang.Class<?> wildcardClass91 = doubleArray73.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.01613264369976175d + "'", double67 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 3.8d + "'", double89 == 3.8d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.394126037906707d + "'", double90 == 4.394126037906707d);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = tTestImpl0.tTest(1.3385956498818976d, statisticalSummary81, (double) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        double[] doubleArray68 = null;
        double[] doubleArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double70 = tTestImpl0.t(doubleArray68, doubleArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl21.t((double) (short) 10, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl60.tTest((double) (short) 100, doubleArray69);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl21.pairedT(doubleArray69, doubleArray84);
        double double92 = tTestImpl0.t((double) (short) 0, doubleArray84);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean98 = tTestImpl0.tTest(statisticalSummary95, statisticalSummary96, 1.088109431399388d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.088109431399388");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 3.8d + "'", double59 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.01613264369976175d + "'", double76 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0377339947605275d + "'", double92 == 1.0377339947605275d);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        tTestImpl39.setDistribution(tDistribution40);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl39.homoscedasticT(doubleArray54, doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl1.homoscedasticT(doubleArray60, doubleArray84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = tTestImpl1.tTest((double) (-1.0f), statisticalSummary93, 1.3385956498818976d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.3385956498818976");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1.1115227041167497d) + "'", double76 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.6198140498569726d + "'", double91 == 1.6198140498569726d);
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray62 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl58.tTest(doubleArray62, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl80 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution79);
        double[] doubleArray86 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray91 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double92 = tTestImpl80.homoscedasticT(doubleArray86, doubleArray91);
        double double93 = tTestImpl58.t((double) 1L, doubleArray91);
        double double94 = tTestImpl0.t((double) 0.0f, doubleArray91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double97 = tTestImpl0.homoscedasticT(statisticalSummary95, statisticalSummary96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.2806531524060034d + "'", double77 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.405429217622299d) + "'", double92 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1.3573057358494125d + "'", double93 == 1.3573057358494125d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.3997215400947067d + "'", double94 == 1.3997215400947067d);
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl1.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl1.setDistribution(tDistribution41);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean46 = tTestImpl1.tTest(statisticalSummary43, statisticalSummary44, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary88 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary89 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean91 = tTestImpl1.tTest(statisticalSummary88, statisticalSummary89, 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl1.setDistribution(tDistribution22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = tTestImpl1.tTest((double) (-1L), statisticalSummary25, 0.987358558121667d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.987358558121667");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary40 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean42 = tTestImpl1.tTest((-0.405429217622299d), statisticalSummary40, (double) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl37.setDistribution(tDistribution38);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl43.tTest((double) (short) 100, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double[] doubleArray82 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double83 = tTestImpl62.t((double) '4', doubleArray82);
        double double84 = tTestImpl43.tTest((double) (short) 100, doubleArray82);
        double[] doubleArray91 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double92 = tTestImpl43.tTest(0.405429217622299d, doubleArray91);
        double double93 = tTestImpl41.t(3.8d, doubleArray91);
        double double94 = tTestImpl37.t((double) (short) 1, doubleArray91);
        double double95 = tTestImpl1.t(0.004213458414249471d, doubleArray91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl1.homoscedasticTTest(statisticalSummary96, statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.01613264369976175d + "'", double59 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.09656583816243881d) + "'", double83 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.07560555610353314d + "'", double84 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.1143321549278642d + "'", double92 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-10.500000000000002d) + "'", double93 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-3.5d) + "'", double94 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-1.0105336460356238d) + "'", double95 == (-1.0105336460356238d));
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl0.tTest((-0.8059002806605887d), statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        double double69 = tTestImpl0.t(1.3965146696271626d, doubleArray66);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        tTestImpl0.setDistribution(tDistribution70);
        java.lang.Class<?> wildcardClass72 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.3404872472421194d + "'", double69 == 1.3404872472421194d);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl55.tTest((double) (short) 100, doubleArray64);
        double double72 = tTestImpl41.t((double) 10.0f, doubleArray64);
        boolean boolean74 = tTestImpl0.tTest(0.12673187601587688d, doubleArray64, 0.01613264369976175d);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double79 = tTestImpl0.homoscedasticTTest(statisticalSummary77, statisticalSummary78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.01613264369976175d + "'", double71 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5339796283719219d + "'", double72 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary4 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double5 = tTestImpl0.tTest(0.0d, statisticalSummary4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double82 = tTestImpl0.tTest(10.0d, statisticalSummary81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary47 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double48 = tTestImpl0.t(1.3965146696271626d, statisticalSummary47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary35 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary36 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean38 = tTestImpl1.tTest(statisticalSummary35, statisticalSummary36, (double) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl0.setDistribution(tDistribution24);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary27 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double28 = tTestImpl0.t(2.2210142777360953d, statisticalSummary27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray46 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl42.tTest(doubleArray46, doubleArray59);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl29.t(doubleArray59, doubleArray74);
        double double77 = tTestImpl26.t((double) 10.0f, doubleArray74);
        double double78 = tTestImpl0.t(0.987358558121667d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl0.setDistribution(tDistribution79);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = tTestImpl0.tTest((-2.2d), statisticalSummary82, 4.442799675467754d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.442799675467754");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2806531524060034d + "'", double61 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.357841932773502d + "'", double78 == 1.357841932773502d);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(statisticalSummary93, statisticalSummary94, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        tTestImpl64.setDistribution(tDistribution65);
        org.apache.commons.math.distribution.TDistribution tDistribution67 = null;
        tTestImpl64.setDistribution(tDistribution67);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution70);
        double[] doubleArray77 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray82 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double83 = tTestImpl71.homoscedasticT(doubleArray77, doubleArray82);
        double double84 = tTestImpl64.t(3.8d, doubleArray77);
        double double85 = tTestImpl0.t(0.5172120199559697d, doubleArray77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = tTestImpl0.tTest(0.1143321549278642d, statisticalSummary87, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.8463073355328574d + "'", double84 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0116792134203785d + "'", double85 == 1.0116792134203785d);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl1.t((double) 0, doubleArray77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl1.homoscedasticTTest(statisticalSummary81, statisticalSummary82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.3997215400947067d + "'", double80 == 1.3997215400947067d);
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = tTestImpl0.tTest(statisticalSummary24, statisticalSummary25, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl1.t(statisticalSummary92, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl36 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl38.tTest((double) (short) 100, doubleArray47);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double[] doubleArray77 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double78 = tTestImpl57.t((double) '4', doubleArray77);
        double double79 = tTestImpl38.tTest((double) (short) 100, doubleArray77);
        double[] doubleArray86 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double87 = tTestImpl38.tTest(0.405429217622299d, doubleArray86);
        double double88 = tTestImpl36.t(3.8d, doubleArray86);
        double double89 = tTestImpl1.t(0.0d, doubleArray86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double92 = tTestImpl1.t(0.987358558121667d, statisticalSummary91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.01613264369976175d + "'", double54 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.09656583816243881d) + "'", double78 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.07560555610353314d + "'", double79 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.1143321549278642d + "'", double87 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-10.500000000000002d) + "'", double88 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1.0000000000000002d) + "'", double89 == (-1.0000000000000002d));
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray13 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl9.tTest(doubleArray13, doubleArray26);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray48 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl44.tTest(doubleArray48, doubleArray61);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double double78 = tTestImpl31.t(doubleArray61, doubleArray76);
        boolean boolean80 = tTestImpl9.tTest((double) (short) 0, doubleArray61, Double.NaN);
        double double81 = tTestImpl1.t((double) (short) 100, doubleArray61);
        org.apache.commons.math.distribution.TDistribution tDistribution82 = null;
        tTestImpl1.setDistribution(tDistribution82);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = tTestImpl1.tTest(0.37390096630005876d, statisticalSummary85, 0.3793626154059051d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2806531524060034d + "'", double28 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.2806531524060034d + "'", double63 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-2.8418588844347075d) + "'", double81 == (-2.8418588844347075d));
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl0.t(1.4411111919348023d, doubleArray20);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary23 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double25 = tTestImpl0.homoscedasticT(statisticalSummary23, statisticalSummary24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.3385956498818976d + "'", double22 == 1.3385956498818976d);
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray6 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl2.tTest(doubleArray6, doubleArray19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl2.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl2.t(doubleArray45, doubleArray59);
        boolean boolean63 = tTestImpl0.tTest((double) (short) 1, doubleArray59, 0.405429217622299d);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean67 = tTestImpl0.tTest(0.2806531524060034d, statisticalSummary65, (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2806531524060034d + "'", double21 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5172120199559697d + "'", double61 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double61 = tTestImpl1.tTest(statisticalSummary59, statisticalSummary60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray18 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        double[] doubleArray26 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray31 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double32 = tTestImpl20.homoscedasticT(doubleArray26, doubleArray31);
        double double33 = tTestImpl14.tTest(doubleArray18, doubleArray31);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        double double48 = tTestImpl1.t(doubleArray31, doubleArray46);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        tTestImpl1.setDistribution(tDistribution49);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary52 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double53 = tTestImpl1.tTest(0.982920007042921d, statisticalSummary52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.405429217622299d) + "'", double32 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.2806531524060034d + "'", double33 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl3.setDistribution(tDistribution16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        double double39 = tTestImpl3.t(10.0d, doubleArray23);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl69.tTest((double) (short) 100, doubleArray78);
        double double86 = tTestImpl55.t((double) 10.0f, doubleArray78);
        double double87 = tTestImpl3.homoscedasticT(doubleArray52, doubleArray78);
        double double88 = tTestImpl0.t((double) 100.0f, doubleArray78);
        double[] doubleArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean92 = tTestImpl0.tTest((double) (short) 1, doubleArray90, (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 3.8d + "'", double39 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.01613264369976175d + "'", double85 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.5339796283719219d + "'", double86 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.405429217622299d + "'", double87 == 0.405429217622299d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-3.9998096691255283d) + "'", double88 == (-3.9998096691255283d));
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        double[] doubleArray3 = null;
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double[] doubleArray25 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double26 = tTestImpl5.t((double) '4', doubleArray25);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        tTestImpl29.setDistribution(tDistribution30);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray50 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        double[] doubleArray58 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray63 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double64 = tTestImpl52.homoscedasticT(doubleArray58, doubleArray63);
        double double65 = tTestImpl46.tTest(doubleArray50, doubleArray63);
        double double66 = tTestImpl29.homoscedasticT(doubleArray44, doubleArray50);
        double double67 = tTestImpl5.t(0.35800486798369846d, doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double double68 = tTestImpl0.tTest(doubleArray3, doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.09656583816243881d) + "'", double26 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.405429217622299d) + "'", double64 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.2806531524060034d + "'", double65 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-1.1115227041167497d) + "'", double66 == (-1.1115227041167497d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4.442799675467754d + "'", double67 == 4.442799675467754d);
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = tTestImpl0.tTest(0.5172120199559697d, statisticalSummary60, 0.35800486798369846d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl5.tTest((double) (short) 100, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl5.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl5.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl28.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray50 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        double[] doubleArray58 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray63 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double64 = tTestImpl52.homoscedasticT(doubleArray58, doubleArray63);
        double double65 = tTestImpl46.tTest(doubleArray50, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl33.t(doubleArray63, doubleArray78);
        double double81 = tTestImpl28.t(0.07560555610353314d, doubleArray63);
        double double82 = tTestImpl5.t((double) (short) 10, doubleArray63);
        double double83 = tTestImpl1.t((-0.975807309953049d), doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl85 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution84);
        double[] doubleArray91 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray96 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double97 = tTestImpl85.homoscedasticT(doubleArray91, doubleArray96);
        double[] doubleArray98 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double99 = tTestImpl1.pairedT(doubleArray91, doubleArray98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.01613264369976175d + "'", double21 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.405429217622299d) + "'", double64 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.2806531524060034d + "'", double65 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.3965146696271626d + "'", double81 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.9755634976417653d + "'", double82 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.4411111919348023d + "'", double83 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + (-0.405429217622299d) + "'", double97 == (-0.405429217622299d));
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary23 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = tTestImpl1.tTest((double) 100L, statisticalSummary23, (-0.975807309953049d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.975807309953049");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray46 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl42.tTest(doubleArray46, doubleArray59);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl29.t(doubleArray59, doubleArray74);
        double double77 = tTestImpl26.t((double) 10.0f, doubleArray74);
        double double78 = tTestImpl0.t(0.987358558121667d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl0.setDistribution(tDistribution79);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = tTestImpl0.tTest(0.2806531524060034d, statisticalSummary82, 0.987358558121667d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.987358558121667");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2806531524060034d + "'", double61 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.357841932773502d + "'", double78 == 1.357841932773502d);
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl1.setDistribution(tDistribution94);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl1.tTest(statisticalSummary96, statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = tTestImpl0.tTest(statisticalSummary25, statisticalSummary26, (double) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray13 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl9.tTest(doubleArray13, doubleArray26);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl9.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution31 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl32 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution31);
        double[] doubleArray38 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray43 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double44 = tTestImpl32.homoscedasticT(doubleArray38, doubleArray43);
        double[] doubleArray52 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double53 = tTestImpl32.t((double) '4', doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl9.t(doubleArray52, doubleArray66);
        double double69 = tTestImpl1.t(0.2806531524060034d, doubleArray52);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary70 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl1.t(statisticalSummary70, statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2806531524060034d + "'", double28 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.405429217622299d) + "'", double44 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.09656583816243881d) + "'", double53 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.5172120199559697d + "'", double68 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2.2085058899383956d + "'", double69 == 2.2085058899383956d);
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        tTestImpl0.setDistribution(tDistribution50);
        java.lang.Class<?> wildcardClass52 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl1.tTest((double) (byte) 10, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl20.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution26 = null;
        tTestImpl25.setDistribution(tDistribution26);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double double47 = tTestImpl31.tTest((double) (short) 100, doubleArray40);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double[] doubleArray70 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double71 = tTestImpl50.t((double) '4', doubleArray70);
        double double72 = tTestImpl31.tTest((double) (short) 100, doubleArray70);
        double[] doubleArray79 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double80 = tTestImpl31.tTest(0.405429217622299d, doubleArray79);
        double double81 = tTestImpl29.t(3.8d, doubleArray79);
        double double82 = tTestImpl25.t((double) (short) 1, doubleArray79);
        double double83 = tTestImpl20.t(0.9839224922440002d, doubleArray79);
        double double84 = tTestImpl1.t((double) (-1), doubleArray79);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double87 = tTestImpl1.t(statisticalSummary85, statisticalSummary86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.01613264369976175d + "'", double47 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.09656583816243881d) + "'", double71 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.07560555610353314d + "'", double72 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.1143321549278642d + "'", double80 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-10.500000000000002d) + "'", double81 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-3.5d) + "'", double82 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-3.4598062306100013d) + "'", double83 == (-3.4598062306100013d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.5d + "'", double84 == 1.5d);
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        double[] doubleArray9 = new double[] { 1.357841932773502d };
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray14 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution15 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl16 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution15);
        double[] doubleArray22 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray27 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double28 = tTestImpl16.homoscedasticT(doubleArray22, doubleArray27);
        double double29 = tTestImpl10.tTest(doubleArray14, doubleArray27);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        tTestImpl10.setDistribution(tDistribution30);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        double[] doubleArray53 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double54 = tTestImpl33.t((double) '4', doubleArray53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl10.t(doubleArray53, doubleArray67);
        // The following exception was thrown during execution in test generation
        try {
            double double70 = tTestImpl1.tTest(doubleArray9, doubleArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.357841932773502]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.405429217622299d) + "'", double28 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2806531524060034d + "'", double29 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.09656583816243881d) + "'", double54 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.5172120199559697d + "'", double69 == 0.5172120199559697d);
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        tTestImpl1.setDistribution(tDistribution74);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = tTestImpl1.tTest(0.5339796283719219d, statisticalSummary77, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        tTestImpl50.setDistribution(tDistribution51);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl50.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl50.t(3.8d, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl0.t(doubleArray63, doubleArray78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl0.t(0.5703029263335007d, statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.8463073355328574d + "'", double70 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        tTestImpl0.setDistribution(tDistribution7);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary10 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double11 = tTestImpl0.t(4.394126037906707d, statisticalSummary10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl26.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl30 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution29);
        double[] doubleArray36 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray41 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double42 = tTestImpl30.homoscedasticT(doubleArray36, doubleArray41);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray47 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl43.tTest(doubleArray47, doubleArray60);
        double double63 = tTestImpl26.homoscedasticT(doubleArray41, doubleArray47);
        double double64 = tTestImpl0.t((double) (byte) 100, doubleArray47);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double67 = tTestImpl0.t(0.2674771174879971d, statisticalSummary66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.405429217622299d) + "'", double42 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.2806531524060034d + "'", double62 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.1115227041167497d) + "'", double63 == (-1.1115227041167497d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-2.2d) + "'", double64 == (-2.2d));
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary72 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean74 = tTestImpl0.tTest((-1.0105336460356238d), statisticalSummary72, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = tTestImpl1.tTest((double) (short) 100, statisticalSummary56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl51.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray73 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl69.tTest(doubleArray73, doubleArray86);
        double double89 = tTestImpl51.t((double) (short) 10, doubleArray73);
        double double90 = tTestImpl0.t(1.088109431399388d, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest((double) ' ', statisticalSummary94, (-1.1115227041167497d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.1115227041167497");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.01613264369976175d + "'", double67 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 3.8d + "'", double89 == 3.8d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.394126037906707d + "'", double90 == 4.394126037906707d);
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary36 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double37 = tTestImpl1.t(0.987358558121667d, statisticalSummary36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        double[] doubleArray68 = new double[] { 0.405429217622299d, (byte) -1, 10.0f, 0.5172120199559697d };
        double double69 = tTestImpl1.t(1.0377339947605275d, doubleArray68);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary70 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl1.homoscedasticT(statisticalSummary70, statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.405429217622299, -1.0, 10.0, 0.5172120199559697]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.5703029263335007d + "'", double69 == 0.5703029263335007d);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray58 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl54.tTest(doubleArray58, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl41.t(doubleArray71, doubleArray86);
        double double89 = tTestImpl1.t((double) 0.0f, doubleArray86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double92 = tTestImpl1.t((double) (short) 100, statisticalSummary91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.2806531524060034d + "'", double73 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.3997215400947067d + "'", double89 == 1.3997215400947067d);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl8.setDistribution(tDistribution21);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray28 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl30 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution29);
        double[] doubleArray36 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray41 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double42 = tTestImpl30.homoscedasticT(doubleArray36, doubleArray41);
        double double43 = tTestImpl24.tTest(doubleArray28, doubleArray41);
        double double44 = tTestImpl8.t(10.0d, doubleArray28);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl77 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution76);
        double[] doubleArray83 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray88 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double89 = tTestImpl77.homoscedasticT(doubleArray83, doubleArray88);
        double double90 = tTestImpl74.tTest((double) (short) 100, doubleArray83);
        double double91 = tTestImpl60.t((double) 10.0f, doubleArray83);
        double double92 = tTestImpl8.homoscedasticT(doubleArray57, doubleArray83);
        double double93 = tTestImpl1.t((double) 1L, doubleArray57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = tTestImpl1.tTest((double) (byte) 10, statisticalSummary95, 0.004213458414249471d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.405429217622299d) + "'", double42 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.2806531524060034d + "'", double43 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 3.8d + "'", double44 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-0.405429217622299d) + "'", double89 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.01613264369976175d + "'", double90 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.5339796283719219d + "'", double91 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.405429217622299d + "'", double92 == 0.405429217622299d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1.3573057358494125d + "'", double93 == 1.3573057358494125d);
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double[] doubleArray90 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double91 = tTestImpl70.t((double) '4', doubleArray90);
        double double92 = tTestImpl0.t(doubleArray66, doubleArray90);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double97 = tTestImpl0.t(0.35800486798369846d, statisticalSummary96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-0.09656583816243881d) + "'", double91 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.5172120199559697d) + "'", double92 == (-0.5172120199559697d));
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double74 = tTestImpl0.t(0.5703029263335007d, statisticalSummary73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray12 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution13 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution13);
        double[] doubleArray20 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray25 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double26 = tTestImpl14.homoscedasticT(doubleArray20, doubleArray25);
        double double27 = tTestImpl8.tTest(doubleArray12, doubleArray25);
        double double28 = tTestImpl0.t((double) 0L, doubleArray12);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary30 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double31 = tTestImpl0.tTest((-14.881283513379177d), statisticalSummary30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.405429217622299d) + "'", double26 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2806531524060034d + "'", double27 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4.466666666666667d + "'", double28 == 4.466666666666667d);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl1.t(100.0d, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl1.setDistribution(tDistribution54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        tTestImpl1.setDistribution(tDistribution56);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = tTestImpl1.tTest((double) (byte) 10, statisticalSummary59, (-3.4598062306100013d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -3.4598062306100013");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-2.8418588844347075d) + "'", double53 == (-2.8418588844347075d));
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        org.apache.commons.math.distribution.TDistribution tDistribution95 = null;
        tTestImpl0.setDistribution(tDistribution95);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary98 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double99 = tTestImpl0.homoscedasticTTest(statisticalSummary97, statisticalSummary98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray58 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl54.tTest(doubleArray58, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl41.t(doubleArray71, doubleArray86);
        double double89 = tTestImpl1.t((double) 0.0f, doubleArray86);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = tTestImpl1.tTest(statisticalSummary92, statisticalSummary93, (-2.8418588844347075d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -2.8418588844347075");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.2806531524060034d + "'", double73 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.3997215400947067d + "'", double89 == 1.3997215400947067d);
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        tTestImpl0.setDistribution(tDistribution50);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary52 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary53 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean55 = tTestImpl0.tTest(statisticalSummary52, statisticalSummary53, 0.987358558121667d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.987358558121667");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = tTestImpl0.tTest((double) (-1.0f), statisticalSummary8, 4.656123925628981d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.656123925628981");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary75 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double76 = tTestImpl1.tTest((-1.587268255506484d), statisticalSummary75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        tTestImpl0.setDistribution(tDistribution7);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary9 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary10 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double11 = tTestImpl0.homoscedasticT(statisticalSummary9, statisticalSummary10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl0.tTest(statisticalSummary91, statisticalSummary92, 0.9755634976417653d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9755634976417653");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl9.setDistribution(tDistribution22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray29 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        double double44 = tTestImpl25.tTest(doubleArray29, doubleArray42);
        double double45 = tTestImpl9.t(10.0d, doubleArray29);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl75.tTest((double) (short) 100, doubleArray84);
        double double92 = tTestImpl61.t((double) 10.0f, doubleArray84);
        double double93 = tTestImpl9.homoscedasticT(doubleArray58, doubleArray84);
        double double94 = tTestImpl6.t((double) 100.0f, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(0.36242697487793474d, doubleArray84, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.2806531524060034d + "'", double44 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 3.8d + "'", double45 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.01613264369976175d + "'", double91 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.5339796283719219d + "'", double92 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.405429217622299d + "'", double93 == 0.405429217622299d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-3.9998096691255283d) + "'", double94 == (-3.9998096691255283d));
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl0.t((-0.09656583816243881d), statisticalSummary94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.tTest(0.9755634976417653d, doubleArray35);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary39 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary40 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double41 = tTestImpl0.tTest(statisticalSummary39, statisticalSummary40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2674771174879971d + "'", double38 == 0.2674771174879971d);
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        double[] doubleArray6 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double7 = tTestImpl0.tTest((double) 100L, doubleArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl65.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl65.setDistribution(tDistribution68);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl65.t(3.8d, doubleArray78);
        double double86 = tTestImpl0.t((double) 10L, doubleArray78);
        org.apache.commons.math.distribution.TDistribution tDistribution87 = null;
        tTestImpl0.setDistribution(tDistribution87);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double91 = tTestImpl0.tTest(0.2806531524060034d, statisticalSummary90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.8463073355328574d + "'", double85 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.5339796283719219d + "'", double86 == 0.5339796283719219d);
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray62 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl58.tTest(doubleArray62, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl80 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution79);
        double[] doubleArray86 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray91 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double92 = tTestImpl80.homoscedasticT(doubleArray86, doubleArray91);
        double double93 = tTestImpl58.t((double) 1L, doubleArray91);
        double double94 = tTestImpl0.t((double) 0.0f, doubleArray91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double97 = tTestImpl0.tTest(3.8d, statisticalSummary96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.2806531524060034d + "'", double77 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.405429217622299d) + "'", double92 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1.3573057358494125d + "'", double93 == 1.3573057358494125d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.3997215400947067d + "'", double94 == 1.3997215400947067d);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        tTestImpl0.setDistribution(tDistribution7);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary9 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary10 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double11 = tTestImpl0.tTest(statisticalSummary9, statisticalSummary10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        double[] doubleArray26 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray31 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double32 = tTestImpl20.homoscedasticT(doubleArray26, doubleArray31);
        double double33 = tTestImpl17.tTest((double) (short) 100, doubleArray26);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        double double55 = tTestImpl17.t((double) (short) 10, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl56.tTest((double) (short) 100, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl17.pairedT(doubleArray65, doubleArray80);
        double[] doubleArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = tTestImpl0.homoscedasticTTest(doubleArray65, doubleArray88, (-0.405429217622299d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.405429217622299");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.405429217622299d) + "'", double32 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.01613264369976175d + "'", double33 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 3.8d + "'", double55 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.01613264369976175d + "'", double72 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double87));
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl51.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray73 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl69.tTest(doubleArray73, doubleArray86);
        double double89 = tTestImpl51.t((double) (short) 10, doubleArray73);
        double double90 = tTestImpl0.t(1.088109431399388d, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl0.tTest(statisticalSummary93, statisticalSummary94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.01613264369976175d + "'", double67 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 3.8d + "'", double89 == 3.8d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.394126037906707d + "'", double90 == 4.394126037906707d);
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        java.lang.Class<?> wildcardClass55 = doubleArray36.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        tTestImpl0.setDistribution(tDistribution36);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary38 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = tTestImpl0.tTest(statisticalSummary38, statisticalSummary39, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl1.setDistribution(tDistribution77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double81 = tTestImpl1.homoscedasticT(statisticalSummary79, statisticalSummary80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary5 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = tTestImpl0.tTest(statisticalSummary5, statisticalSummary6, (-1.587268255506484d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.587268255506484");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        tTestImpl6.setDistribution(tDistribution7);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl12 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl12.tTest((double) (short) 100, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        double[] doubleArray51 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double52 = tTestImpl31.t((double) '4', doubleArray51);
        double double53 = tTestImpl12.tTest((double) (short) 100, doubleArray51);
        double[] doubleArray60 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double61 = tTestImpl12.tTest(0.405429217622299d, doubleArray60);
        double double62 = tTestImpl10.t(3.8d, doubleArray60);
        double double63 = tTestImpl6.t((double) (short) 1, doubleArray60);
        double double64 = tTestImpl1.t(0.9839224922440002d, doubleArray60);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl66.tTest((double) (short) 100, doubleArray75);
        double double83 = tTestImpl1.t((double) (-1.0f), doubleArray75);
        java.lang.Class<?> wildcardClass84 = doubleArray75.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.01613264369976175d + "'", double28 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.09656583816243881d) + "'", double52 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.07560555610353314d + "'", double53 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.1143321549278642d + "'", double61 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-10.500000000000002d) + "'", double62 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-3.5d) + "'", double63 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-3.4598062306100013d) + "'", double64 == (-3.4598062306100013d));
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.01613264369976175d + "'", double82 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.088109431399388d + "'", double83 == 1.088109431399388d);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl0.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary63 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean66 = tTestImpl0.tTest(statisticalSummary63, statisticalSummary64, 0.9302024075262618d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9302024075262618");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl0.setDistribution(tDistribution68);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        tTestImpl0.setDistribution(tDistribution70);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double74 = tTestImpl0.tTest(0.1143321549278642d, statisticalSummary73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double[] doubleArray60 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double61 = tTestImpl40.t((double) '4', doubleArray60);
        double double62 = tTestImpl21.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double double78 = tTestImpl21.tTest((double) (byte) 1, doubleArray71);
        double double79 = tTestImpl7.t((-1.0d), doubleArray71);
        double double80 = tTestImpl0.t(1.3930877336894083d, doubleArray71);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl0.tTest(statisticalSummary81, statisticalSummary82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.09656583816243881d) + "'", double61 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.07560555610353314d + "'", double62 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.3793626154059051d + "'", double78 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.088109431399388d + "'", double79 == 1.088109431399388d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.9675565918996828d + "'", double80 == 0.9675565918996828d);
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        tTestImpl0.setDistribution(tDistribution7);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary9 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary10 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double11 = tTestImpl0.t(statisticalSummary9, statisticalSummary10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        java.lang.Class<?> wildcardClass20 = doubleArray17.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl1.setDistribution(tDistribution22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double26 = tTestImpl1.homoscedasticTTest(statisticalSummary24, statisticalSummary25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl1.setDistribution(tDistribution27);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary30 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double31 = tTestImpl1.tTest(2.2210142777360953d, statisticalSummary30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl0.setDistribution(tDistribution25);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary28 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double29 = tTestImpl0.t(0.004213458414249471d, statisticalSummary28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray6 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl2.tTest(doubleArray6, doubleArray19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl2.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl2.t(doubleArray45, doubleArray59);
        boolean boolean63 = tTestImpl0.tTest((double) (short) 1, doubleArray59, 0.405429217622299d);
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl80 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution82 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl83 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution82);
        double[] doubleArray89 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray94 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double95 = tTestImpl83.homoscedasticT(doubleArray89, doubleArray94);
        double double96 = tTestImpl80.tTest((double) (short) 100, doubleArray89);
        double double97 = tTestImpl66.t((double) 10.0f, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = tTestImpl0.tTest(Double.NaN, doubleArray89, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2806531524060034d + "'", double21 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5172120199559697d + "'", double61 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-0.405429217622299d) + "'", double95 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.01613264369976175d + "'", double96 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.5339796283719219d + "'", double97 == 0.5339796283719219d);
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        tTestImpl50.setDistribution(tDistribution51);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl50.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl50.t(3.8d, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl0.t(doubleArray63, doubleArray78);
        java.lang.Class<?> wildcardClass86 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.8463073355328574d + "'", double70 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double77 = tTestImpl0.tTest(0.405429217622299d, statisticalSummary76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary4 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary5 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double6 = tTestImpl1.homoscedasticTTest(statisticalSummary4, statisticalSummary5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl56.t((double) 1L, doubleArray89);
        double double92 = tTestImpl0.t(0.15639940166959065d, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(0.12673187601587688d, statisticalSummary94, 1.4411111919348023d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.4411111919348023");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.3573057358494125d + "'", double91 == 1.3573057358494125d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.3930877336894083d + "'", double92 == 1.3930877336894083d);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray58 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl54.tTest(doubleArray58, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl41.t(doubleArray71, doubleArray86);
        double double89 = tTestImpl1.t((double) 0.0f, doubleArray86);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = tTestImpl1.tTest(statisticalSummary92, statisticalSummary93, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.2806531524060034d + "'", double73 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.3997215400947067d + "'", double89 == 1.3997215400947067d);
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl0.tTest(1.6198140498569726d, statisticalSummary92, (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        double double69 = tTestImpl0.t(1.3965146696271626d, doubleArray66);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        tTestImpl0.setDistribution(tDistribution70);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary72 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double74 = tTestImpl0.homoscedasticTTest(statisticalSummary72, statisticalSummary73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.3404872472421194d + "'", double69 == 1.3404872472421194d);
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl0.tTest(statisticalSummary91, statisticalSummary92, 1.6198140498569726d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.6198140498569726");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double66 = tTestImpl0.tTest(statisticalSummary64, statisticalSummary65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = tTestImpl1.tTest(statisticalSummary59, statisticalSummary60, (-3.9998096691255283d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -3.9998096691255283");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        org.apache.commons.math.distribution.TDistribution tDistribution72 = null;
        tTestImpl0.setDistribution(tDistribution72);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary74 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary75 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double76 = tTestImpl0.homoscedasticTTest(statisticalSummary74, statisticalSummary75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl65.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl65.setDistribution(tDistribution68);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl65.t(3.8d, doubleArray78);
        double double86 = tTestImpl0.t((double) 10L, doubleArray78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary88 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = tTestImpl0.tTest((-3.4598062306100013d), statisticalSummary88, 0.5339796283719219d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.5339796283719219");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.8463073355328574d + "'", double85 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.5339796283719219d + "'", double86 == 0.5339796283719219d);
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl0.t(doubleArray43, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary63 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean65 = tTestImpl0.tTest(0.3793626154059051d, statisticalSummary63, 0.9566618438474437d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9566618438474437");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.5172120199559697d + "'", double59 == 0.5172120199559697d);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray13 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl9.tTest(doubleArray13, doubleArray26);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl9.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution31 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl32 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution31);
        double[] doubleArray38 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray43 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double44 = tTestImpl32.homoscedasticT(doubleArray38, doubleArray43);
        double[] doubleArray52 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double53 = tTestImpl32.t((double) '4', doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl9.t(doubleArray52, doubleArray66);
        double double69 = tTestImpl1.t(0.2806531524060034d, doubleArray52);
        java.lang.Class<?> wildcardClass70 = doubleArray52.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2806531524060034d + "'", double28 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.405429217622299d) + "'", double44 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.09656583816243881d) + "'", double53 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.5172120199559697d + "'", double68 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2.2085058899383956d + "'", double69 == 2.2085058899383956d);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl55.tTest((double) (short) 100, doubleArray64);
        double double72 = tTestImpl41.t((double) 10.0f, doubleArray64);
        boolean boolean74 = tTestImpl0.tTest(0.12673187601587688d, doubleArray64, 0.01613264369976175d);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary75 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean78 = tTestImpl0.tTest(statisticalSummary75, statisticalSummary76, (double) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 97.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.01613264369976175d + "'", double71 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5339796283719219d + "'", double72 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double82 = tTestImpl0.t(0.0d, statisticalSummary81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary46 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary47 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean49 = tTestImpl0.tTest(statisticalSummary46, statisticalSummary47, 4.442799675467754d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.442799675467754");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl1.homoscedasticTTest(statisticalSummary61, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        tTestImpl6.setDistribution(tDistribution7);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl12 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl12.tTest((double) (short) 100, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        double[] doubleArray51 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double52 = tTestImpl31.t((double) '4', doubleArray51);
        double double53 = tTestImpl12.tTest((double) (short) 100, doubleArray51);
        double[] doubleArray60 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double61 = tTestImpl12.tTest(0.405429217622299d, doubleArray60);
        double double62 = tTestImpl10.t(3.8d, doubleArray60);
        double double63 = tTestImpl6.t((double) (short) 1, doubleArray60);
        double double64 = tTestImpl1.t(0.9839224922440002d, doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        tTestImpl1.setDistribution(tDistribution65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary67 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary68 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double69 = tTestImpl1.homoscedasticT(statisticalSummary67, statisticalSummary68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.01613264369976175d + "'", double28 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.09656583816243881d) + "'", double52 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.07560555610353314d + "'", double53 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.1143321549278642d + "'", double61 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-10.500000000000002d) + "'", double62 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-3.5d) + "'", double63 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-3.4598062306100013d) + "'", double64 == (-3.4598062306100013d));
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl1.setDistribution(tDistribution77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double81 = tTestImpl1.t(0.01613264369976175d, statisticalSummary80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl36 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl38.tTest((double) (short) 100, doubleArray47);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double[] doubleArray77 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double78 = tTestImpl57.t((double) '4', doubleArray77);
        double double79 = tTestImpl38.tTest((double) (short) 100, doubleArray77);
        double[] doubleArray86 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double87 = tTestImpl38.tTest(0.405429217622299d, doubleArray86);
        double double88 = tTestImpl36.t(3.8d, doubleArray86);
        double double89 = tTestImpl1.t(0.0d, doubleArray86);
        java.lang.Class<?> wildcardClass90 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.01613264369976175d + "'", double54 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.09656583816243881d) + "'", double78 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.07560555610353314d + "'", double79 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.1143321549278642d + "'", double87 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-10.500000000000002d) + "'", double88 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1.0000000000000002d) + "'", double89 == (-1.0000000000000002d));
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        double[] doubleArray74 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double75 = tTestImpl0.t((double) (short) 0, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl0.setDistribution(tDistribution76);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = tTestImpl0.tTest((double) 100, statisticalSummary81, (-0.5172120199559697d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.5172120199559697");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9566618438474437d + "'", double75 == 0.9566618438474437d);
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary27 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = tTestImpl1.tTest(statisticalSummary27, statisticalSummary28, 0.9302024075262618d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9302024075262618");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary51 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double52 = tTestImpl0.tTest((-3.4598062306100013d), statisticalSummary51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        double[] doubleArray74 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double75 = tTestImpl0.t((double) (short) 0, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl0.setDistribution(tDistribution76);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double82 = tTestImpl0.t((-1.0000000000000002d), statisticalSummary81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9566618438474437d + "'", double75 == 0.9566618438474437d);
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary26 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double27 = tTestImpl0.t((double) 0, statisticalSummary26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl1.setDistribution(tDistribution22);
        java.lang.Class<?> wildcardClass24 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl0.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution26 = null;
        tTestImpl0.setDistribution(tDistribution26);
        double[] doubleArray29 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double30 = tTestImpl0.tTest(0.9302024075262618d, doubleArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = tTestImpl1.tTest(1.6198140498569726d, statisticalSummary28, 0.004213458414249471d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        java.lang.Class<?> wildcardClass61 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl0.t(1.6198140498569726d, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray13 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl9.tTest(doubleArray13, doubleArray26);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl9.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution31 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl32 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution31);
        double[] doubleArray38 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray43 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double44 = tTestImpl32.homoscedasticT(doubleArray38, doubleArray43);
        double[] doubleArray52 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double53 = tTestImpl32.t((double) '4', doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl9.t(doubleArray52, doubleArray66);
        double double69 = tTestImpl1.t(0.2806531524060034d, doubleArray52);
        double[] doubleArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = tTestImpl1.tTest((-2.2d), doubleArray71, (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2806531524060034d + "'", double28 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.405429217622299d) + "'", double44 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.09656583816243881d) + "'", double53 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.5172120199559697d + "'", double68 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2.2085058899383956d + "'", double69 == 2.2085058899383956d);
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution15 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl16 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution15);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl16.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl21.setDistribution(tDistribution22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl27 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl30 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution29);
        double[] doubleArray36 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray41 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double42 = tTestImpl30.homoscedasticT(doubleArray36, doubleArray41);
        double double43 = tTestImpl27.tTest((double) (short) 100, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double[] doubleArray66 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double67 = tTestImpl46.t((double) '4', doubleArray66);
        double double68 = tTestImpl27.tTest((double) (short) 100, doubleArray66);
        double[] doubleArray75 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double76 = tTestImpl27.tTest(0.405429217622299d, doubleArray75);
        double double77 = tTestImpl25.t(3.8d, doubleArray75);
        double double78 = tTestImpl21.t((double) (short) 1, doubleArray75);
        double double79 = tTestImpl16.t(0.9839224922440002d, doubleArray75);
        double double80 = tTestImpl1.t(1.0d, doubleArray75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl1.homoscedasticT(statisticalSummary81, statisticalSummary82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.405429217622299d) + "'", double42 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.01613264369976175d + "'", double43 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.09656583816243881d) + "'", double67 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.07560555610353314d + "'", double68 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.1143321549278642d + "'", double76 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-10.500000000000002d) + "'", double77 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-3.5d) + "'", double78 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-3.4598062306100013d) + "'", double79 == (-3.4598062306100013d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-3.5d) + "'", double80 == (-3.5d));
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution9 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution9);
        double[] doubleArray16 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray21 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double22 = tTestImpl10.homoscedasticT(doubleArray16, doubleArray21);
        double double23 = tTestImpl7.tTest((double) (short) 100, doubleArray16);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        double[] doubleArray46 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double47 = tTestImpl26.t((double) '4', doubleArray46);
        double double48 = tTestImpl7.tTest((double) (short) 100, doubleArray46);
        double[] doubleArray55 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double56 = tTestImpl7.tTest(0.405429217622299d, doubleArray55);
        double double57 = tTestImpl5.t(3.8d, doubleArray55);
        double double58 = tTestImpl1.t((double) (short) 1, doubleArray55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double61 = tTestImpl1.t(1.5d, statisticalSummary60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.405429217622299d) + "'", double22 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.01613264369976175d + "'", double23 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.09656583816243881d) + "'", double47 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.07560555610353314d + "'", double48 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.1143321549278642d + "'", double56 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-10.500000000000002d) + "'", double57 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-3.5d) + "'", double58 == (-3.5d));
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary20 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double22 = tTestImpl1.homoscedasticT(statisticalSummary20, statisticalSummary21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl1.setDistribution(tDistribution27);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = tTestImpl1.tTest(0.9839224922440002d, statisticalSummary30, (double) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl0.t(4.442799675467754d, statisticalSummary94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(statisticalSummary93, statisticalSummary94, (-10.500000000000002d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -10.500000000000002");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = tTestImpl0.tTest(0.9839224922440002d, statisticalSummary22, 0.12673187601587688d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl21.t((double) (short) 10, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl60.tTest((double) (short) 100, doubleArray69);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl21.pairedT(doubleArray69, doubleArray84);
        double double92 = tTestImpl0.t((double) (short) 0, doubleArray84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest((double) (-1.0f), statisticalSummary94, 1.4421373443400007d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.4421373443400007");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 3.8d + "'", double59 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.01613264369976175d + "'", double76 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0377339947605275d + "'", double92 == 1.0377339947605275d);
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        tTestImpl24.setDistribution(tDistribution37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray44 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl40.tTest(doubleArray44, doubleArray57);
        double double60 = tTestImpl24.t(10.0d, doubleArray44);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl24.t(100.0d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl1.homoscedasticT(doubleArray74, doubleArray84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl1.t(0.07560555610353314d, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.2806531524060034d + "'", double59 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 3.8d + "'", double60 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-2.8418588844347075d) + "'", double76 == (-2.8418588844347075d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.405429217622299d + "'", double91 == 0.405429217622299d);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((double) 10L, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        tTestImpl1.setDistribution(tDistribution74);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double78 = tTestImpl1.tTest(statisticalSummary76, statisticalSummary77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.5339796283719219d + "'", double73 == 0.5339796283719219d);
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((double) 10L, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        tTestImpl1.setDistribution(tDistribution74);
        java.lang.Class<?> wildcardClass76 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.5339796283719219d + "'", double73 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double[] doubleArray90 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double91 = tTestImpl70.t((double) '4', doubleArray90);
        double double92 = tTestImpl0.t(doubleArray66, doubleArray90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(statisticalSummary93, statisticalSummary94, 4.656123925628981d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.656123925628981");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-0.09656583816243881d) + "'", double91 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.5172120199559697d) + "'", double92 == (-0.5172120199559697d));
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl0.setDistribution(tDistribution24);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray30 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution31 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl32 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution31);
        double[] doubleArray38 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray43 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double44 = tTestImpl32.homoscedasticT(doubleArray38, doubleArray43);
        double double45 = tTestImpl26.tTest(doubleArray30, doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = tTestImpl0.pairedTTest(doubleArray43, doubleArray58, (double) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.405429217622299d) + "'", double44 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.2806531524060034d + "'", double45 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl1.t(0.35800486798369846d, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        double[] doubleArray26 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray31 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double32 = tTestImpl20.homoscedasticT(doubleArray26, doubleArray31);
        double double33 = tTestImpl17.tTest((double) (short) 100, doubleArray26);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        double double55 = tTestImpl17.tTest(0.9755634976417653d, doubleArray52);
        double[] doubleArray56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = tTestImpl0.homoscedasticT(doubleArray52, doubleArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.405429217622299d) + "'", double32 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.01613264369976175d + "'", double33 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.2674771174879971d + "'", double55 == 0.2674771174879971d);
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        tTestImpl6.setDistribution(tDistribution7);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl12 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl12.tTest((double) (short) 100, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        double[] doubleArray51 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double52 = tTestImpl31.t((double) '4', doubleArray51);
        double double53 = tTestImpl12.tTest((double) (short) 100, doubleArray51);
        double[] doubleArray60 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double61 = tTestImpl12.tTest(0.405429217622299d, doubleArray60);
        double double62 = tTestImpl10.t(3.8d, doubleArray60);
        double double63 = tTestImpl6.t((double) (short) 1, doubleArray60);
        double double64 = tTestImpl1.t(0.9839224922440002d, doubleArray60);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double67 = tTestImpl1.homoscedasticTTest(statisticalSummary65, statisticalSummary66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.01613264369976175d + "'", double28 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.09656583816243881d) + "'", double52 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.07560555610353314d + "'", double53 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.1143321549278642d + "'", double61 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-10.500000000000002d) + "'", double62 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-3.5d) + "'", double63 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-3.4598062306100013d) + "'", double64 == (-3.4598062306100013d));
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        tTestImpl39.setDistribution(tDistribution40);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl39.homoscedasticT(doubleArray54, doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl1.homoscedasticT(doubleArray60, doubleArray84);
        java.lang.Class<?> wildcardClass92 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1.1115227041167497d) + "'", double76 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.6198140498569726d + "'", double91 == 1.6198140498569726d);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        org.apache.commons.math.distribution.TDistribution tDistribution72 = null;
        tTestImpl0.setDistribution(tDistribution72);
        java.lang.Class<?> wildcardClass74 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray58 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl54.tTest(doubleArray58, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl41.t(doubleArray71, doubleArray86);
        double double89 = tTestImpl1.t((double) 0.0f, doubleArray86);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl1.tTest(1.3404872472421194d, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.2806531524060034d + "'", double73 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.3997215400947067d + "'", double89 == 1.3997215400947067d);
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        java.lang.Class<?> wildcardClass74 = doubleArray65.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        tTestImpl1.setDistribution(tDistribution8);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary10 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary11 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double12 = tTestImpl1.t(statisticalSummary10, statisticalSummary11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = tTestImpl0.tTest(statisticalSummary80, statisticalSummary81, 0.07560555610353314d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary72 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = tTestImpl0.tTest(statisticalSummary72, statisticalSummary73, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        java.lang.Class<?> wildcardClass92 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl1.t((double) 0, doubleArray77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl1.tTest((double) ' ', statisticalSummary82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.3997215400947067d + "'", double80 == 1.3997215400947067d);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl1.t(100.0d, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl1.setDistribution(tDistribution54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        tTestImpl1.setDistribution(tDistribution56);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double60 = tTestImpl1.t(statisticalSummary58, statisticalSummary59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-2.8418588844347075d) + "'", double53 == (-2.8418588844347075d));
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = tTestImpl1.tTest((double) (byte) -1, statisticalSummary56, (double) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl26.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        tTestImpl31.setDistribution(tDistribution32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl37.tTest((double) (short) 100, doubleArray46);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double[] doubleArray76 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double77 = tTestImpl56.t((double) '4', doubleArray76);
        double double78 = tTestImpl37.tTest((double) (short) 100, doubleArray76);
        double[] doubleArray85 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double86 = tTestImpl37.tTest(0.405429217622299d, doubleArray85);
        double double87 = tTestImpl35.t(3.8d, doubleArray85);
        double double88 = tTestImpl31.t((double) (short) 1, doubleArray85);
        double double89 = tTestImpl26.t(0.9839224922440002d, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean91 = tTestImpl0.tTest((double) 100, doubleArray85, 3.8d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 3.8");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.01613264369976175d + "'", double53 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.09656583816243881d) + "'", double77 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.07560555610353314d + "'", double78 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.1143321549278642d + "'", double86 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-10.500000000000002d) + "'", double87 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-3.5d) + "'", double88 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-3.4598062306100013d) + "'", double89 == (-3.4598062306100013d));
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary67 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean69 = tTestImpl0.tTest((double) (byte) 10, statisticalSummary67, (-3.4598062306100013d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -3.4598062306100013");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary47 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double48 = tTestImpl0.t((-0.405429217622299d), statisticalSummary47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double double41 = tTestImpl25.tTest((double) (short) 100, doubleArray34);
        double double42 = tTestImpl0.t((double) (byte) 1, doubleArray34);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double45 = tTestImpl0.homoscedasticTTest(statisticalSummary43, statisticalSummary44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.01613264369976175d + "'", double41 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.987358558121667d + "'", double42 == 0.987358558121667d);
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl1.setDistribution(tDistribution94);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = tTestImpl1.tTest(statisticalSummary96, statisticalSummary97, 0.9566618438474437d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9566618438474437");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        double double69 = tTestImpl0.t(1.3965146696271626d, doubleArray66);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        tTestImpl0.setDistribution(tDistribution70);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = tTestImpl0.tTest((double) 0, statisticalSummary73, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.3404872472421194d + "'", double69 == 1.3404872472421194d);
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary18 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double19 = tTestImpl0.tTest(0.37390096630005876d, statisticalSummary18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl0.tTest((double) (short) -1, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        double double69 = tTestImpl0.t(1.3965146696271626d, doubleArray66);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl0.t((double) '#', statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.3404872472421194d + "'", double69 == 1.3404872472421194d);
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = tTestImpl1.tTest((-1.0000000000000002d), statisticalSummary60, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary50 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary51 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = tTestImpl0.tTest(statisticalSummary50, statisticalSummary51, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        double double69 = tTestImpl0.t(1.3965146696271626d, doubleArray66);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution70);
        double[] doubleArray77 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray82 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double83 = tTestImpl71.homoscedasticT(doubleArray77, doubleArray82);
        double[] doubleArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = tTestImpl0.tTest(doubleArray82, doubleArray84, (double) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 35.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.3404872472421194d + "'", double69 == 1.3404872472421194d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl0.setDistribution(tDistribution68);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        tTestImpl0.setDistribution(tDistribution70);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary72 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double74 = tTestImpl0.homoscedasticTTest(statisticalSummary72, statisticalSummary73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        double[] doubleArray68 = new double[] { 0.405429217622299d, (byte) -1, 10.0f, 0.5172120199559697d };
        double double69 = tTestImpl1.t(1.0377339947605275d, doubleArray68);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = tTestImpl1.tTest((double) (short) -1, statisticalSummary71, 0.004213458414249471d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.405429217622299, -1.0, 10.0, 0.5172120199559697]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.5703029263335007d + "'", double69 == 0.5703029263335007d);
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl3.setDistribution(tDistribution16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        double double39 = tTestImpl3.t(10.0d, doubleArray23);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl69.tTest((double) (short) 100, doubleArray78);
        double double86 = tTestImpl55.t((double) 10.0f, doubleArray78);
        double double87 = tTestImpl3.homoscedasticT(doubleArray52, doubleArray78);
        double double88 = tTestImpl0.t((double) 100.0f, doubleArray78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double91 = tTestImpl0.tTest((-0.5172120199559697d), statisticalSummary90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 3.8d + "'", double39 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.01613264369976175d + "'", double85 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.5339796283719219d + "'", double86 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.405429217622299d + "'", double87 == 0.405429217622299d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-3.9998096691255283d) + "'", double88 == (-3.9998096691255283d));
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl55.tTest((double) (short) 100, doubleArray64);
        double double72 = tTestImpl41.t((double) 10.0f, doubleArray64);
        boolean boolean74 = tTestImpl0.tTest(0.12673187601587688d, doubleArray64, 0.01613264369976175d);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double79 = tTestImpl0.t(1.5d, statisticalSummary78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.01613264369976175d + "'", double71 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5339796283719219d + "'", double72 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution9 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution9);
        double[] doubleArray16 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray21 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double22 = tTestImpl10.homoscedasticT(doubleArray16, doubleArray21);
        double double23 = tTestImpl7.tTest((double) (short) 100, doubleArray16);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        double[] doubleArray46 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double47 = tTestImpl26.t((double) '4', doubleArray46);
        double double48 = tTestImpl7.tTest((double) (short) 100, doubleArray46);
        double[] doubleArray55 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double56 = tTestImpl7.tTest(0.405429217622299d, doubleArray55);
        double double57 = tTestImpl5.t(3.8d, doubleArray55);
        double double58 = tTestImpl1.t((double) (short) 1, doubleArray55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double61 = tTestImpl1.tTest(statisticalSummary59, statisticalSummary60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.405429217622299d) + "'", double22 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.01613264369976175d + "'", double23 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.09656583816243881d) + "'", double47 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.07560555610353314d + "'", double48 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.1143321549278642d + "'", double56 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-10.500000000000002d) + "'", double57 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-3.5d) + "'", double58 == (-3.5d));
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl1.setDistribution(tDistribution27);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = tTestImpl1.tTest((-0.4023317120818342d), statisticalSummary30, 0.9566618438474437d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9566618438474437");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = tTestImpl0.tTest(1.3385956498818976d, statisticalSummary18, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl4.tTest((double) (short) 100, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        double double45 = tTestImpl4.tTest((double) (short) 100, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl46.tTest((double) (short) 100, doubleArray55);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl46.tTest((double) (short) 100, doubleArray85);
        double[] doubleArray93 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double94 = tTestImpl4.homoscedasticTTest(doubleArray85, doubleArray93);
        double double95 = tTestImpl0.t((double) 100, doubleArray93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl0.t((double) (short) -1, statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.01613264369976175d + "'", double20 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.07560555610353314d + "'", double45 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.01613264369976175d + "'", double62 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.07560555610353314d + "'", double87 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.12673187601587688d + "'", double94 == 0.12673187601587688d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-14.881283513379177d) + "'", double95 == (-14.881283513379177d));
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = tTestImpl1.tTest((double) (short) 100, statisticalSummary91, 0.5339796283719219d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.5339796283719219");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray46 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl42.tTest(doubleArray46, doubleArray59);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl29.t(doubleArray59, doubleArray74);
        double double77 = tTestImpl26.t((double) 10.0f, doubleArray74);
        double double78 = tTestImpl0.t(0.987358558121667d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl0.setDistribution(tDistribution79);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl0.tTest((double) 0L, statisticalSummary82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2806531524060034d + "'", double61 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.357841932773502d + "'", double78 == 1.357841932773502d);
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = tTestImpl0.tTest((-3.4598062306100013d), statisticalSummary24, 3.8d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 3.8");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl1.setDistribution(tDistribution94);
        java.lang.Class<?> wildcardClass96 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl1.setDistribution(tDistribution77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = tTestImpl1.tTest(statisticalSummary79, statisticalSummary80, 4.442799675467754d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.442799675467754");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary49 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double50 = tTestImpl0.t((double) (-1L), statisticalSummary49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl3.setDistribution(tDistribution16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        double double39 = tTestImpl3.t(10.0d, doubleArray23);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl69.tTest((double) (short) 100, doubleArray78);
        double double86 = tTestImpl55.t((double) 10.0f, doubleArray78);
        double double87 = tTestImpl3.homoscedasticT(doubleArray52, doubleArray78);
        double double88 = tTestImpl0.t((double) 100.0f, doubleArray78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean92 = tTestImpl0.tTest(1.088109431399388d, statisticalSummary90, 0.2806531524060034d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 3.8d + "'", double39 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.01613264369976175d + "'", double85 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.5339796283719219d + "'", double86 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.405429217622299d + "'", double87 == 0.405429217622299d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-3.9998096691255283d) + "'", double88 == (-3.9998096691255283d));
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl1.setDistribution(tDistribution27);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary29 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = tTestImpl1.tTest(statisticalSummary29, statisticalSummary30, 0.9839224922440002d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9839224922440002");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double59 = tTestImpl0.t((double) (-1.0f), statisticalSummary58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        double[] doubleArray74 = new double[] { 0.405429217622299d, 0.01613264369976175d };
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl75.setDistribution(tDistribution76);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl75.setDistribution(tDistribution78);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl75.t(3.8d, doubleArray88);
        double double96 = tTestImpl0.tTest(doubleArray74, doubleArray88);
        org.apache.commons.math.distribution.TDistribution tDistribution97 = null;
        tTestImpl0.setDistribution(tDistribution97);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.405429217622299, 0.01613264369976175]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.8463073355328574d + "'", double95 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.36242697487793474d + "'", double96 == 0.36242697487793474d);
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl1.t((double) 0, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl1.setDistribution(tDistribution81);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary84 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double85 = tTestImpl1.t(0.0d, statisticalSummary84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.3997215400947067d + "'", double80 == 1.3997215400947067d);
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray12 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution13 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution13);
        double[] doubleArray20 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray25 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double26 = tTestImpl14.homoscedasticT(doubleArray20, doubleArray25);
        double double27 = tTestImpl8.tTest(doubleArray12, doubleArray25);
        double double28 = tTestImpl0.t((double) 0L, doubleArray12);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary29 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary30 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double31 = tTestImpl0.tTest(statisticalSummary29, statisticalSummary30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.405429217622299d) + "'", double26 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2806531524060034d + "'", double27 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4.466666666666667d + "'", double28 == 4.466666666666667d);
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.tTest(0.9755634976417653d, doubleArray35);
        java.lang.Class<?> wildcardClass39 = doubleArray35.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2674771174879971d + "'", double38 == 0.2674771174879971d);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary20 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double22 = tTestImpl1.homoscedasticTTest(statisticalSummary20, statisticalSummary21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        java.lang.Class<?> wildcardClass50 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray45 = new double[] { 100.0f, 1.3404872472421194d, 0.15639940166959065d };
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution80 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl81 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution80);
        double[] doubleArray87 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray92 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double93 = tTestImpl81.homoscedasticT(doubleArray87, doubleArray92);
        double double94 = tTestImpl47.t(doubleArray77, doubleArray92);
        double double95 = tTestImpl0.homoscedasticTTest(doubleArray45, doubleArray92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = tTestImpl0.tTest((double) (byte) 100, statisticalSummary97, (double) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 35.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.3404872472421194, 0.15639940166959065]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-0.405429217622299d) + "'", double93 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.9839224922440002d + "'", double95 == 0.9839224922440002d);
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double59 = tTestImpl1.tTest(1.357841932773502d, statisticalSummary58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = tTestImpl0.tTest(0.9302024075262618d, statisticalSummary79, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary7 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = tTestImpl0.tTest(statisticalSummary7, statisticalSummary8, (-3.9998096691255283d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -3.9998096691255283");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl5.tTest((double) (short) 100, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl5.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl5.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl28.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray50 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        double[] doubleArray58 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray63 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double64 = tTestImpl52.homoscedasticT(doubleArray58, doubleArray63);
        double double65 = tTestImpl46.tTest(doubleArray50, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl33.t(doubleArray63, doubleArray78);
        double double81 = tTestImpl28.t(0.07560555610353314d, doubleArray63);
        double double82 = tTestImpl5.t((double) (short) 10, doubleArray63);
        double double83 = tTestImpl1.t((-0.975807309953049d), doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl1.setDistribution(tDistribution84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl1.tTest(statisticalSummary86, statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.01613264369976175d + "'", double21 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.405429217622299d) + "'", double64 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.2806531524060034d + "'", double65 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.3965146696271626d + "'", double81 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.9755634976417653d + "'", double82 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.4411111919348023d + "'", double83 == 1.4411111919348023d);
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(statisticalSummary93, statisticalSummary94, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        double[] doubleArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl0.t((-14.881283513379177d), doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl0.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl0.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl0.tTest(1.3965146696271626d, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.distribution.TDistribution tDistribution80 = null;
        tTestImpl0.setDistribution(tDistribution80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary83 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean85 = tTestImpl0.tTest((-1.0105336460356238d), statisticalSummary83, 0.01613264369976175d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl0.setDistribution(tDistribution68);
        java.lang.Class<?> wildcardClass70 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl0.t((double) 100, statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        double double42 = tTestImpl26.tTest((double) (short) 100, doubleArray35);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl26.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution80 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl81 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution80);
        double[] doubleArray87 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray92 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double93 = tTestImpl81.homoscedasticT(doubleArray87, doubleArray92);
        double double94 = tTestImpl47.t(doubleArray77, doubleArray92);
        double double95 = tTestImpl26.t(1.3965146696271626d, doubleArray92);
        double double96 = tTestImpl1.t((double) 0.0f, doubleArray92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary98 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double99 = tTestImpl1.tTest((double) 0, statisticalSummary98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.01613264369976175d + "'", double42 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-0.405429217622299d) + "'", double93 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 1.3404872472421194d + "'", double95 == 1.3404872472421194d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 1.3997215400947067d + "'", double96 == 1.3997215400947067d);
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double59 = tTestImpl1.tTest((-3.5d), statisticalSummary58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        double[] doubleArray74 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double75 = tTestImpl0.t((double) (short) 0, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl0.setDistribution(tDistribution76);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double82 = tTestImpl0.t((double) (byte) 1, statisticalSummary81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9566618438474437d + "'", double75 == 0.9566618438474437d);
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        double[] doubleArray74 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double75 = tTestImpl0.t((double) (short) 0, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl0.setDistribution(tDistribution76);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = tTestImpl0.tTest(4.442799675467754d, statisticalSummary81, 4.656123925628981d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.656123925628981");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9566618438474437d + "'", double75 == 0.9566618438474437d);
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl0.setDistribution(tDistribution25);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary27 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary28 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double29 = tTestImpl0.homoscedasticT(statisticalSummary27, statisticalSummary28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary16 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = tTestImpl1.tTest(statisticalSummary16, statisticalSummary17, (-0.975807309953049d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.975807309953049");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = tTestImpl1.t(0.15639940166959065d, statisticalSummary56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl0.tTest((-0.4023317120818342d), statisticalSummary92, 4.466666666666667d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.466666666666667");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl65.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl65.setDistribution(tDistribution68);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl65.t(3.8d, doubleArray78);
        double double86 = tTestImpl0.t((double) 10L, doubleArray78);
        org.apache.commons.math.distribution.TDistribution tDistribution87 = null;
        tTestImpl0.setDistribution(tDistribution87);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double91 = tTestImpl0.t(100.0d, statisticalSummary90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.8463073355328574d + "'", double85 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.5339796283719219d + "'", double86 == 0.5339796283719219d);
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution35 = null;
        tTestImpl22.setDistribution(tDistribution35);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray42 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl38.tTest(doubleArray42, doubleArray55);
        double double58 = tTestImpl22.t(10.0d, doubleArray42);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double double74 = tTestImpl22.t(100.0d, doubleArray72);
        double double75 = tTestImpl0.t((double) 0L, doubleArray72);
        java.lang.Class<?> wildcardClass76 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.2806531524060034d + "'", double57 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 3.8d + "'", double58 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-2.8418588844347075d) + "'", double74 == (-2.8418588844347075d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.3997215400947067d + "'", double75 == 1.3997215400947067d);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary22 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double23 = tTestImpl0.tTest(0.3793626154059051d, statisticalSummary22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl0.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl0.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl0.tTest(0.35800486798369846d, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        double[] doubleArray43 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray48 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double49 = tTestImpl37.homoscedasticT(doubleArray43, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution50);
        double[] doubleArray57 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray62 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double63 = tTestImpl51.homoscedasticT(doubleArray57, doubleArray62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl51.setDistribution(tDistribution64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray71 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution72 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl73 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution72);
        double[] doubleArray79 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray84 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double85 = tTestImpl73.homoscedasticT(doubleArray79, doubleArray84);
        double double86 = tTestImpl67.tTest(doubleArray71, doubleArray84);
        double double87 = tTestImpl51.t(10.0d, doubleArray71);
        double double88 = tTestImpl0.tTest(doubleArray48, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl0.tTest(statisticalSummary91, statisticalSummary92, 0.37390096630005876d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.405429217622299d) + "'", double49 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.405429217622299d) + "'", double63 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.405429217622299d) + "'", double85 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.2806531524060034d + "'", double86 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 3.8d + "'", double87 == 3.8d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        double[] doubleArray68 = new double[] { 0.405429217622299d, (byte) -1, 10.0f, 0.5172120199559697d };
        double double69 = tTestImpl1.t(1.0377339947605275d, doubleArray68);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        tTestImpl1.setDistribution(tDistribution70);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double74 = tTestImpl1.t((double) (short) 1, statisticalSummary73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.405429217622299, -1.0, 10.0, 0.5172120199559697]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.5703029263335007d + "'", double69 == 0.5703029263335007d);
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl22.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl22.homoscedasticT(doubleArray37, doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl22.t((-0.975807309953049d), doubleArray73);
        double double76 = tTestImpl1.t(0.0d, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double79 = tTestImpl1.tTest(statisticalSummary77, statisticalSummary78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.1115227041167497d) + "'", double59 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.4411111919348023d + "'", double75 == 1.4411111919348023d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.3997215400947067d + "'", double76 == 1.3997215400947067d);
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary7 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double8 = tTestImpl1.t(100.0d, statisticalSummary7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = tTestImpl0.t((double) (byte) 10, statisticalSummary56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl1.setDistribution(tDistribution22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double26 = tTestImpl1.homoscedasticT(statisticalSummary24, statisticalSummary25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray18 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        double[] doubleArray26 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray31 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double32 = tTestImpl20.homoscedasticT(doubleArray26, doubleArray31);
        double double33 = tTestImpl14.tTest(doubleArray18, doubleArray31);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        double double48 = tTestImpl1.t(doubleArray31, doubleArray46);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        tTestImpl1.setDistribution(tDistribution49);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary52 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double53 = tTestImpl1.t((-14.881283513379177d), statisticalSummary52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.405429217622299d) + "'", double32 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.2806531524060034d + "'", double33 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary49 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double50 = tTestImpl0.t((double) (byte) -1, statisticalSummary49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        tTestImpl6.setDistribution(tDistribution7);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl12 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl12.tTest((double) (short) 100, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        double[] doubleArray51 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double52 = tTestImpl31.t((double) '4', doubleArray51);
        double double53 = tTestImpl12.tTest((double) (short) 100, doubleArray51);
        double[] doubleArray60 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double61 = tTestImpl12.tTest(0.405429217622299d, doubleArray60);
        double double62 = tTestImpl10.t(3.8d, doubleArray60);
        double double63 = tTestImpl6.t((double) (short) 1, doubleArray60);
        double double64 = tTestImpl1.t(0.9839224922440002d, doubleArray60);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl66.tTest((double) (short) 100, doubleArray75);
        double double83 = tTestImpl1.t((double) (-1.0f), doubleArray75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl1.tTest((-3.4598062306100013d), statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.01613264369976175d + "'", double28 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.09656583816243881d) + "'", double52 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.07560555610353314d + "'", double53 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.1143321549278642d + "'", double61 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-10.500000000000002d) + "'", double62 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-3.5d) + "'", double63 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-3.4598062306100013d) + "'", double64 == (-3.4598062306100013d));
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.01613264369976175d + "'", double82 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.088109431399388d + "'", double83 == 1.088109431399388d);
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = tTestImpl0.tTest(statisticalSummary78, statisticalSummary79, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl3.setDistribution(tDistribution16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        double double39 = tTestImpl3.t(10.0d, doubleArray23);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl69.tTest((double) (short) 100, doubleArray78);
        double double86 = tTestImpl55.t((double) 10.0f, doubleArray78);
        double double87 = tTestImpl3.homoscedasticT(doubleArray52, doubleArray78);
        double double88 = tTestImpl0.t((double) 100.0f, doubleArray78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean92 = tTestImpl0.tTest((double) '#', statisticalSummary90, (-1.0000000000000002d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0000000000000002");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 3.8d + "'", double39 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.01613264369976175d + "'", double85 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.5339796283719219d + "'", double86 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.405429217622299d + "'", double87 == 0.405429217622299d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-3.9998096691255283d) + "'", double88 == (-3.9998096691255283d));
    }

    @Test
    public void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2228");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray13 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl9.tTest(doubleArray13, doubleArray26);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray48 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl44.tTest(doubleArray48, doubleArray61);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double double78 = tTestImpl31.t(doubleArray61, doubleArray76);
        boolean boolean80 = tTestImpl9.tTest((double) (short) 0, doubleArray61, Double.NaN);
        double double81 = tTestImpl1.t((double) (short) 100, doubleArray61);
        org.apache.commons.math.distribution.TDistribution tDistribution82 = null;
        tTestImpl1.setDistribution(tDistribution82);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl1.tTest(Double.NaN, statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2806531524060034d + "'", double28 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.2806531524060034d + "'", double63 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-2.8418588844347075d) + "'", double81 == (-2.8418588844347075d));
    }

    @Test
    public void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2229");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl26.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl30 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution29);
        double[] doubleArray36 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray41 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double42 = tTestImpl30.homoscedasticT(doubleArray36, doubleArray41);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray47 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl43.tTest(doubleArray47, doubleArray60);
        double double63 = tTestImpl26.homoscedasticT(doubleArray41, doubleArray47);
        double double64 = tTestImpl0.t((double) (byte) 100, doubleArray47);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = tTestImpl0.tTest((double) (byte) 0, statisticalSummary66, 1.5d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.5");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.405429217622299d) + "'", double42 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.2806531524060034d + "'", double62 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.1115227041167497d) + "'", double63 == (-1.1115227041167497d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-2.2d) + "'", double64 == (-2.2d));
    }

    @Test
    public void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2230");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray45 = new double[] { 100.0f, 1.3404872472421194d, 0.15639940166959065d };
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution80 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl81 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution80);
        double[] doubleArray87 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray92 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double93 = tTestImpl81.homoscedasticT(doubleArray87, doubleArray92);
        double double94 = tTestImpl47.t(doubleArray77, doubleArray92);
        double double95 = tTestImpl0.homoscedasticTTest(doubleArray45, doubleArray92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl0.t((double) '#', statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.3404872472421194, 0.15639940166959065]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-0.405429217622299d) + "'", double93 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.9839224922440002d + "'", double95 == 0.9839224922440002d);
    }

    @Test
    public void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2231");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        tTestImpl0.setDistribution(tDistribution7);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution11 = null;
        tTestImpl10.setDistribution(tDistribution11);
        org.apache.commons.math.distribution.TDistribution tDistribution13 = null;
        tTestImpl10.setDistribution(tDistribution13);
        org.apache.commons.math.distribution.TDistribution tDistribution15 = null;
        tTestImpl10.setDistribution(tDistribution15);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double double32 = tTestImpl10.t(1.4411111919348023d, doubleArray30);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = tTestImpl0.tTest((double) (short) 0, doubleArray30, (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.3385956498818976d + "'", double32 == 1.3385956498818976d);
    }

    @Test
    public void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2232");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl1.setDistribution(tDistribution38);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        tTestImpl1.setDistribution(tDistribution40);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary42 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double44 = tTestImpl1.tTest(statisticalSummary42, statisticalSummary43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
    }

    @Test
    public void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2233");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        double double69 = tTestImpl0.t(1.3965146696271626d, doubleArray66);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution70);
        double[] doubleArray77 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray82 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double83 = tTestImpl71.homoscedasticT(doubleArray77, doubleArray82);
        double[] doubleArray88 = new double[] { (-2.8418588844347075d), 0.9839224922440002d, (short) -1, 100L };
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = tTestImpl0.homoscedasticTTest(doubleArray77, doubleArray88, (-0.975807309953049d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.975807309953049");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.3404872472421194d + "'", double69 == 1.3404872472421194d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-2.8418588844347075, 0.9839224922440002, -1.0, 100.0]");
    }

    @Test
    public void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2234");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = tTestImpl0.tTest((-1.0d), doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2235");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray46 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl42.tTest(doubleArray46, doubleArray59);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl29.t(doubleArray59, doubleArray74);
        double double77 = tTestImpl26.t((double) 10.0f, doubleArray74);
        double double78 = tTestImpl0.t(0.987358558121667d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl0.setDistribution(tDistribution79);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = tTestImpl0.tTest(statisticalSummary81, statisticalSummary82, 0.01613264369976175d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2806531524060034d + "'", double61 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.357841932773502d + "'", double78 == 1.357841932773502d);
    }

    @Test
    public void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2236");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        tTestImpl0.setDistribution(tDistribution50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        tTestImpl0.setDistribution(tDistribution52);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary55 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double56 = tTestImpl0.tTest((double) 1.0f, statisticalSummary55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2237");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl1.t((double) 0, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl1.setDistribution(tDistribution81);
        org.apache.commons.math.distribution.TDistribution tDistribution83 = null;
        tTestImpl1.setDistribution(tDistribution83);
        java.lang.Class<?> wildcardClass85 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.3997215400947067d + "'", double80 == 1.3997215400947067d);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2238");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl55.tTest((double) (short) 100, doubleArray64);
        double double72 = tTestImpl41.t((double) 10.0f, doubleArray64);
        boolean boolean74 = tTestImpl0.tTest(0.12673187601587688d, doubleArray64, 0.01613264369976175d);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl0.setDistribution(tDistribution77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = tTestImpl0.tTest(statisticalSummary79, statisticalSummary80, 4.656123925628981d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.656123925628981");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.01613264369976175d + "'", double71 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5339796283719219d + "'", double72 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2239");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl5.tTest((double) (short) 100, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl5.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl5.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl28.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray50 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        double[] doubleArray58 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray63 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double64 = tTestImpl52.homoscedasticT(doubleArray58, doubleArray63);
        double double65 = tTestImpl46.tTest(doubleArray50, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl33.t(doubleArray63, doubleArray78);
        double double81 = tTestImpl28.t(0.07560555610353314d, doubleArray63);
        double double82 = tTestImpl5.t((double) (short) 10, doubleArray63);
        double double83 = tTestImpl1.t((-0.975807309953049d), doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl1.setDistribution(tDistribution84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl1.t(0.01613264369976175d, statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.01613264369976175d + "'", double21 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.405429217622299d) + "'", double64 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.2806531524060034d + "'", double65 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.3965146696271626d + "'", double81 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.9755634976417653d + "'", double82 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.4411111919348023d + "'", double83 == 1.4411111919348023d);
    }

    @Test
    public void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2240");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary55 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = tTestImpl1.homoscedasticT(statisticalSummary55, statisticalSummary56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
    }

    @Test
    public void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2241");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl0.setDistribution(tDistribution68);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl0.tTest((-10.500000000000002d), statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2242");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl0.setDistribution(tDistribution25);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary28 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double29 = tTestImpl0.t((-1.0105336460356238d), statisticalSummary28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2243");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl0.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution26 = null;
        tTestImpl0.setDistribution(tDistribution26);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary28 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary29 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double30 = tTestImpl0.tTest(statisticalSummary28, statisticalSummary29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2244");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        double[] doubleArray43 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray48 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double49 = tTestImpl37.homoscedasticT(doubleArray43, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution50);
        double[] doubleArray57 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray62 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double63 = tTestImpl51.homoscedasticT(doubleArray57, doubleArray62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl51.setDistribution(tDistribution64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray71 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution72 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl73 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution72);
        double[] doubleArray79 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray84 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double85 = tTestImpl73.homoscedasticT(doubleArray79, doubleArray84);
        double double86 = tTestImpl67.tTest(doubleArray71, doubleArray84);
        double double87 = tTestImpl51.t(10.0d, doubleArray71);
        double double88 = tTestImpl0.tTest(doubleArray48, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = tTestImpl0.t((-0.4023317120818342d), statisticalSummary92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.405429217622299d) + "'", double49 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.405429217622299d) + "'", double63 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.405429217622299d) + "'", double85 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.2806531524060034d + "'", double86 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 3.8d + "'", double87 == 3.8d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
    }

    @Test
    public void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2245");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        double[] doubleArray74 = new double[] { 0.405429217622299d, 0.01613264369976175d };
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl75.setDistribution(tDistribution76);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl75.setDistribution(tDistribution78);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl75.t(3.8d, doubleArray88);
        double double96 = tTestImpl0.tTest(doubleArray74, doubleArray88);
        java.lang.Class<?> wildcardClass97 = doubleArray74.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.405429217622299, 0.01613264369976175]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.8463073355328574d + "'", double95 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.36242697487793474d + "'", double96 == 0.36242697487793474d);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2246");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl1.t((double) 0, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl1.setDistribution(tDistribution81);
        org.apache.commons.math.distribution.TDistribution tDistribution83 = null;
        tTestImpl1.setDistribution(tDistribution83);
        org.apache.commons.math.distribution.TDistribution tDistribution85 = null;
        tTestImpl1.setDistribution(tDistribution85);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary88 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double89 = tTestImpl1.tTest(0.5339796283719219d, statisticalSummary88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.3997215400947067d + "'", double80 == 1.3997215400947067d);
    }

    @Test
    public void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2247");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double[] doubleArray90 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double91 = tTestImpl70.t((double) '4', doubleArray90);
        double double92 = tTestImpl0.t(doubleArray66, doubleArray90);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double97 = tTestImpl0.homoscedasticTTest(statisticalSummary95, statisticalSummary96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-0.09656583816243881d) + "'", double91 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.5172120199559697d) + "'", double92 == (-0.5172120199559697d));
    }

    @Test
    public void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2248");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        tTestImpl51.setDistribution(tDistribution52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl51.setDistribution(tDistribution54);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl51.t(3.8d, doubleArray64);
        double double72 = tTestImpl0.t(1.088109431399388d, doubleArray64);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary74 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean76 = tTestImpl0.tTest(0.0d, statisticalSummary74, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.8463073355328574d + "'", double71 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.982920007042921d + "'", double72 == 0.982920007042921d);
    }

    @Test
    public void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2249");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double97 = tTestImpl0.t((double) 0L, statisticalSummary96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
    }

    @Test
    public void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2250");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double26 = tTestImpl0.tTest(statisticalSummary24, statisticalSummary25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2251");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double66 = tTestImpl0.tTest((double) ' ', statisticalSummary65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2252");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl1.t((double) 0, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl1.setDistribution(tDistribution81);
        org.apache.commons.math.distribution.TDistribution tDistribution83 = null;
        tTestImpl1.setDistribution(tDistribution83);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double87 = tTestImpl1.t(4.394126037906707d, statisticalSummary86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.3997215400947067d + "'", double80 == 1.3997215400947067d);
    }

    @Test
    public void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2253");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        double[] doubleArray73 = new double[] {};
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = tTestImpl0.tTest((-2.2d), doubleArray73, 0.5172120199559697d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.5172120199559697");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
    }

    @Test
    public void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2254");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = tTestImpl1.tTest(1.0116792134203785d, statisticalSummary39, 0.8463073355328574d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.8463073355328574");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
    }

    @Test
    public void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2255");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        double double69 = tTestImpl0.t(1.3965146696271626d, doubleArray66);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        tTestImpl0.setDistribution(tDistribution70);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double74 = tTestImpl0.t(0.0d, statisticalSummary73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.3404872472421194d + "'", double69 == 1.3404872472421194d);
    }

    @Test
    public void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2256");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        double double69 = tTestImpl0.t(1.3965146696271626d, doubleArray66);
        java.lang.Class<?> wildcardClass70 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.3404872472421194d + "'", double69 == 1.3404872472421194d);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2257");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl0.setDistribution(tDistribution77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double81 = tTestImpl0.homoscedasticTTest(statisticalSummary79, statisticalSummary80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2258");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary84 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = tTestImpl0.tTest(statisticalSummary84, statisticalSummary85, (double) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2259");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary23 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = tTestImpl0.tTest(statisticalSummary23, statisticalSummary24, 0.1143321549278642d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2260");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl0.setDistribution(tDistribution94);
        org.apache.commons.math.distribution.TDistribution tDistribution96 = null;
        tTestImpl0.setDistribution(tDistribution96);
        java.lang.Class<?> wildcardClass98 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2261");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl1.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl1.setDistribution(tDistribution41);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean46 = tTestImpl1.tTest(statisticalSummary43, statisticalSummary44, 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
    }

    @Test
    public void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2262");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl0.t(doubleArray43, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary63 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double64 = tTestImpl0.tTest(1.4421373443400007d, statisticalSummary63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.5172120199559697d + "'", double59 == 0.5172120199559697d);
    }

    @Test
    public void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2263");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.distribution.TDistribution tDistribution80 = null;
        tTestImpl0.setDistribution(tDistribution80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary83 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean85 = tTestImpl0.tTest(1.357841932773502d, statisticalSummary83, 0.2674771174879971d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2264");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray46 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl42.tTest(doubleArray46, doubleArray59);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl29.t(doubleArray59, doubleArray74);
        double double77 = tTestImpl26.t((double) 10.0f, doubleArray74);
        double double78 = tTestImpl0.t(0.987358558121667d, doubleArray74);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = tTestImpl0.tTest(statisticalSummary79, statisticalSummary80, 0.07560555610353314d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2806531524060034d + "'", double61 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.357841932773502d + "'", double78 == 1.357841932773502d);
    }

    @Test
    public void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2265");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl0.t(doubleArray43, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray69 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution70);
        double[] doubleArray77 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray82 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double83 = tTestImpl71.homoscedasticT(doubleArray77, doubleArray82);
        double double84 = tTestImpl65.tTest(doubleArray69, doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            double double85 = tTestImpl0.tTest((double) 1, doubleArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.5172120199559697d + "'", double59 == 0.5172120199559697d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.2806531524060034d + "'", double84 == 0.2806531524060034d);
    }

    @Test
    public void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2266");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary4 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = tTestImpl1.tTest(statisticalSummary4, statisticalSummary5, 0.9755634976417653d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9755634976417653");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2267");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        double[] doubleArray74 = new double[] { 0.405429217622299d, 0.01613264369976175d };
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl75.setDistribution(tDistribution76);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl75.setDistribution(tDistribution78);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl75.t(3.8d, doubleArray88);
        double double96 = tTestImpl0.tTest(doubleArray74, doubleArray88);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary98 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double99 = tTestImpl0.t(statisticalSummary97, statisticalSummary98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.405429217622299, 0.01613264369976175]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.8463073355328574d + "'", double95 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.36242697487793474d + "'", double96 == 0.36242697487793474d);
    }

    @Test
    public void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2268");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary50 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary51 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = tTestImpl0.tTest(statisticalSummary50, statisticalSummary51, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2269");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray18 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        double[] doubleArray26 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray31 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double32 = tTestImpl20.homoscedasticT(doubleArray26, doubleArray31);
        double double33 = tTestImpl14.tTest(doubleArray18, doubleArray31);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        double double48 = tTestImpl1.t(doubleArray31, doubleArray46);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        tTestImpl1.setDistribution(tDistribution49);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary52 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double53 = tTestImpl1.t(1.0116792134203785d, statisticalSummary52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.405429217622299d) + "'", double32 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.2806531524060034d + "'", double33 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2270");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl0.setDistribution(tDistribution24);
        java.lang.Class<?> wildcardClass26 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2271");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary22 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double23 = tTestImpl0.homoscedasticT(statisticalSummary21, statisticalSummary22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2272");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl0.tTest(1.357841932773502d, statisticalSummary92, (-0.405429217622299d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.405429217622299");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
    }

    @Test
    public void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2273");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        tTestImpl1.setDistribution(tDistribution74);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double78 = tTestImpl1.t(0.35800486798369846d, statisticalSummary77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
    }

    @Test
    public void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2274");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl1.tTest(1.0d, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2275");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl37.setDistribution(tDistribution38);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl43.tTest((double) (short) 100, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double[] doubleArray82 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double83 = tTestImpl62.t((double) '4', doubleArray82);
        double double84 = tTestImpl43.tTest((double) (short) 100, doubleArray82);
        double[] doubleArray91 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double92 = tTestImpl43.tTest(0.405429217622299d, doubleArray91);
        double double93 = tTestImpl41.t(3.8d, doubleArray91);
        double double94 = tTestImpl37.t((double) (short) 1, doubleArray91);
        double double95 = tTestImpl1.t(0.004213458414249471d, doubleArray91);
        java.lang.Class<?> wildcardClass96 = doubleArray91.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.01613264369976175d + "'", double59 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.09656583816243881d) + "'", double83 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.07560555610353314d + "'", double84 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.1143321549278642d + "'", double92 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-10.500000000000002d) + "'", double93 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-3.5d) + "'", double94 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-1.0105336460356238d) + "'", double95 == (-1.0105336460356238d));
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2276");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl1.t(100.0d, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl1.setDistribution(tDistribution54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        tTestImpl1.setDistribution(tDistribution56);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = tTestImpl1.tTest(statisticalSummary58, statisticalSummary59, 0.9566618438474437d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9566618438474437");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-2.8418588844347075d) + "'", double53 == (-2.8418588844347075d));
    }

    @Test
    public void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2277");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl1.homoscedasticT(statisticalSummary61, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2278");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray18 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        double[] doubleArray26 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray31 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double32 = tTestImpl20.homoscedasticT(doubleArray26, doubleArray31);
        double double33 = tTestImpl14.tTest(doubleArray18, doubleArray31);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        double double48 = tTestImpl1.t(doubleArray31, doubleArray46);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary50 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double51 = tTestImpl1.tTest((-2.8418588844347075d), statisticalSummary50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.405429217622299d) + "'", double32 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.2806531524060034d + "'", double33 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2279");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray13 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl9.tTest(doubleArray13, doubleArray26);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl9.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution31 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl32 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution31);
        double[] doubleArray38 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray43 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double44 = tTestImpl32.homoscedasticT(doubleArray38, doubleArray43);
        double[] doubleArray52 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double53 = tTestImpl32.t((double) '4', doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl9.t(doubleArray52, doubleArray66);
        double double69 = tTestImpl1.t(0.2806531524060034d, doubleArray52);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = tTestImpl1.tTest(0.982920007042921d, statisticalSummary71, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2806531524060034d + "'", double28 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.405429217622299d) + "'", double44 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.09656583816243881d) + "'", double53 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.5172120199559697d + "'", double68 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2.2085058899383956d + "'", double69 == 2.2085058899383956d);
    }

    @Test
    public void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2280");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl38.tTest((double) (short) 100, doubleArray47);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double[] doubleArray77 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double78 = tTestImpl57.t((double) '4', doubleArray77);
        double double79 = tTestImpl38.tTest((double) (short) 100, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl38.tTest((double) (byte) 1, doubleArray88);
        double double96 = tTestImpl24.t((double) 10L, doubleArray88);
        double double97 = tTestImpl0.t(0.0d, doubleArray88);
        java.lang.Class<?> wildcardClass98 = doubleArray88.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.01613264369976175d + "'", double54 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.09656583816243881d) + "'", double78 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.07560555610353314d + "'", double79 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.3793626154059051d + "'", double95 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.5339796283719219d + "'", double96 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 1.0377339947605275d + "'", double97 == 1.0377339947605275d);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2281");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl36 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl38.tTest((double) (short) 100, doubleArray47);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double[] doubleArray77 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double78 = tTestImpl57.t((double) '4', doubleArray77);
        double double79 = tTestImpl38.tTest((double) (short) 100, doubleArray77);
        double[] doubleArray86 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double87 = tTestImpl38.tTest(0.405429217622299d, doubleArray86);
        double double88 = tTestImpl36.t(3.8d, doubleArray86);
        double double89 = tTestImpl1.t(0.0d, doubleArray86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = tTestImpl1.tTest(0.5172120199559697d, statisticalSummary91, 2.2085058899383956d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 2.2085058899383956");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.01613264369976175d + "'", double54 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.09656583816243881d) + "'", double78 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.07560555610353314d + "'", double79 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.1143321549278642d + "'", double87 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-10.500000000000002d) + "'", double88 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1.0000000000000002d) + "'", double89 == (-1.0000000000000002d));
    }

    @Test
    public void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2282");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary53 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary54 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double55 = tTestImpl1.homoscedasticT(statisticalSummary53, statisticalSummary54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
    }

    @Test
    public void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2283");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl5.tTest((double) (short) 100, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl5.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl5.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl28.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray50 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        double[] doubleArray58 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray63 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double64 = tTestImpl52.homoscedasticT(doubleArray58, doubleArray63);
        double double65 = tTestImpl46.tTest(doubleArray50, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl33.t(doubleArray63, doubleArray78);
        double double81 = tTestImpl28.t(0.07560555610353314d, doubleArray63);
        double double82 = tTestImpl5.t((double) (short) 10, doubleArray63);
        double double83 = tTestImpl1.t((-0.975807309953049d), doubleArray63);
        java.lang.Class<?> wildcardClass84 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.01613264369976175d + "'", double21 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.405429217622299d) + "'", double64 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.2806531524060034d + "'", double65 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.3965146696271626d + "'", double81 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.9755634976417653d + "'", double82 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.4411111919348023d + "'", double83 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2284");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary63 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean66 = tTestImpl0.tTest(statisticalSummary63, statisticalSummary64, 1.384536475695448d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.384536475695448");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2285");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl1.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl1.setDistribution(tDistribution79);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl1.homoscedasticTTest(statisticalSummary81, statisticalSummary82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
    }

    @Test
    public void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2286");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        double double42 = tTestImpl26.tTest((double) (short) 100, doubleArray35);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray48 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl44.tTest(doubleArray48, doubleArray61);
        double double64 = tTestImpl26.t((double) (short) 10, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution67 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl68 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution67);
        double[] doubleArray74 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray79 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double80 = tTestImpl68.homoscedasticT(doubleArray74, doubleArray79);
        double double81 = tTestImpl65.tTest((double) (short) 100, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution82 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl83 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution82);
        double[] doubleArray89 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray94 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double95 = tTestImpl83.homoscedasticT(doubleArray89, doubleArray94);
        double double96 = tTestImpl26.pairedT(doubleArray74, doubleArray89);
        double double97 = tTestImpl0.t(1.7753257939094542d, doubleArray89);
        java.lang.Class<?> wildcardClass98 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.01613264369976175d + "'", double42 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.2806531524060034d + "'", double63 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 3.8d + "'", double64 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-0.405429217622299d) + "'", double80 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.01613264369976175d + "'", double81 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-0.405429217622299d) + "'", double95 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double96));
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.9483011827161071d + "'", double97 == 0.9483011827161071d);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2287");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = tTestImpl0.tTest((double) (byte) 1, statisticalSummary20, 1.088109431399388d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.088109431399388");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2288");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = tTestImpl0.tTest((-2.8418588844347075d), statisticalSummary92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
    }

    @Test
    public void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2289");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl0.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl0.setDistribution(tDistribution79);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = tTestImpl0.tTest((-0.09656583816243881d), statisticalSummary82, 4.394126037906707d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.394126037906707");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2290");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary33 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = tTestImpl1.tTest(statisticalSummary33, statisticalSummary34, (-0.405429217622299d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.405429217622299");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
    }

    @Test
    public void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2291");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        boolean boolean39 = tTestImpl0.tTest(1.357841932773502d, doubleArray22, 0.15639940166959065d);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary41 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean43 = tTestImpl0.tTest(0.12673187601587688d, statisticalSummary41, (-0.975807309953049d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.975807309953049");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2292");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl1.setDistribution(tDistribution94);
        org.apache.commons.math.distribution.TDistribution tDistribution96 = null;
        tTestImpl1.setDistribution(tDistribution96);
        org.apache.commons.math.distribution.TDistribution tDistribution98 = null;
        tTestImpl1.setDistribution(tDistribution98);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
    }

    @Test
    public void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2293");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution35 = null;
        tTestImpl22.setDistribution(tDistribution35);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray42 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl38.tTest(doubleArray42, doubleArray55);
        double double58 = tTestImpl22.t(10.0d, doubleArray42);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double double74 = tTestImpl22.t(100.0d, doubleArray72);
        double double75 = tTestImpl0.t((double) 0L, doubleArray72);
        double[] doubleArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double78 = tTestImpl0.tTest(1.3930877336894083d, doubleArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.2806531524060034d + "'", double57 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 3.8d + "'", double58 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-2.8418588844347075d) + "'", double74 == (-2.8418588844347075d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.3997215400947067d + "'", double75 == 1.3997215400947067d);
    }

    @Test
    public void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2294");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray46 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl42.tTest(doubleArray46, doubleArray59);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl29.t(doubleArray59, doubleArray74);
        double double77 = tTestImpl26.t((double) 10.0f, doubleArray74);
        double double78 = tTestImpl0.t(0.987358558121667d, doubleArray74);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = tTestImpl0.tTest(statisticalSummary79, statisticalSummary80, 0.9839224922440002d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9839224922440002");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2806531524060034d + "'", double61 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.357841932773502d + "'", double78 == 1.357841932773502d);
    }

    @Test
    public void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2295");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        double[] doubleArray74 = new double[] { 0.405429217622299d, 0.01613264369976175d };
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl75.setDistribution(tDistribution76);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl75.setDistribution(tDistribution78);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl75.t(3.8d, doubleArray88);
        double double96 = tTestImpl0.tTest(doubleArray74, doubleArray88);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary98 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double99 = tTestImpl0.tTest(1.3385956498818976d, statisticalSummary98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.405429217622299, 0.01613264369976175]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.8463073355328574d + "'", double95 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.36242697487793474d + "'", double96 == 0.36242697487793474d);
    }

    @Test
    public void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2296");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl0.setDistribution(tDistribution68);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        tTestImpl0.setDistribution(tDistribution70);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary72 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = tTestImpl0.tTest(statisticalSummary72, statisticalSummary73, 1.4411111919348023d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.4411111919348023");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2297");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double62 = tTestImpl0.t((double) 10, statisticalSummary61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2298");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray13 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl9.tTest(doubleArray13, doubleArray26);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray48 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl44.tTest(doubleArray48, doubleArray61);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double double78 = tTestImpl31.t(doubleArray61, doubleArray76);
        boolean boolean80 = tTestImpl9.tTest((double) (short) 0, doubleArray61, Double.NaN);
        double double81 = tTestImpl1.t((double) (short) 100, doubleArray61);
        org.apache.commons.math.distribution.TDistribution tDistribution82 = null;
        tTestImpl1.setDistribution(tDistribution82);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary84 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl1.homoscedasticTTest(statisticalSummary84, statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2806531524060034d + "'", double28 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.2806531524060034d + "'", double63 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-2.8418588844347075d) + "'", double81 == (-2.8418588844347075d));
    }

    @Test
    public void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2299");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary55 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = tTestImpl1.tTest(statisticalSummary55, statisticalSummary56, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2300");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray29 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        double double44 = tTestImpl25.tTest(doubleArray29, doubleArray42);
        double double45 = tTestImpl0.t(0.35800486798369846d, doubleArray42);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary46 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary47 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean49 = tTestImpl0.tTest(statisticalSummary46, statisticalSummary47, 0.9755634976417653d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9755634976417653");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.2806531524060034d + "'", double44 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.384536475695448d + "'", double45 == 1.384536475695448d);
    }

    @Test
    public void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2301");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        java.lang.Class<?> wildcardClass73 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2302");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = tTestImpl1.tTest((double) 1.0f, statisticalSummary87, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2303");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        java.lang.Class<?> wildcardClass25 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2304");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl37.setDistribution(tDistribution38);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl43.tTest((double) (short) 100, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double[] doubleArray82 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double83 = tTestImpl62.t((double) '4', doubleArray82);
        double double84 = tTestImpl43.tTest((double) (short) 100, doubleArray82);
        double[] doubleArray91 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double92 = tTestImpl43.tTest(0.405429217622299d, doubleArray91);
        double double93 = tTestImpl41.t(3.8d, doubleArray91);
        double double94 = tTestImpl37.t((double) (short) 1, doubleArray91);
        double double95 = tTestImpl1.t(0.004213458414249471d, doubleArray91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = tTestImpl1.tTest(statisticalSummary96, statisticalSummary97, (-0.8059002806605887d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.8059002806605887");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.01613264369976175d + "'", double59 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.09656583816243881d) + "'", double83 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.07560555610353314d + "'", double84 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.1143321549278642d + "'", double92 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-10.500000000000002d) + "'", double93 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-3.5d) + "'", double94 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-1.0105336460356238d) + "'", double95 == (-1.0105336460356238d));
    }

    @Test
    public void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2305");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary84 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = tTestImpl0.tTest(statisticalSummary84, statisticalSummary85, 4.394126037906707d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.394126037906707");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2306");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl51.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray73 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl69.tTest(doubleArray73, doubleArray86);
        double double89 = tTestImpl51.t((double) (short) 10, doubleArray73);
        double double90 = tTestImpl0.t(1.088109431399388d, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl0.homoscedasticT(statisticalSummary93, statisticalSummary94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.01613264369976175d + "'", double67 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 3.8d + "'", double89 == 3.8d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.394126037906707d + "'", double90 == 4.394126037906707d);
    }

    @Test
    public void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2307");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl1.tTest(0.9302024075262618d, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2308");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double double41 = tTestImpl25.tTest((double) (short) 100, doubleArray34);
        double double42 = tTestImpl0.t((double) (byte) 1, doubleArray34);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean46 = tTestImpl0.tTest(statisticalSummary43, statisticalSummary44, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.01613264369976175d + "'", double41 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.987358558121667d + "'", double42 == 0.987358558121667d);
    }

    @Test
    public void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2309");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        double[] doubleArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = tTestImpl0.tTest((double) 10, doubleArray25, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2310");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl0.t(doubleArray43, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        double[] doubleArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double64 = tTestImpl0.t((double) (short) 1, doubleArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.5172120199559697d + "'", double59 == 0.5172120199559697d);
    }

    @Test
    public void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2311");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl0.setDistribution(tDistribution24);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary27 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double28 = tTestImpl0.t(0.01613264369976175d, statisticalSummary27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2312");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl19.setDistribution(tDistribution20);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double double41 = tTestImpl25.tTest((double) (short) 100, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double[] doubleArray64 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double65 = tTestImpl44.t((double) '4', doubleArray64);
        double double66 = tTestImpl25.tTest((double) (short) 100, doubleArray64);
        double[] doubleArray73 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double74 = tTestImpl25.tTest(0.405429217622299d, doubleArray73);
        double double75 = tTestImpl23.t(3.8d, doubleArray73);
        double double76 = tTestImpl19.t((double) (short) 1, doubleArray73);
        double double77 = tTestImpl0.tTest(0.0d, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl0.tTest(1.0377339947605275d, statisticalSummary79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.01613264369976175d + "'", double41 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.09656583816243881d) + "'", double65 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.07560555610353314d + "'", double66 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.1143321549278642d + "'", double74 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-10.500000000000002d) + "'", double75 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-3.5d) + "'", double76 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.37390096630005876d + "'", double77 == 0.37390096630005876d);
    }

    @Test
    public void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2313");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl1.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl1.setDistribution(tDistribution41);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double45 = tTestImpl1.tTest(0.9839224922440002d, statisticalSummary44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
    }

    @Test
    public void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2314");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary18 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double19 = tTestImpl0.t((-1.1115227041167497d), statisticalSummary18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2315");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = tTestImpl0.tTest(statisticalSummary77, statisticalSummary78, 0.2752975451271431d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2316");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray18 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        double[] doubleArray26 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray31 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double32 = tTestImpl20.homoscedasticT(doubleArray26, doubleArray31);
        double double33 = tTestImpl14.tTest(doubleArray18, doubleArray31);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        double double48 = tTestImpl1.t(doubleArray31, doubleArray46);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary50 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double51 = tTestImpl1.t(4.442799675467754d, statisticalSummary50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.405429217622299d) + "'", double32 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.2806531524060034d + "'", double33 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test2317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2317");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        double[] doubleArray46 = null;
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray65 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl61.tTest(doubleArray65, doubleArray78);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl48.t(doubleArray78, doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl0.homoscedasticT(doubleArray46, doubleArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.2806531524060034d + "'", double80 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
    }

    @Test
    public void test2318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2318");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl1.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl1.setDistribution(tDistribution41);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean46 = tTestImpl1.tTest(4.394126037906707d, statisticalSummary44, 0.35800486798369846d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
    }

    @Test
    public void test2319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2319");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution35 = null;
        tTestImpl22.setDistribution(tDistribution35);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray42 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl38.tTest(doubleArray42, doubleArray55);
        double double58 = tTestImpl22.t(10.0d, doubleArray42);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double double74 = tTestImpl22.t(100.0d, doubleArray72);
        double double75 = tTestImpl0.t((double) 0L, doubleArray72);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = tTestImpl0.tTest(statisticalSummary76, statisticalSummary77, (-1.1115227041167497d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.1115227041167497");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.2806531524060034d + "'", double57 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 3.8d + "'", double58 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-2.8418588844347075d) + "'", double74 == (-2.8418588844347075d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.3997215400947067d + "'", double75 == 1.3997215400947067d);
    }

    @Test
    public void test2320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2320");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl65.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl65.setDistribution(tDistribution68);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl65.t(3.8d, doubleArray78);
        double double86 = tTestImpl0.t((double) 10L, doubleArray78);
        org.apache.commons.math.distribution.TDistribution tDistribution87 = null;
        tTestImpl0.setDistribution(tDistribution87);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary89 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double91 = tTestImpl0.homoscedasticT(statisticalSummary89, statisticalSummary90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.8463073355328574d + "'", double85 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.5339796283719219d + "'", double86 == 0.5339796283719219d);
    }

    @Test
    public void test2321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2321");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        tTestImpl1.setDistribution(tDistribution63);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double67 = tTestImpl1.homoscedasticT(statisticalSummary65, statisticalSummary66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2322");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray58 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl54.tTest(doubleArray58, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl41.t(doubleArray71, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double double89 = tTestImpl0.homoscedasticTTest(doubleArray39, doubleArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.2806531524060034d + "'", double73 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
    }

    @Test
    public void test2323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2323");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double62 = tTestImpl0.t((-2.2d), statisticalSummary61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2324");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl3.setDistribution(tDistribution16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        double double39 = tTestImpl3.t(10.0d, doubleArray23);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl69.tTest((double) (short) 100, doubleArray78);
        double double86 = tTestImpl55.t((double) 10.0f, doubleArray78);
        double double87 = tTestImpl3.homoscedasticT(doubleArray52, doubleArray78);
        double double88 = tTestImpl0.t((double) 100.0f, doubleArray78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary89 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean92 = tTestImpl0.tTest(statisticalSummary89, statisticalSummary90, (double) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 97.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 3.8d + "'", double39 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.01613264369976175d + "'", double85 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.5339796283719219d + "'", double86 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.405429217622299d + "'", double87 == 0.405429217622299d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-3.9998096691255283d) + "'", double88 == (-3.9998096691255283d));
    }

    @Test
    public void test2325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2325");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double92 = tTestImpl1.homoscedasticTTest(statisticalSummary90, statisticalSummary91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2326");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution9 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution9);
        double[] doubleArray16 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray21 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double22 = tTestImpl10.homoscedasticT(doubleArray16, doubleArray21);
        double double23 = tTestImpl7.tTest((double) (short) 100, doubleArray16);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        double[] doubleArray46 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double47 = tTestImpl26.t((double) '4', doubleArray46);
        double double48 = tTestImpl7.tTest((double) (short) 100, doubleArray46);
        double[] doubleArray55 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double56 = tTestImpl7.tTest(0.405429217622299d, doubleArray55);
        double double57 = tTestImpl5.t(3.8d, doubleArray55);
        double double58 = tTestImpl1.t((double) (short) 1, doubleArray55);
        double[] doubleArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double61 = tTestImpl1.t((double) 0, doubleArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.405429217622299d) + "'", double22 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.01613264369976175d + "'", double23 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.09656583816243881d) + "'", double47 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.07560555610353314d + "'", double48 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.1143321549278642d + "'", double56 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-10.500000000000002d) + "'", double57 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-3.5d) + "'", double58 == (-3.5d));
    }

    @Test
    public void test2327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2327");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl0.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution26 = null;
        tTestImpl0.setDistribution(tDistribution26);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary29 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = tTestImpl0.tTest((-0.8059002806605887d), statisticalSummary29, (double) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 32.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test2328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2328");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl26.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl30 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution29);
        double[] doubleArray36 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray41 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double42 = tTestImpl30.homoscedasticT(doubleArray36, doubleArray41);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray47 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl43.tTest(doubleArray47, doubleArray60);
        double double63 = tTestImpl26.homoscedasticT(doubleArray41, doubleArray47);
        double double64 = tTestImpl0.t((double) (byte) 100, doubleArray47);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = tTestImpl0.tTest(statisticalSummary65, statisticalSummary66, (-0.4023317120818342d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.4023317120818342");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.405429217622299d) + "'", double42 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.2806531524060034d + "'", double62 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.1115227041167497d) + "'", double63 == (-1.1115227041167497d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-2.2d) + "'", double64 == (-2.2d));
    }

    @Test
    public void test2329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2329");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double[] doubleArray83 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double84 = tTestImpl63.t((double) '4', doubleArray83);
        double double85 = tTestImpl1.t(0.0d, doubleArray83);
        java.lang.Class<?> wildcardClass86 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.09656583816243881d) + "'", double84 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2.2210142777360953d + "'", double85 == 2.2210142777360953d);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2330");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl1.homoscedasticTTest(statisticalSummary94, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2331");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        org.apache.commons.math.distribution.TDistribution tDistribution72 = null;
        tTestImpl0.setDistribution(tDistribution72);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray79 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution80 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl81 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution80);
        double[] doubleArray87 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray92 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double93 = tTestImpl81.homoscedasticT(doubleArray87, doubleArray92);
        double double94 = tTestImpl75.tTest(doubleArray79, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl0.tTest((-0.8059002806605887d), doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-0.405429217622299d) + "'", double93 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.2806531524060034d + "'", double94 == 0.2806531524060034d);
    }

    @Test
    public void test2332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2332");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray46 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl42.tTest(doubleArray46, doubleArray59);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl29.t(doubleArray59, doubleArray74);
        double double77 = tTestImpl26.t((double) 10.0f, doubleArray74);
        double double78 = tTestImpl0.t(0.987358558121667d, doubleArray74);
        java.lang.Class<?> wildcardClass79 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2806531524060034d + "'", double61 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.357841932773502d + "'", double78 == 1.357841932773502d);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2333");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl1.setDistribution(tDistribution38);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        tTestImpl1.setDistribution(tDistribution40);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = tTestImpl1.tTest(1.3930877336894083d, statisticalSummary43, 4.466666666666667d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.466666666666667");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
    }

    @Test
    public void test2334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2334");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary2 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary3 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = tTestImpl1.tTest(statisticalSummary2, statisticalSummary3, 1.4421373443400007d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.4421373443400007");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2335");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double77 = tTestImpl0.t((-0.5172120199559697d), statisticalSummary76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test2336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2336");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double[] doubleArray90 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double91 = tTestImpl70.t((double) '4', doubleArray90);
        double double92 = tTestImpl0.t(doubleArray66, doubleArray90);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        java.lang.Class<?> wildcardClass95 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-0.09656583816243881d) + "'", double91 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.5172120199559697d) + "'", double92 == (-0.5172120199559697d));
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2337");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl51.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray73 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl69.tTest(doubleArray73, doubleArray86);
        double double89 = tTestImpl51.t((double) (short) 10, doubleArray73);
        double double90 = tTestImpl0.t(1.088109431399388d, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(statisticalSummary93, statisticalSummary94, (double) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 97.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.01613264369976175d + "'", double67 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 3.8d + "'", double89 == 3.8d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.394126037906707d + "'", double90 == 4.394126037906707d);
    }

    @Test
    public void test2338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2338");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl1.setDistribution(tDistribution77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double81 = tTestImpl1.t(statisticalSummary79, statisticalSummary80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
    }

    @Test
    public void test2339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2339");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl24.setDistribution(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray45 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        double double60 = tTestImpl41.tTest(doubleArray45, doubleArray58);
        double double61 = tTestImpl24.homoscedasticT(doubleArray39, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl24.t((-0.975807309953049d), doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl24.setDistribution(tDistribution78);
        org.apache.commons.math.distribution.TDistribution tDistribution80 = null;
        tTestImpl24.setDistribution(tDistribution80);
        org.apache.commons.math.distribution.TDistribution tDistribution82 = null;
        tTestImpl24.setDistribution(tDistribution82);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl24.setDistribution(tDistribution84);
        double[] doubleArray91 = new double[] { 0.405429217622299d, (byte) -1, 10.0f, 0.5172120199559697d };
        double double92 = tTestImpl24.t(1.0377339947605275d, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl0.tTest((double) 1, doubleArray91, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.2806531524060034d + "'", double60 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1.1115227041167497d) + "'", double61 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.4411111919348023d + "'", double77 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.405429217622299, -1.0, 10.0, 0.5172120199559697]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.5703029263335007d + "'", double92 == 0.5703029263335007d);
    }

    @Test
    public void test2340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2340");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        tTestImpl0.setDistribution(tDistribution7);
        double[] doubleArray9 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution12 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl13 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution12);
        double[] doubleArray19 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray24 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double25 = tTestImpl13.homoscedasticT(doubleArray19, doubleArray24);
        double double26 = tTestImpl10.tTest((double) (short) 100, doubleArray19);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray32 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double double47 = tTestImpl28.tTest(doubleArray32, doubleArray45);
        double double48 = tTestImpl10.t((double) (short) 10, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        tTestImpl50.setDistribution(tDistribution51);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl50.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl50.setDistribution(tDistribution55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray62 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl58.tTest(doubleArray62, doubleArray75);
        double double78 = tTestImpl50.t((double) 0L, doubleArray62);
        double double79 = tTestImpl10.tTest((double) 0.0f, doubleArray62);
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl0.homoscedasticT(doubleArray9, doubleArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-0.405429217622299d) + "'", double25 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.01613264369976175d + "'", double26 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.2806531524060034d + "'", double47 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 3.8d + "'", double48 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.2806531524060034d + "'", double77 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 4.466666666666667d + "'", double78 == 4.466666666666667d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.046643592901765896d + "'", double79 == 0.046643592901765896d);
    }

    @Test
    public void test2341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2341");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double[] doubleArray60 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double61 = tTestImpl40.t((double) '4', doubleArray60);
        double double62 = tTestImpl21.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double double78 = tTestImpl21.tTest((double) (byte) 1, doubleArray71);
        double double79 = tTestImpl7.t((-1.0d), doubleArray71);
        double double80 = tTestImpl0.t(1.3930877336894083d, doubleArray71);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = tTestImpl0.tTest(statisticalSummary81, statisticalSummary82, 1.3404872472421194d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.3404872472421194");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.09656583816243881d) + "'", double61 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.07560555610353314d + "'", double62 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.3793626154059051d + "'", double78 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.088109431399388d + "'", double79 == 1.088109431399388d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.9675565918996828d + "'", double80 == 0.9675565918996828d);
    }

    @Test
    public void test2342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2342");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double double41 = tTestImpl25.tTest((double) (short) 100, doubleArray34);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray47 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl43.tTest(doubleArray47, doubleArray60);
        boolean boolean64 = tTestImpl25.tTest(1.357841932773502d, doubleArray47, 0.15639940166959065d);
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double[] doubleArray86 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double87 = tTestImpl66.t((double) '4', doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl0.pairedTTest(doubleArray47, doubleArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Input arrays must have the same (positive) length.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.01613264369976175d + "'", double41 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.2806531524060034d + "'", double62 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.09656583816243881d) + "'", double87 == (-0.09656583816243881d));
    }

    @Test
    public void test2343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2343");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl37.setDistribution(tDistribution38);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl43.tTest((double) (short) 100, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double[] doubleArray82 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double83 = tTestImpl62.t((double) '4', doubleArray82);
        double double84 = tTestImpl43.tTest((double) (short) 100, doubleArray82);
        double[] doubleArray91 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double92 = tTestImpl43.tTest(0.405429217622299d, doubleArray91);
        double double93 = tTestImpl41.t(3.8d, doubleArray91);
        double double94 = tTestImpl37.t((double) (short) 1, doubleArray91);
        double double95 = tTestImpl1.t(0.004213458414249471d, doubleArray91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl1.t(statisticalSummary96, statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.01613264369976175d + "'", double59 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.09656583816243881d) + "'", double83 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.07560555610353314d + "'", double84 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.1143321549278642d + "'", double92 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-10.500000000000002d) + "'", double93 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-3.5d) + "'", double94 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-1.0105336460356238d) + "'", double95 == (-1.0105336460356238d));
    }

    @Test
    public void test2344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2344");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl0.setDistribution(tDistribution24);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary26 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = tTestImpl0.tTest(statisticalSummary26, statisticalSummary27, 0.9675565918996828d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9675565918996828");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test2345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2345");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl0.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary63 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double65 = tTestImpl0.t(statisticalSummary63, statisticalSummary64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2346");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution26 = null;
        tTestImpl25.setDistribution(tDistribution26);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray46 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl42.tTest(doubleArray46, doubleArray59);
        double double62 = tTestImpl25.homoscedasticT(doubleArray40, doubleArray46);
        double double63 = tTestImpl1.t(0.35800486798369846d, doubleArray46);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean67 = tTestImpl1.tTest(statisticalSummary64, statisticalSummary65, 0.37390096630005876d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2806531524060034d + "'", double61 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-1.1115227041167497d) + "'", double62 == (-1.1115227041167497d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4.442799675467754d + "'", double63 == 4.442799675467754d);
    }

    @Test
    public void test2347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2347");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        tTestImpl0.setDistribution(tDistribution63);
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        tTestImpl0.setDistribution(tDistribution65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary67 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary68 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double69 = tTestImpl0.homoscedasticTTest(statisticalSummary67, statisticalSummary68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test2348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2348");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = tTestImpl0.tTest(0.9302024075262618d, statisticalSummary24, 1.384536475695448d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.384536475695448");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test2349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2349");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double79 = tTestImpl0.t((double) 1, statisticalSummary78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test2350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2350");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl1.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl1.setDistribution(tDistribution29);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary31 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary32 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double33 = tTestImpl1.tTest(statisticalSummary31, statisticalSummary32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test2351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2351");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl0.setDistribution(tDistribution57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = tTestImpl0.tTest(statisticalSummary59, statisticalSummary60, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2352");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        tTestImpl6.setDistribution(tDistribution7);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl12 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl12.tTest((double) (short) 100, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        double[] doubleArray51 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double52 = tTestImpl31.t((double) '4', doubleArray51);
        double double53 = tTestImpl12.tTest((double) (short) 100, doubleArray51);
        double[] doubleArray60 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double61 = tTestImpl12.tTest(0.405429217622299d, doubleArray60);
        double double62 = tTestImpl10.t(3.8d, doubleArray60);
        double double63 = tTestImpl6.t((double) (short) 1, doubleArray60);
        double double64 = tTestImpl1.t(0.9839224922440002d, doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        tTestImpl1.setDistribution(tDistribution65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary68 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double69 = tTestImpl1.tTest(0.004213458414249471d, statisticalSummary68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.01613264369976175d + "'", double28 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.09656583816243881d) + "'", double52 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.07560555610353314d + "'", double53 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.1143321549278642d + "'", double61 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-10.500000000000002d) + "'", double62 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-3.5d) + "'", double63 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-3.4598062306100013d) + "'", double64 == (-3.4598062306100013d));
    }

    @Test
    public void test2353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2353");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl1.t((double) 0, doubleArray77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl1.tTest(4.466666666666667d, statisticalSummary82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.3997215400947067d + "'", double80 == 1.3997215400947067d);
    }

    @Test
    public void test2354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2354");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        java.lang.Class<?> wildcardClass89 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2355");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        double[] doubleArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double76 = tTestImpl1.t((double) '4', doubleArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
    }

    @Test
    public void test2356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2356");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        tTestImpl0.setDistribution(tDistribution36);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary38 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = tTestImpl0.tTest(statisticalSummary38, statisticalSummary39, (-3.5d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -3.5");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
    }

    @Test
    public void test2357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2357");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl37.setDistribution(tDistribution38);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl43.tTest((double) (short) 100, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double[] doubleArray82 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double83 = tTestImpl62.t((double) '4', doubleArray82);
        double double84 = tTestImpl43.tTest((double) (short) 100, doubleArray82);
        double[] doubleArray91 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double92 = tTestImpl43.tTest(0.405429217622299d, doubleArray91);
        double double93 = tTestImpl41.t(3.8d, doubleArray91);
        double double94 = tTestImpl37.t((double) (short) 1, doubleArray91);
        double double95 = tTestImpl1.t(0.004213458414249471d, doubleArray91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl1.tTest(0.987358558121667d, statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.01613264369976175d + "'", double59 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.09656583816243881d) + "'", double83 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.07560555610353314d + "'", double84 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.1143321549278642d + "'", double92 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-10.500000000000002d) + "'", double93 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-3.5d) + "'", double94 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-1.0105336460356238d) + "'", double95 == (-1.0105336460356238d));
    }

    @Test
    public void test2358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2358");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = tTestImpl0.tTest((-3.9998096691255283d), statisticalSummary6, (-3.4598062306100013d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -3.4598062306100013");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2359");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary67 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double68 = tTestImpl0.t(0.0d, statisticalSummary67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2360");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl4.tTest((double) (short) 100, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        double double45 = tTestImpl4.tTest((double) (short) 100, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl46.tTest((double) (short) 100, doubleArray55);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl46.tTest((double) (short) 100, doubleArray85);
        double[] doubleArray93 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double94 = tTestImpl4.homoscedasticTTest(doubleArray85, doubleArray93);
        double double95 = tTestImpl0.t((double) 100, doubleArray93);
        org.apache.commons.math.distribution.TDistribution tDistribution96 = null;
        tTestImpl0.setDistribution(tDistribution96);
        java.lang.Class<?> wildcardClass98 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.01613264369976175d + "'", double20 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.07560555610353314d + "'", double45 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.01613264369976175d + "'", double62 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.07560555610353314d + "'", double87 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.12673187601587688d + "'", double94 == 0.12673187601587688d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-14.881283513379177d) + "'", double95 == (-14.881283513379177d));
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2361");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double59 = tTestImpl1.t((double) (byte) -1, statisticalSummary58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2362");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl0.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl0.homoscedasticTTest(statisticalSummary61, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2363");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl0.setDistribution(tDistribution94);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl0.tTest(0.1143321549278642d, statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test2364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2364");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double59 = tTestImpl0.tTest(1.384536475695448d, statisticalSummary58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2365");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl0.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl0.setDistribution(tDistribution88);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = tTestImpl0.tTest((double) 1, statisticalSummary91, (double) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 32.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test2366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2366");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl0.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl0.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl0.t(0.0d, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test2367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2367");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = tTestImpl0.tTest((-0.405429217622299d), statisticalSummary87, 1.088109431399388d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.088109431399388");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test2368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2368");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl3.setDistribution(tDistribution6);
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        tTestImpl3.setDistribution(tDistribution8);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl11 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray15 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution16);
        double[] doubleArray23 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray28 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double29 = tTestImpl17.homoscedasticT(doubleArray23, doubleArray28);
        double double30 = tTestImpl11.tTest(doubleArray15, doubleArray28);
        double double31 = tTestImpl3.t((double) 0L, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl32 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray36 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl32.tTest(doubleArray36, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        tTestImpl32.setDistribution(tDistribution52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl32.setDistribution(tDistribution54);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl57.tTest((double) (short) 100, doubleArray66);
        double double74 = tTestImpl32.t((double) (byte) 1, doubleArray66);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean76 = tTestImpl0.homoscedasticTTest(doubleArray15, doubleArray66, 4.656123925628981d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.656123925628981");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-0.405429217622299d) + "'", double29 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.2806531524060034d + "'", double30 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.466666666666667d + "'", double31 == 4.466666666666667d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.2806531524060034d + "'", double51 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.01613264369976175d + "'", double73 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.987358558121667d + "'", double74 == 0.987358558121667d);
    }

    @Test
    public void test2369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2369");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray6 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl2.tTest(doubleArray6, doubleArray19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl2.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl2.t(doubleArray45, doubleArray59);
        boolean boolean63 = tTestImpl0.tTest((double) (short) 1, doubleArray59, 0.405429217622299d);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean67 = tTestImpl0.tTest(statisticalSummary64, statisticalSummary65, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2806531524060034d + "'", double21 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5172120199559697d + "'", double61 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test2370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2370");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl42.t((double) (short) 10, doubleArray64);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl0.homoscedasticTTest(doubleArray64, doubleArray88);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = tTestImpl0.tTest(0.5703029263335007d, statisticalSummary97, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 3.8d + "'", double80 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.15639940166959065d + "'", double95 == 0.15639940166959065d);
    }

    @Test
    public void test2371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2371");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl5.tTest((double) (short) 100, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl5.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl5.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl28.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray50 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        double[] doubleArray58 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray63 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double64 = tTestImpl52.homoscedasticT(doubleArray58, doubleArray63);
        double double65 = tTestImpl46.tTest(doubleArray50, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl33.t(doubleArray63, doubleArray78);
        double double81 = tTestImpl28.t(0.07560555610353314d, doubleArray63);
        double double82 = tTestImpl5.t((double) (short) 10, doubleArray63);
        double double83 = tTestImpl1.t((-0.975807309953049d), doubleArray63);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary84 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl1.tTest(statisticalSummary84, statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.01613264369976175d + "'", double21 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.405429217622299d) + "'", double64 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.2806531524060034d + "'", double65 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.3965146696271626d + "'", double81 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.9755634976417653d + "'", double82 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.4411111919348023d + "'", double83 == 1.4411111919348023d);
    }

    @Test
    public void test2372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2372");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl1.setDistribution(tDistribution38);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        tTestImpl1.setDistribution(tDistribution40);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary42 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = tTestImpl1.tTest(statisticalSummary42, statisticalSummary43, 1.6198140498569726d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.6198140498569726");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
    }

    @Test
    public void test2373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2373");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        java.lang.Class<?> wildcardClass23 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2374");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        tTestImpl1.setDistribution(tDistribution63);
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        tTestImpl1.setDistribution(tDistribution65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary67 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary68 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean70 = tTestImpl1.tTest(statisticalSummary67, statisticalSummary68, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2375");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = tTestImpl0.tTest(0.5339796283719219d, statisticalSummary43, (-0.09656583816243881d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.09656583816243881");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2376");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl0.setDistribution(tDistribution68);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl0.tTest((-0.8059002806605887d), statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2377");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl0.setDistribution(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl0.setDistribution(tDistribution27);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary29 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary30 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double31 = tTestImpl0.homoscedasticTTest(statisticalSummary29, statisticalSummary30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test2378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2378");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl55.tTest((double) (short) 100, doubleArray64);
        double double72 = tTestImpl41.t((double) 10.0f, doubleArray64);
        boolean boolean74 = tTestImpl0.tTest(0.12673187601587688d, doubleArray64, 0.01613264369976175d);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = tTestImpl0.tTest((-3.4598062306100013d), statisticalSummary78, 2.2085058899383956d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 2.2085058899383956");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.01613264369976175d + "'", double71 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5339796283719219d + "'", double72 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2379");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = tTestImpl0.tTest(statisticalSummary92, statisticalSummary93, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test2380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2380");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl1.t(100.0d, doubleArray51);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary55 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double56 = tTestImpl1.t(0.8463073355328574d, statisticalSummary55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-2.8418588844347075d) + "'", double53 == (-2.8418588844347075d));
    }

    @Test
    public void test2381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2381");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.distribution.TDistribution tDistribution80 = null;
        tTestImpl0.setDistribution(tDistribution80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary83 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double84 = tTestImpl0.homoscedasticTTest(statisticalSummary82, statisticalSummary83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test2382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2382");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl22.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl22.homoscedasticT(doubleArray37, doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl22.t((-0.975807309953049d), doubleArray73);
        double double76 = tTestImpl1.t(0.0d, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl1.setDistribution(tDistribution77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double81 = tTestImpl1.homoscedasticT(statisticalSummary79, statisticalSummary80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.1115227041167497d) + "'", double59 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.4411111919348023d + "'", double75 == 1.4411111919348023d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.3997215400947067d + "'", double76 == 1.3997215400947067d);
    }

    @Test
    public void test2383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2383");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray11 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution12 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl13 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution12);
        double[] doubleArray19 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray24 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double25 = tTestImpl13.homoscedasticT(doubleArray19, doubleArray24);
        double double26 = tTestImpl7.tTest(doubleArray11, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray59 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double double74 = tTestImpl55.tTest(doubleArray59, doubleArray72);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl76 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution75);
        double[] doubleArray82 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray87 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double88 = tTestImpl76.homoscedasticT(doubleArray82, doubleArray87);
        double double89 = tTestImpl42.t(doubleArray72, doubleArray87);
        double double90 = tTestImpl7.homoscedasticT(doubleArray34, doubleArray87);
        double double91 = tTestImpl1.t(1.384536475695448d, doubleArray87);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-0.405429217622299d) + "'", double25 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.2806531524060034d + "'", double26 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.2806531524060034d + "'", double74 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-0.405429217622299d) + "'", double88 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.340995311971139d + "'", double91 == 1.340995311971139d);
    }

    @Test
    public void test2384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2384");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl0.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl0.tTest(1.5d, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2385");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        java.lang.Class<?> wildcardClass23 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2386");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl0.t(doubleArray43, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double66 = tTestImpl0.homoscedasticT(statisticalSummary64, statisticalSummary65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.5172120199559697d + "'", double59 == 0.5172120199559697d);
    }

    @Test
    public void test2387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2387");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        tTestImpl1.setDistribution(tDistribution8);
        org.apache.commons.math.distribution.TDistribution tDistribution10 = null;
        tTestImpl1.setDistribution(tDistribution10);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary12 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary13 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double14 = tTestImpl1.homoscedasticTTest(statisticalSummary12, statisticalSummary13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2388");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl1.t((double) 0, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl1.setDistribution(tDistribution81);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary83 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary84 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = tTestImpl1.tTest(statisticalSummary83, statisticalSummary84, (double) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.3997215400947067d + "'", double80 == 1.3997215400947067d);
    }

    @Test
    public void test2389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2389");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl0.setDistribution(tDistribution94);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = tTestImpl0.tTest(statisticalSummary96, statisticalSummary97, 0.9839224922440002d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9839224922440002");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test2390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2390");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl1.setDistribution(tDistribution38);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        tTestImpl1.setDistribution(tDistribution40);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary42 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double44 = tTestImpl1.homoscedasticTTest(statisticalSummary42, statisticalSummary43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
    }

    @Test
    public void test2391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2391");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.distribution.TDistribution tDistribution80 = null;
        tTestImpl0.setDistribution(tDistribution80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary83 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean85 = tTestImpl0.tTest(statisticalSummary82, statisticalSummary83, 4.656123925628981d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.656123925628981");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test2392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2392");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = tTestImpl0.tTest(statisticalSummary58, statisticalSummary59, (-1.587268255506484d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.587268255506484");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2393");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl0.tTest(0.046643592901765896d, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test2394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2394");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl55.tTest((double) (short) 100, doubleArray64);
        double double72 = tTestImpl41.t((double) 10.0f, doubleArray64);
        boolean boolean74 = tTestImpl0.tTest(0.12673187601587688d, doubleArray64, 0.01613264369976175d);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl0.setDistribution(tDistribution77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double81 = tTestImpl0.homoscedasticT(statisticalSummary79, statisticalSummary80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.01613264369976175d + "'", double71 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5339796283719219d + "'", double72 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2395");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        tTestImpl6.setDistribution(tDistribution7);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl12 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl12.tTest((double) (short) 100, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        double[] doubleArray51 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double52 = tTestImpl31.t((double) '4', doubleArray51);
        double double53 = tTestImpl12.tTest((double) (short) 100, doubleArray51);
        double[] doubleArray60 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double61 = tTestImpl12.tTest(0.405429217622299d, doubleArray60);
        double double62 = tTestImpl10.t(3.8d, doubleArray60);
        double double63 = tTestImpl6.t((double) (short) 1, doubleArray60);
        double double64 = tTestImpl1.t(0.9839224922440002d, doubleArray60);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double67 = tTestImpl1.homoscedasticT(statisticalSummary65, statisticalSummary66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.01613264369976175d + "'", double28 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.09656583816243881d) + "'", double52 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.07560555610353314d + "'", double53 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.1143321549278642d + "'", double61 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-10.500000000000002d) + "'", double62 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-3.5d) + "'", double63 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-3.4598062306100013d) + "'", double64 == (-3.4598062306100013d));
    }

    @Test
    public void test2396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2396");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl0.t((-1.0105336460356238d), statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test2397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2397");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray11 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution12 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl13 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution12);
        double[] doubleArray19 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray24 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double25 = tTestImpl13.homoscedasticT(doubleArray19, doubleArray24);
        double double26 = tTestImpl7.tTest(doubleArray11, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray59 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double double74 = tTestImpl55.tTest(doubleArray59, doubleArray72);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl76 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution75);
        double[] doubleArray82 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray87 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double88 = tTestImpl76.homoscedasticT(doubleArray82, doubleArray87);
        double double89 = tTestImpl42.t(doubleArray72, doubleArray87);
        double double90 = tTestImpl7.homoscedasticT(doubleArray34, doubleArray87);
        double double91 = tTestImpl1.t(1.384536475695448d, doubleArray87);
        java.lang.Class<?> wildcardClass92 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-0.405429217622299d) + "'", double25 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.2806531524060034d + "'", double26 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.2806531524060034d + "'", double74 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-0.405429217622299d) + "'", double88 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.340995311971139d + "'", double91 == 1.340995311971139d);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2398");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl1.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl1.setDistribution(tDistribution41);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl1.setDistribution(tDistribution43);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary45 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary46 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double47 = tTestImpl1.homoscedasticTTest(statisticalSummary45, statisticalSummary46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
    }

    @Test
    public void test2399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2399");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        tTestImpl24.setDistribution(tDistribution37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray44 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl40.tTest(doubleArray44, doubleArray57);
        double double60 = tTestImpl24.t(10.0d, doubleArray44);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl24.t(100.0d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl1.homoscedasticT(doubleArray74, doubleArray84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = tTestImpl1.tTest((-0.4023317120818342d), statisticalSummary93, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.2806531524060034d + "'", double59 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 3.8d + "'", double60 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-2.8418588844347075d) + "'", double76 == (-2.8418588844347075d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.405429217622299d + "'", double91 == 0.405429217622299d);
    }

    @Test
    public void test2400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2400");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl38.tTest((double) (short) 100, doubleArray47);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double[] doubleArray77 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double78 = tTestImpl57.t((double) '4', doubleArray77);
        double double79 = tTestImpl38.tTest((double) (short) 100, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl38.tTest((double) (byte) 1, doubleArray88);
        double double96 = tTestImpl24.t((double) 10L, doubleArray88);
        double double97 = tTestImpl0.t(0.0d, doubleArray88);
        java.lang.Class<?> wildcardClass98 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.01613264369976175d + "'", double54 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.09656583816243881d) + "'", double78 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.07560555610353314d + "'", double79 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.3793626154059051d + "'", double95 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.5339796283719219d + "'", double96 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 1.0377339947605275d + "'", double97 == 1.0377339947605275d);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2401");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        tTestImpl64.setDistribution(tDistribution65);
        org.apache.commons.math.distribution.TDistribution tDistribution67 = null;
        tTestImpl64.setDistribution(tDistribution67);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution70);
        double[] doubleArray77 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray82 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double83 = tTestImpl71.homoscedasticT(doubleArray77, doubleArray82);
        double double84 = tTestImpl64.t(3.8d, doubleArray77);
        double double85 = tTestImpl0.t(0.5172120199559697d, doubleArray77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl0.t(1.0d, statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.8463073355328574d + "'", double84 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0116792134203785d + "'", double85 == 1.0116792134203785d);
    }

    @Test
    public void test2402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2402");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        double[] doubleArray74 = new double[] { 0.405429217622299d, 0.01613264369976175d };
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl75.setDistribution(tDistribution76);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl75.setDistribution(tDistribution78);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl75.t(3.8d, doubleArray88);
        double double96 = tTestImpl0.tTest(doubleArray74, doubleArray88);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary98 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double99 = tTestImpl0.tTest(statisticalSummary97, statisticalSummary98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.405429217622299, 0.01613264369976175]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.8463073355328574d + "'", double95 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.36242697487793474d + "'", double96 == 0.36242697487793474d);
    }

    @Test
    public void test2403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2403");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        tTestImpl0.setDistribution(tDistribution36);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl0.setDistribution(tDistribution38);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        tTestImpl0.setDistribution(tDistribution40);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl43.tTest((double) (short) 100, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray65 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl61.tTest(doubleArray65, doubleArray78);
        boolean boolean82 = tTestImpl43.tTest(1.357841932773502d, doubleArray65, 0.15639940166959065d);
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl0.tTest((double) 100, doubleArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.01613264369976175d + "'", double59 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.2806531524060034d + "'", double80 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test2404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2404");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl37.setDistribution(tDistribution38);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl43.tTest((double) (short) 100, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double[] doubleArray82 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double83 = tTestImpl62.t((double) '4', doubleArray82);
        double double84 = tTestImpl43.tTest((double) (short) 100, doubleArray82);
        double[] doubleArray91 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double92 = tTestImpl43.tTest(0.405429217622299d, doubleArray91);
        double double93 = tTestImpl41.t(3.8d, doubleArray91);
        double double94 = tTestImpl37.t((double) (short) 1, doubleArray91);
        double double95 = tTestImpl1.t(0.004213458414249471d, doubleArray91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = tTestImpl1.tTest(0.15639940166959065d, statisticalSummary97, 0.2674771174879971d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.01613264369976175d + "'", double59 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.09656583816243881d) + "'", double83 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.07560555610353314d + "'", double84 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.1143321549278642d + "'", double92 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-10.500000000000002d) + "'", double93 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-3.5d) + "'", double94 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-1.0105336460356238d) + "'", double95 == (-1.0105336460356238d));
    }

    @Test
    public void test2405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2405");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = tTestImpl0.tTest(0.1143321549278642d, statisticalSummary4, 4.442799675467754d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.442799675467754");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2406");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl0.setDistribution(tDistribution68);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl0.tTest((double) (short) 0, statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2407");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray13 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl9.tTest(doubleArray13, doubleArray26);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl9.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution31 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl32 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution31);
        double[] doubleArray38 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray43 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double44 = tTestImpl32.homoscedasticT(doubleArray38, doubleArray43);
        double[] doubleArray52 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double53 = tTestImpl32.t((double) '4', doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl9.t(doubleArray52, doubleArray66);
        double double69 = tTestImpl1.t(0.2806531524060034d, doubleArray52);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl1.t(0.405429217622299d, statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2806531524060034d + "'", double28 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.405429217622299d) + "'", double44 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.09656583816243881d) + "'", double53 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.5172120199559697d + "'", double68 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2.2085058899383956d + "'", double69 == 2.2085058899383956d);
    }

    @Test
    public void test2408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2408");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary55 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = tTestImpl0.tTest(statisticalSummary55, statisticalSummary56, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2409");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl37.setDistribution(tDistribution38);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl43.tTest((double) (short) 100, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double[] doubleArray82 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double83 = tTestImpl62.t((double) '4', doubleArray82);
        double double84 = tTestImpl43.tTest((double) (short) 100, doubleArray82);
        double[] doubleArray91 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double92 = tTestImpl43.tTest(0.405429217622299d, doubleArray91);
        double double93 = tTestImpl41.t(3.8d, doubleArray91);
        double double94 = tTestImpl37.t((double) (short) 1, doubleArray91);
        double double95 = tTestImpl1.t(0.004213458414249471d, doubleArray91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl1.t((-14.881283513379177d), statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.01613264369976175d + "'", double59 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.09656583816243881d) + "'", double83 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.07560555610353314d + "'", double84 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.1143321549278642d + "'", double92 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-10.500000000000002d) + "'", double93 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-3.5d) + "'", double94 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-1.0105336460356238d) + "'", double95 == (-1.0105336460356238d));
    }

    @Test
    public void test2410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2410");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl1.t(100.0d, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl1.setDistribution(tDistribution54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        tTestImpl1.setDistribution(tDistribution56);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double60 = tTestImpl1.homoscedasticTTest(statisticalSummary58, statisticalSummary59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-2.8418588844347075d) + "'", double53 == (-2.8418588844347075d));
    }

    @Test
    public void test2411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2411");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl0.setDistribution(tDistribution25);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary27 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary28 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double29 = tTestImpl0.t(statisticalSummary27, statisticalSummary28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test2412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2412");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double61 = tTestImpl1.tTest(0.046643592901765896d, statisticalSummary60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test2413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2413");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution9 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution9);
        double[] doubleArray16 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray21 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double22 = tTestImpl10.homoscedasticT(doubleArray16, doubleArray21);
        double double23 = tTestImpl7.tTest((double) (short) 100, doubleArray16);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        double[] doubleArray46 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double47 = tTestImpl26.t((double) '4', doubleArray46);
        double double48 = tTestImpl7.tTest((double) (short) 100, doubleArray46);
        double[] doubleArray55 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double56 = tTestImpl7.tTest(0.405429217622299d, doubleArray55);
        double double57 = tTestImpl5.t(3.8d, doubleArray55);
        double double58 = tTestImpl1.t((double) (short) 1, doubleArray55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double61 = tTestImpl1.tTest((-1.587268255506484d), statisticalSummary60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.405429217622299d) + "'", double22 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.01613264369976175d + "'", double23 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.09656583816243881d) + "'", double47 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.07560555610353314d + "'", double48 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.1143321549278642d + "'", double56 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-10.500000000000002d) + "'", double57 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-3.5d) + "'", double58 == (-3.5d));
    }

    @Test
    public void test2414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2414");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary17 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = tTestImpl0.tTest(statisticalSummary17, statisticalSummary18, 1.3930877336894083d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.3930877336894083");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test2415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2415");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = tTestImpl1.tTest(1.0377339947605275d, statisticalSummary91, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2416");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        double[] doubleArray43 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray48 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double49 = tTestImpl37.homoscedasticT(doubleArray43, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution50);
        double[] doubleArray57 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray62 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double63 = tTestImpl51.homoscedasticT(doubleArray57, doubleArray62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl51.setDistribution(tDistribution64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray71 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution72 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl73 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution72);
        double[] doubleArray79 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray84 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double85 = tTestImpl73.homoscedasticT(doubleArray79, doubleArray84);
        double double86 = tTestImpl67.tTest(doubleArray71, doubleArray84);
        double double87 = tTestImpl51.t(10.0d, doubleArray71);
        double double88 = tTestImpl0.tTest(doubleArray48, doubleArray71);
        java.lang.Class<?> wildcardClass89 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.405429217622299d) + "'", double49 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.405429217622299d) + "'", double63 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.405429217622299d) + "'", double85 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.2806531524060034d + "'", double86 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 3.8d + "'", double87 == 3.8d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2417");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary18 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary19 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double20 = tTestImpl1.homoscedasticTTest(statisticalSummary18, statisticalSummary19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test2418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2418");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl1.t(100.0d, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl1.setDistribution(tDistribution54);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary57 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double58 = tTestImpl1.t(0.405429217622299d, statisticalSummary57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-2.8418588844347075d) + "'", double53 == (-2.8418588844347075d));
    }

    @Test
    public void test2419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2419");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl1.setDistribution(tDistribution22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double26 = tTestImpl1.tTest((double) 1, statisticalSummary25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test2420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2420");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl0.setDistribution(tDistribution25);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary28 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double29 = tTestImpl0.t((double) 10.0f, statisticalSummary28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test2421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2421");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl20.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution26 = null;
        tTestImpl25.setDistribution(tDistribution26);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double double47 = tTestImpl31.tTest((double) (short) 100, doubleArray40);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double[] doubleArray70 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double71 = tTestImpl50.t((double) '4', doubleArray70);
        double double72 = tTestImpl31.tTest((double) (short) 100, doubleArray70);
        double[] doubleArray79 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double80 = tTestImpl31.tTest(0.405429217622299d, doubleArray79);
        double double81 = tTestImpl29.t(3.8d, doubleArray79);
        double double82 = tTestImpl25.t((double) (short) 1, doubleArray79);
        double double83 = tTestImpl20.t(0.9839224922440002d, doubleArray79);
        double double84 = tTestImpl1.t((double) (-1), doubleArray79);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double87 = tTestImpl1.homoscedasticT(statisticalSummary85, statisticalSummary86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.01613264369976175d + "'", double47 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.09656583816243881d) + "'", double71 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.07560555610353314d + "'", double72 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.1143321549278642d + "'", double80 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-10.500000000000002d) + "'", double81 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-3.5d) + "'", double82 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-3.4598062306100013d) + "'", double83 == (-3.4598062306100013d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.5d + "'", double84 == 1.5d);
    }

    @Test
    public void test2422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2422");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = tTestImpl0.tTest((double) 0.0f, statisticalSummary18, 0.5172120199559697d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.5172120199559697");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test2423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2423");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl36 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl38.tTest((double) (short) 100, doubleArray47);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double[] doubleArray77 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double78 = tTestImpl57.t((double) '4', doubleArray77);
        double double79 = tTestImpl38.tTest((double) (short) 100, doubleArray77);
        double[] doubleArray86 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double87 = tTestImpl38.tTest(0.405429217622299d, doubleArray86);
        double double88 = tTestImpl36.t(3.8d, doubleArray86);
        double double89 = tTestImpl1.t(0.0d, doubleArray86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double92 = tTestImpl1.t(statisticalSummary90, statisticalSummary91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.01613264369976175d + "'", double54 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.09656583816243881d) + "'", double78 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.07560555610353314d + "'", double79 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.1143321549278642d + "'", double87 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-10.500000000000002d) + "'", double88 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1.0000000000000002d) + "'", double89 == (-1.0000000000000002d));
    }

    @Test
    public void test2424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2424");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        tTestImpl1.setDistribution(tDistribution63);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double67 = tTestImpl1.t(0.0d, statisticalSummary66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2425");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl0.setDistribution(tDistribution24);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary26 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = tTestImpl0.tTest(statisticalSummary26, statisticalSummary27, 0.37390096630005876d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test2426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2426");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl1.t((-0.8059002806605887d), statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2427");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary69 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double70 = tTestImpl0.tTest(0.37390096630005876d, statisticalSummary69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2428");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl1.setDistribution(tDistribution77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = tTestImpl1.tTest(0.0d, statisticalSummary80, 0.1143321549278642d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
    }

    @Test
    public void test2429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2429");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary75 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double76 = tTestImpl1.tTest((double) 0, statisticalSummary75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
    }

    @Test
    public void test2430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2430");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        double[] doubleArray43 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray48 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double49 = tTestImpl37.homoscedasticT(doubleArray43, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution50);
        double[] doubleArray57 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray62 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double63 = tTestImpl51.homoscedasticT(doubleArray57, doubleArray62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl51.setDistribution(tDistribution64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray71 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution72 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl73 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution72);
        double[] doubleArray79 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray84 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double85 = tTestImpl73.homoscedasticT(doubleArray79, doubleArray84);
        double double86 = tTestImpl67.tTest(doubleArray71, doubleArray84);
        double double87 = tTestImpl51.t(10.0d, doubleArray71);
        double double88 = tTestImpl0.tTest(doubleArray48, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = tTestImpl0.t((double) 1L, statisticalSummary92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.405429217622299d) + "'", double49 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.405429217622299d) + "'", double63 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.405429217622299d) + "'", double85 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.2806531524060034d + "'", double86 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 3.8d + "'", double87 == 3.8d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
    }

    @Test
    public void test2431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2431");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        boolean boolean39 = tTestImpl0.tTest(1.357841932773502d, doubleArray22, 0.15639940166959065d);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary40 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary41 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double42 = tTestImpl0.t(statisticalSummary40, statisticalSummary41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test2432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2432");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl51.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray73 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl69.tTest(doubleArray73, doubleArray86);
        double double89 = tTestImpl51.t((double) (short) 10, doubleArray73);
        double double90 = tTestImpl0.t(1.088109431399388d, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = tTestImpl0.tTest(0.405429217622299d, statisticalSummary92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.01613264369976175d + "'", double67 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 3.8d + "'", double89 == 3.8d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.394126037906707d + "'", double90 == 4.394126037906707d);
    }

    @Test
    public void test2433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2433");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl1.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl1.setDistribution(tDistribution79);
        java.lang.Class<?> wildcardClass81 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2434");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl56.t((double) 1L, doubleArray89);
        double double92 = tTestImpl0.t(0.15639940166959065d, doubleArray89);
        java.lang.Class<?> wildcardClass93 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.3573057358494125d + "'", double91 == 1.3573057358494125d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.3930877336894083d + "'", double92 == 1.3930877336894083d);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2435");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary40 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean42 = tTestImpl0.tTest((-1.0000000000000002d), statisticalSummary40, 2.2085058899383956d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 2.2085058899383956");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
    }

    @Test
    public void test2436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2436");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        double[] doubleArray74 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double75 = tTestImpl0.t((double) (short) 0, doubleArray74);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = tTestImpl0.tTest(statisticalSummary76, statisticalSummary77, (-1.1115227041167497d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.1115227041167497");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9566618438474437d + "'", double75 == 0.9566618438474437d);
    }

    @Test
    public void test2437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2437");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((double) 10L, doubleArray65);
        java.lang.Class<?> wildcardClass74 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.5339796283719219d + "'", double73 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2438");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl1.setDistribution(tDistribution22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double26 = tTestImpl1.t(statisticalSummary24, statisticalSummary25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test2439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2439");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl1.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl1.setDistribution(tDistribution41);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl1.setDistribution(tDistribution43);
        double[] doubleArray45 = null;
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl47.setDistribution(tDistribution48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution50);
        double[] doubleArray57 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray62 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double63 = tTestImpl51.homoscedasticT(doubleArray57, doubleArray62);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray68 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl64.tTest(doubleArray68, doubleArray81);
        double double84 = tTestImpl47.homoscedasticT(doubleArray62, doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = tTestImpl1.homoscedasticTTest(doubleArray45, doubleArray68, 0.3793626154059051d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.405429217622299d) + "'", double63 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.2806531524060034d + "'", double83 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-1.1115227041167497d) + "'", double84 == (-1.1115227041167497d));
    }

    @Test
    public void test2440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2440");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl40.setDistribution(tDistribution41);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl40.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl40.setDistribution(tDistribution45);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        double double68 = tTestImpl40.t((double) 0L, doubleArray52);
        double double69 = tTestImpl0.tTest((double) 0.0f, doubleArray52);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary70 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl0.homoscedasticT(statisticalSummary70, statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4.466666666666667d + "'", double68 == 4.466666666666667d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.046643592901765896d + "'", double69 == 0.046643592901765896d);
    }

    @Test
    public void test2441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2441");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray46 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl42.tTest(doubleArray46, doubleArray59);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl29.t(doubleArray59, doubleArray74);
        double double77 = tTestImpl26.t((double) 10.0f, doubleArray74);
        double double78 = tTestImpl0.t(0.987358558121667d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl0.setDistribution(tDistribution79);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl0.t(1.340995311971139d, statisticalSummary82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2806531524060034d + "'", double61 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.357841932773502d + "'", double78 == 1.357841932773502d);
    }

    @Test
    public void test2442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2442");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl5.tTest((double) (short) 100, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl5.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl5.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl28.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray50 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        double[] doubleArray58 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray63 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double64 = tTestImpl52.homoscedasticT(doubleArray58, doubleArray63);
        double double65 = tTestImpl46.tTest(doubleArray50, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl33.t(doubleArray63, doubleArray78);
        double double81 = tTestImpl28.t(0.07560555610353314d, doubleArray63);
        double double82 = tTestImpl5.t((double) (short) 10, doubleArray63);
        double double83 = tTestImpl1.t((-0.975807309953049d), doubleArray63);
        double[] doubleArray90 = new double[] { 4.394126037906707d, (short) 100, (-0.405429217622299d), (byte) -1, 0.9566618438474437d };
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean92 = tTestImpl1.tTest((double) (-1L), doubleArray90, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.01613264369976175d + "'", double21 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.405429217622299d) + "'", double64 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.2806531524060034d + "'", double65 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.3965146696271626d + "'", double81 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.9755634976417653d + "'", double82 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.4411111919348023d + "'", double83 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[4.394126037906707, 100.0, -0.405429217622299, -1.0, 0.9566618438474437]");
    }

    @Test
    public void test2443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2443");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        double[] doubleArray62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl1.tTest((-0.405429217622299d), doubleArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test2444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2444");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl26.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl30 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution29);
        double[] doubleArray36 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray41 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double42 = tTestImpl30.homoscedasticT(doubleArray36, doubleArray41);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray47 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl43.tTest(doubleArray47, doubleArray60);
        double double63 = tTestImpl26.homoscedasticT(doubleArray41, doubleArray47);
        double double64 = tTestImpl0.t((double) (byte) 100, doubleArray47);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double67 = tTestImpl0.t((double) (byte) 10, statisticalSummary66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.405429217622299d) + "'", double42 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.2806531524060034d + "'", double62 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.1115227041167497d) + "'", double63 == (-1.1115227041167497d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-2.2d) + "'", double64 == (-2.2d));
    }

    @Test
    public void test2445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2445");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl65.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl65.setDistribution(tDistribution68);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl65.t(3.8d, doubleArray78);
        double double86 = tTestImpl0.t((double) 10L, doubleArray78);
        org.apache.commons.math.distribution.TDistribution tDistribution87 = null;
        tTestImpl0.setDistribution(tDistribution87);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean92 = tTestImpl0.tTest(2.2210142777360953d, statisticalSummary90, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.8463073355328574d + "'", double85 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.5339796283719219d + "'", double86 == 0.5339796283719219d);
    }

    @Test
    public void test2446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2446");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary33 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = tTestImpl1.tTest(statisticalSummary33, statisticalSummary34, (double) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
    }

    @Test
    public void test2447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2447");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        java.lang.Class<?> wildcardClass92 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2448");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = tTestImpl0.t((-2.8418588844347075d), statisticalSummary56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2449");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary8 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = tTestImpl1.tTest(statisticalSummary8, statisticalSummary9, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2450");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = tTestImpl0.tTest(statisticalSummary92, statisticalSummary93, 0.07560555610353314d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test2451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2451");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        double[] doubleArray74 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double75 = tTestImpl0.t((double) (short) 0, doubleArray74);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = tTestImpl0.tTest(1.3965146696271626d, statisticalSummary77, (double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 52.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9566618438474437d + "'", double75 == 0.9566618438474437d);
    }

    @Test
    public void test2452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2452");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double79 = tTestImpl1.tTest(1.3385956498818976d, statisticalSummary78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
    }

    @Test
    public void test2453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2453");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl19.setDistribution(tDistribution20);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double double41 = tTestImpl25.tTest((double) (short) 100, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double[] doubleArray64 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double65 = tTestImpl44.t((double) '4', doubleArray64);
        double double66 = tTestImpl25.tTest((double) (short) 100, doubleArray64);
        double[] doubleArray73 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double74 = tTestImpl25.tTest(0.405429217622299d, doubleArray73);
        double double75 = tTestImpl23.t(3.8d, doubleArray73);
        double double76 = tTestImpl19.t((double) (short) 1, doubleArray73);
        double double77 = tTestImpl0.tTest(0.0d, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl0.t(statisticalSummary78, statisticalSummary79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.01613264369976175d + "'", double41 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.09656583816243881d) + "'", double65 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.07560555610353314d + "'", double66 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.1143321549278642d + "'", double74 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-10.500000000000002d) + "'", double75 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-3.5d) + "'", double76 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.37390096630005876d + "'", double77 == 0.37390096630005876d);
    }

    @Test
    public void test2454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2454");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = tTestImpl0.tTest(statisticalSummary59, statisticalSummary60, (double) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test2455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2455");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray25 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution26 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl27 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution26);
        double[] doubleArray33 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray38 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double39 = tTestImpl27.homoscedasticT(doubleArray33, doubleArray38);
        double double40 = tTestImpl21.tTest(doubleArray25, doubleArray38);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        double double56 = tTestImpl21.t((double) 1L, doubleArray54);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = tTestImpl1.tTest(1.7753257939094542d, doubleArray54, 0.9755634976417653d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9755634976417653");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.405429217622299d) + "'", double39 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.2806531524060034d + "'", double40 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.3573057358494125d + "'", double56 == 1.3573057358494125d);
    }

    @Test
    public void test2456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2456");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean78 = tTestImpl0.tTest((double) 1.0f, doubleArray70, (-0.405429217622299d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.405429217622299");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
    }

    @Test
    public void test2457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2457");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl0.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl0.setDistribution(tDistribution41);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double45 = tTestImpl0.t(0.9675565918996828d, statisticalSummary44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
    }

    @Test
    public void test2458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2458");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = tTestImpl1.tTest(statisticalSummary92, statisticalSummary93, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2459");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        tTestImpl0.setDistribution(tDistribution63);
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        tTestImpl0.setDistribution(tDistribution65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary67 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary68 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double69 = tTestImpl0.homoscedasticT(statisticalSummary67, statisticalSummary68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test2460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2460");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = tTestImpl1.tTest(3.8d, statisticalSummary87, (-14.881283513379177d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -14.881283513379177");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2461");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary47 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double48 = tTestImpl0.tTest((double) ' ', statisticalSummary47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2462");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        double[] doubleArray43 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray48 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double49 = tTestImpl37.homoscedasticT(doubleArray43, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution50);
        double[] doubleArray57 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray62 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double63 = tTestImpl51.homoscedasticT(doubleArray57, doubleArray62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl51.setDistribution(tDistribution64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray71 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution72 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl73 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution72);
        double[] doubleArray79 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray84 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double85 = tTestImpl73.homoscedasticT(doubleArray79, doubleArray84);
        double double86 = tTestImpl67.tTest(doubleArray71, doubleArray84);
        double double87 = tTestImpl51.t(10.0d, doubleArray71);
        double double88 = tTestImpl0.tTest(doubleArray48, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl0.tTest(statisticalSummary91, statisticalSummary92, (-0.8059002806605887d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.8059002806605887");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.405429217622299d) + "'", double49 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.405429217622299d) + "'", double63 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.405429217622299d) + "'", double85 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.2806531524060034d + "'", double86 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 3.8d + "'", double87 == 3.8d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
    }

    @Test
    public void test2463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2463");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl1.setDistribution(tDistribution27);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary29 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = tTestImpl1.tTest(statisticalSummary29, statisticalSummary30, (double) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test2464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2464");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray58 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl54.tTest(doubleArray58, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl41.t(doubleArray71, doubleArray86);
        double double89 = tTestImpl1.t((double) 0.0f, doubleArray86);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl1.t((-0.4023317120818342d), statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.2806531524060034d + "'", double73 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.3997215400947067d + "'", double89 == 1.3997215400947067d);
    }

    @Test
    public void test2465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2465");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl37.setDistribution(tDistribution38);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl43.tTest((double) (short) 100, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double[] doubleArray82 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double83 = tTestImpl62.t((double) '4', doubleArray82);
        double double84 = tTestImpl43.tTest((double) (short) 100, doubleArray82);
        double[] doubleArray91 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double92 = tTestImpl43.tTest(0.405429217622299d, doubleArray91);
        double double93 = tTestImpl41.t(3.8d, doubleArray91);
        double double94 = tTestImpl37.t((double) (short) 1, doubleArray91);
        double double95 = tTestImpl1.t(0.004213458414249471d, doubleArray91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl1.tTest(0.0d, statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.01613264369976175d + "'", double59 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.09656583816243881d) + "'", double83 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.07560555610353314d + "'", double84 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.1143321549278642d + "'", double92 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-10.500000000000002d) + "'", double93 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-3.5d) + "'", double94 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-1.0105336460356238d) + "'", double95 == (-1.0105336460356238d));
    }

    @Test
    public void test2466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2466");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl20.tTest((double) (short) 100, doubleArray29);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        double[] doubleArray59 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double60 = tTestImpl39.t((double) '4', doubleArray59);
        double double61 = tTestImpl20.tTest((double) (short) 100, doubleArray59);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl20.tTest((double) (byte) 1, doubleArray70);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl79 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution78);
        double[] doubleArray85 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray90 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double91 = tTestImpl79.homoscedasticT(doubleArray85, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = tTestImpl0.pairedTTest(doubleArray70, doubleArray90, 1.3965146696271626d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.3965146696271626");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.01613264369976175d + "'", double36 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.09656583816243881d) + "'", double60 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.07560555610353314d + "'", double61 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.3793626154059051d + "'", double77 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-0.405429217622299d) + "'", double91 == (-0.405429217622299d));
    }

    @Test
    public void test2467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2467");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        tTestImpl1.setDistribution(tDistribution63);
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        tTestImpl1.setDistribution(tDistribution65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary68 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean70 = tTestImpl1.tTest((double) 100.0f, statisticalSummary68, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2468");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl0.setDistribution(tDistribution25);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary28 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double29 = tTestImpl0.tTest((double) 0.0f, statisticalSummary28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test2469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2469");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl1.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl1.setDistribution(tDistribution41);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean46 = tTestImpl1.tTest((-0.4023317120818342d), statisticalSummary44, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
    }

    @Test
    public void test2470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2470");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl8.setDistribution(tDistribution21);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray28 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl30 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution29);
        double[] doubleArray36 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray41 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double42 = tTestImpl30.homoscedasticT(doubleArray36, doubleArray41);
        double double43 = tTestImpl24.tTest(doubleArray28, doubleArray41);
        double double44 = tTestImpl8.t(10.0d, doubleArray28);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl77 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution76);
        double[] doubleArray83 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray88 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double89 = tTestImpl77.homoscedasticT(doubleArray83, doubleArray88);
        double double90 = tTestImpl74.tTest((double) (short) 100, doubleArray83);
        double double91 = tTestImpl60.t((double) 10.0f, doubleArray83);
        double double92 = tTestImpl8.homoscedasticT(doubleArray57, doubleArray83);
        double double93 = tTestImpl1.t((double) 1L, doubleArray57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl1.tTest(statisticalSummary94, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.405429217622299d) + "'", double42 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.2806531524060034d + "'", double43 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 3.8d + "'", double44 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-0.405429217622299d) + "'", double89 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.01613264369976175d + "'", double90 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.5339796283719219d + "'", double91 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.405429217622299d + "'", double92 == 0.405429217622299d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1.3573057358494125d + "'", double93 == 1.3573057358494125d);
    }

    @Test
    public void test2471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2471");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        double[] doubleArray74 = new double[] { 0.405429217622299d, 0.01613264369976175d };
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl75.setDistribution(tDistribution76);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl75.setDistribution(tDistribution78);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl75.t(3.8d, doubleArray88);
        double double96 = tTestImpl0.tTest(doubleArray74, doubleArray88);
        java.lang.Class<?> wildcardClass97 = doubleArray88.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.405429217622299, 0.01613264369976175]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.8463073355328574d + "'", double95 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.36242697487793474d + "'", double96 == 0.36242697487793474d);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2472");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl1.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl1.setDistribution(tDistribution41);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl1.setDistribution(tDistribution43);
        double[] doubleArray45 = null;
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = tTestImpl1.tTest(doubleArray45, doubleArray58, 0.2752975451271431d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
    }

    @Test
    public void test2473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2473");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary19 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double20 = tTestImpl1.tTest(0.9483011827161071d, statisticalSummary19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test2474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2474");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl1.t(0.9302024075262618d, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
    }

    @Test
    public void test2475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2475");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary20 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = tTestImpl0.tTest(statisticalSummary20, statisticalSummary21, (-0.09656583816243881d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.09656583816243881");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test2476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2476");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray46 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl42.tTest(doubleArray46, doubleArray59);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl29.t(doubleArray59, doubleArray74);
        double double77 = tTestImpl26.t((double) 10.0f, doubleArray74);
        double double78 = tTestImpl0.t(0.987358558121667d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl0.setDistribution(tDistribution79);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl0.t(0.3793626154059051d, statisticalSummary82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2806531524060034d + "'", double61 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.357841932773502d + "'", double78 == 1.357841932773502d);
    }

    @Test
    public void test2477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2477");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl56.t((double) 1L, doubleArray89);
        double double92 = tTestImpl0.t(0.15639940166959065d, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(statisticalSummary93, statisticalSummary94, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.3573057358494125d + "'", double91 == 1.3573057358494125d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.3930877336894083d + "'", double92 == 1.3930877336894083d);
    }

    @Test
    public void test2478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2478");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl0.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl0.setDistribution(tDistribution41);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double45 = tTestImpl0.tTest(statisticalSummary43, statisticalSummary44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
    }

    @Test
    public void test2479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2479");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray29 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        double double44 = tTestImpl25.tTest(doubleArray29, doubleArray42);
        double double45 = tTestImpl0.t(0.35800486798369846d, doubleArray42);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary46 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary47 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean49 = tTestImpl0.tTest(statisticalSummary46, statisticalSummary47, 1.357841932773502d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.357841932773502");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.2806531524060034d + "'", double44 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.384536475695448d + "'", double45 == 1.384536475695448d);
    }

    @Test
    public void test2480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2480");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl1.setDistribution(tDistribution39);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary41 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary42 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean44 = tTestImpl1.tTest(statisticalSummary41, statisticalSummary42, 0.5703029263335007d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.5703029263335007");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
    }

    @Test
    public void test2481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2481");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl65.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl65.setDistribution(tDistribution68);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl65.t(3.8d, doubleArray78);
        double double86 = tTestImpl0.t((double) 10L, doubleArray78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary88 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = tTestImpl0.tTest(statisticalSummary87, statisticalSummary88, Double.NaN);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.8463073355328574d + "'", double85 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.5339796283719219d + "'", double86 == 0.5339796283719219d);
    }

    @Test
    public void test2482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2482");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double double41 = tTestImpl25.tTest((double) (short) 100, doubleArray34);
        double double42 = tTestImpl0.t((double) (byte) 1, doubleArray34);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean46 = tTestImpl0.tTest(0.046643592901765896d, statisticalSummary44, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.01613264369976175d + "'", double41 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.987358558121667d + "'", double42 == 0.987358558121667d);
    }

    @Test
    public void test2483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2483");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary54 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean56 = tTestImpl1.tTest((double) 100.0f, statisticalSummary54, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
    }

    @Test
    public void test2484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2484");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        double[] doubleArray26 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray31 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double32 = tTestImpl20.homoscedasticT(doubleArray26, doubleArray31);
        double[] doubleArray33 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double34 = tTestImpl0.homoscedasticT(doubleArray26, doubleArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.405429217622299d) + "'", double32 == (-0.405429217622299d));
    }

    @Test
    public void test2485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2485");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl1.setDistribution(tDistribution94);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = tTestImpl1.tTest(statisticalSummary96, statisticalSummary97, (double) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2486");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double[] doubleArray83 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double84 = tTestImpl63.t((double) '4', doubleArray83);
        double double85 = tTestImpl1.t(0.0d, doubleArray83);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl1.t(statisticalSummary86, statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.09656583816243881d) + "'", double84 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2.2210142777360953d + "'", double85 == 2.2210142777360953d);
    }

    @Test
    public void test2487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2487");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary18 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double19 = tTestImpl0.t(4.533333333333333d, statisticalSummary18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test2488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2488");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray18 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        double[] doubleArray26 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray31 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double32 = tTestImpl20.homoscedasticT(doubleArray26, doubleArray31);
        double double33 = tTestImpl14.tTest(doubleArray18, doubleArray31);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        double double48 = tTestImpl1.t(doubleArray31, doubleArray46);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        tTestImpl1.setDistribution(tDistribution49);
        java.lang.Class<?> wildcardClass51 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.405429217622299d) + "'", double32 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.2806531524060034d + "'", double33 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2489");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray13 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl9.tTest(doubleArray13, doubleArray26);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray48 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl44.tTest(doubleArray48, doubleArray61);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double double78 = tTestImpl31.t(doubleArray61, doubleArray76);
        boolean boolean80 = tTestImpl9.tTest((double) (short) 0, doubleArray61, Double.NaN);
        double double81 = tTestImpl1.t((double) (short) 100, doubleArray61);
        org.apache.commons.math.distribution.TDistribution tDistribution82 = null;
        tTestImpl1.setDistribution(tDistribution82);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = tTestImpl1.tTest((-3.9998096691255283d), statisticalSummary85, (-0.8059002806605887d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.8059002806605887");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2806531524060034d + "'", double28 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.2806531524060034d + "'", double63 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-2.8418588844347075d) + "'", double81 == (-2.8418588844347075d));
    }

    @Test
    public void test2490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2490");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl55.tTest((double) (short) 100, doubleArray64);
        double double72 = tTestImpl41.t((double) 10.0f, doubleArray64);
        boolean boolean74 = tTestImpl0.tTest(0.12673187601587688d, doubleArray64, 0.01613264369976175d);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double79 = tTestImpl0.tTest((double) 100, statisticalSummary78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.01613264369976175d + "'", double71 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5339796283719219d + "'", double72 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2491");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray18 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        double[] doubleArray26 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray31 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double32 = tTestImpl20.homoscedasticT(doubleArray26, doubleArray31);
        double double33 = tTestImpl14.tTest(doubleArray18, doubleArray31);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        double double48 = tTestImpl1.t(doubleArray31, doubleArray46);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary50 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double51 = tTestImpl1.tTest((double) (-1L), statisticalSummary50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.405429217622299d) + "'", double32 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.2806531524060034d + "'", double33 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test2492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2492");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl1.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl1.setDistribution(tDistribution79);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl1.t(statisticalSummary81, statisticalSummary82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
    }

    @Test
    public void test2493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2493");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = tTestImpl0.tTest(0.5172120199559697d, statisticalSummary20, 1.5d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.5");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test2494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2494");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl23.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray45 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        double double60 = tTestImpl41.tTest(doubleArray45, doubleArray58);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl28.t(doubleArray58, doubleArray73);
        double double76 = tTestImpl23.t(0.07560555610353314d, doubleArray58);
        double double77 = tTestImpl0.t((double) (short) 10, doubleArray58);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl0.homoscedasticTTest(statisticalSummary78, statisticalSummary79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.2806531524060034d + "'", double60 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.3965146696271626d + "'", double76 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
    }

    @Test
    public void test2495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2495");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl23.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray45 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        double double60 = tTestImpl41.tTest(doubleArray45, doubleArray58);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl28.t(doubleArray58, doubleArray73);
        double double76 = tTestImpl23.t(0.07560555610353314d, doubleArray58);
        double double77 = tTestImpl0.t((double) (short) 10, doubleArray58);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = tTestImpl0.tTest(statisticalSummary78, statisticalSummary79, 0.07560555610353314d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.2806531524060034d + "'", double60 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.3965146696271626d + "'", double76 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
    }

    @Test
    public void test2496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2496");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl0.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl0.setDistribution(tDistribution41);
        double[] doubleArray45 = new double[] { 1.3385956498818976d };
        // The following exception was thrown during execution in test generation
        try {
            double double46 = tTestImpl0.t(1.6198140498569726d, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.3385956498818976]");
    }

    @Test
    public void test2497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2497");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        tTestImpl0.setDistribution(tDistribution36);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl0.setDistribution(tDistribution38);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary41 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double42 = tTestImpl0.tTest((double) (short) 100, statisticalSummary41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
    }

    @Test
    public void test2498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2498");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = tTestImpl1.tTest((double) 1, statisticalSummary60, 0.9675565918996828d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9675565918996828");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2499");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double59 = tTestImpl1.tTest(0.5703029263335007d, statisticalSummary58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2500");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary2 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary3 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double4 = tTestImpl1.t(statisticalSummary2, statisticalSummary3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
}

