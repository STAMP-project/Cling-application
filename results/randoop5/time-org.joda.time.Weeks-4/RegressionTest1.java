import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks20 = weeks6.multipliedBy((-100));
        org.joda.time.Period period21 = weeks6.toPeriod();
        int int22 = weeks6.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = weeks22.minus(weeks23);
        java.lang.String str26 = weeks25.toString();
        int int27 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        int int28 = weeks25.getWeeks();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks31.dividedBy((int) '4');
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks38 = weeks36.dividedBy((int) '4');
        int int39 = weeks36.size();
        org.joda.time.Weeks weeks40 = weeks33.plus(weeks36);
        boolean boolean41 = weeks25.isLessThan(weeks36);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-4W" + "'", str26, "P-4W");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-4) + "'", int28 == (-4));
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks18.negated();
        org.joda.time.Weeks weeks22 = weeks1.plus(weeks21);
        org.joda.time.Weeks weeks24 = weeks22.dividedBy((-3));
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType26 = weeks25.getPeriodType();
        org.joda.time.Weeks weeks28 = weeks25.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks30 = weeks25.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod31 = weeks25.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType32 = weeks25.getFieldType();
        org.joda.time.PeriodType periodType33 = weeks25.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType34 = weeks25.getFieldType();
        org.joda.time.Weeks weeks35 = weeks25.negated();
        boolean boolean36 = weeks22.isLessThan(weeks35);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = weeks35.getValue((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        int int28 = weeks6.size();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType30 = weeks29.getPeriodType();
        org.joda.time.Weeks weeks32 = weeks29.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks34 = weeks29.dividedBy((int) 'a');
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks35.plus(weeks36);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        boolean boolean53 = weeks35.isGreaterThan(weeks51);
        int int54 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.DurationFieldType durationFieldType55 = weeks34.getFieldType();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks57 = weeks34.plus(weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks60.dividedBy((int) '4');
        int int63 = weeks60.size();
        org.joda.time.Period period64 = weeks60.toPeriod();
        org.joda.time.DurationFieldType durationFieldType65 = weeks60.getFieldType();
        org.joda.time.Weeks weeks66 = weeks56.plus(weeks60);
        org.joda.time.Weeks weeks67 = weeks6.plus(weeks66);
        org.joda.time.Weeks weeks69 = weeks66.minus(0);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        org.joda.time.Weeks weeks76 = weeks74.dividedBy((int) '4');
        int int77 = weeks74.size();
        org.joda.time.Weeks weeks78 = weeks74.negated();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks80 = weeks79.negated();
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks80);
        org.joda.time.Weeks weeks83 = weeks81.dividedBy((int) '4');
        int int84 = weeks81.size();
        org.joda.time.Weeks weeks85 = weeks81.negated();
        boolean boolean86 = weeks78.isGreaterThan(weeks81);
        org.joda.time.DurationFieldType durationFieldType87 = weeks78.getFieldType();
        int int88 = weeks71.get(durationFieldType87);
        org.joda.time.Weeks weeks90 = weeks71.plus((int) (byte) 100);
        org.joda.time.Weeks weeks92 = weeks90.multipliedBy(1);
        int int93 = weeks69.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks90);
        org.joda.time.MutablePeriod mutablePeriod94 = weeks90.toMutablePeriod();
        org.joda.time.Weeks weeks96 = weeks90.dividedBy((int) (short) -1);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod94);
        org.junit.Assert.assertNotNull(weeks96);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.MutablePeriod mutablePeriod3 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = weeks7.minus(weeks8);
        org.joda.time.DurationFieldType durationFieldType11 = weeks8.getFieldType();
        boolean boolean12 = weeks5.isSupported(durationFieldType11);
        org.joda.time.Weeks weeks14 = weeks5.multipliedBy((int) (short) 100);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        int int19 = weeks18.size();
        java.lang.String str20 = weeks18.toString();
        java.lang.String str21 = weeks18.toString();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks23.minus((int) '4');
        org.joda.time.Weeks weeks27 = weeks18.minus(weeks23);
        org.joda.time.Weeks weeks29 = weeks18.minus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType30 = weeks18.getFieldType();
        int int31 = weeks14.get(durationFieldType30);
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeksIn(readableInterval32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        boolean boolean42 = weeks34.isLessThan(weeks40);
        org.joda.time.Weeks weeks43 = weeks33.minus(weeks40);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.MutablePeriod mutablePeriod48 = weeks47.toMutablePeriod();
        org.joda.time.Weeks weeks50 = weeks47.multipliedBy(0);
        org.joda.time.Weeks weeks51 = weeks45.minus(weeks50);
        int int52 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        org.joda.time.Weeks weeks53 = weeks51.negated();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.parseWeeks("P-4W");
        boolean boolean56 = weeks53.equals((java.lang.Object) "P-4W");
        org.joda.time.Weeks weeks58 = weeks53.multipliedBy(0);
        int int59 = weeks53.getWeeks();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks65 = weeks64.negated();
        org.joda.time.Weeks weeks66 = weeks63.minus(weeks64);
        org.joda.time.DurationFieldType durationFieldType67 = weeks64.getFieldType();
        boolean boolean68 = weeks61.isSupported(durationFieldType67);
        org.joda.time.Weeks weeks70 = weeks61.multipliedBy((int) (short) 100);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        int int75 = weeks74.size();
        java.lang.String str76 = weeks74.toString();
        java.lang.String str77 = weeks74.toString();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks79);
        org.joda.time.Weeks weeks82 = weeks79.minus((int) '4');
        org.joda.time.Weeks weeks83 = weeks74.minus(weeks79);
        org.joda.time.Weeks weeks85 = weeks74.minus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType86 = weeks74.getFieldType();
        int int87 = weeks70.get(durationFieldType86);
        int int88 = weeks53.get(durationFieldType86);
        int int89 = weeks14.get(durationFieldType86);
        boolean boolean90 = weeks1.isGreaterThan(weeks14);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P-3W" + "'", str20, "P-3W");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3200 + "'", int31 == 3200);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "P-3W" + "'", str76, "P-3W");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "P-3W" + "'", str77, "P-3W");
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 3200 + "'", int87 == 3200);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 3200 + "'", int89 == 3200);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        int int5 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks2);
        org.joda.time.Weeks weeks7 = weeks0.minus((int) ' ');
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType9 = weeks8.getPeriodType();
        org.joda.time.Weeks weeks11 = weeks8.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks13 = weeks8.dividedBy((int) 'a');
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        boolean boolean17 = weeks15.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        boolean boolean23 = weeks15.isLessThan(weeks21);
        org.joda.time.Weeks weeks24 = weeks14.plus(weeks15);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        int int31 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks30);
        boolean boolean32 = weeks14.isGreaterThan(weeks30);
        int int33 = weeks13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        boolean boolean42 = weeks34.isLessThan(weeks40);
        org.joda.time.Weeks weeks43 = weeks40.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.MutablePeriod mutablePeriod46 = weeks45.toMutablePeriod();
        org.joda.time.Weeks weeks47 = weeks43.plus(weeks45);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks49 = weeks13.minus(weeks43);
        org.joda.time.Duration duration50 = weeks49.toStandardDuration();
        org.joda.time.Period period51 = weeks49.toPeriod();
        org.joda.time.Weeks weeks52 = weeks7.minus(weeks49);
        org.joda.time.MutablePeriod mutablePeriod53 = weeks7.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType54 = weeks7.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(durationFieldType54);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-3));
        org.joda.time.Weeks weeks3 = weeks1.plus(0);
        org.joda.time.PeriodType periodType4 = weeks3.getPeriodType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks0.multipliedBy(3);
        org.joda.time.Weeks weeks24 = weeks0.dividedBy((-927));
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.weeks((-1));
        int int27 = weeks26.size();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks30.dividedBy((int) '4');
        int int33 = weeks30.size();
        org.joda.time.Period period34 = weeks30.toPeriod();
        org.joda.time.DurationFieldType durationFieldType35 = weeks30.getFieldType();
        org.joda.time.Weeks weeks36 = weeks26.minus(weeks30);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        boolean boolean39 = weeks37.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        boolean boolean45 = weeks37.isLessThan(weeks43);
        org.joda.time.Weeks weeks46 = weeks43.negated();
        org.joda.time.Weeks weeks47 = weeks26.plus(weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.Weeks weeks55 = weeks52.minus(weeks53);
        boolean boolean56 = weeks49.isLessThan(weeks52);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType58 = weeks57.getPeriodType();
        org.joda.time.Weeks weeks60 = weeks57.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks62 = weeks57.dividedBy((int) 'a');
        boolean boolean63 = weeks49.isGreaterThan(weeks57);
        boolean boolean64 = weeks47.isLessThan(weeks57);
        org.joda.time.Weeks weeks65 = weeks0.minus(weeks47);
        org.joda.time.Weeks weeks67 = weeks47.plus((int) (byte) 10);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks72 = weeks70.dividedBy((int) '4');
        org.joda.time.Weeks weeks74 = weeks70.multipliedBy((int) (short) 0);
        int int75 = weeks70.size();
        int int76 = weeks70.getWeeks();
        int int77 = weeks47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks70);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType79 = weeks70.getFieldType(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-3) + "'", int76 == (-3));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        int int28 = weeks6.size();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType30 = weeks29.getPeriodType();
        org.joda.time.Weeks weeks32 = weeks29.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks34 = weeks29.dividedBy((int) 'a');
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks35.plus(weeks36);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        boolean boolean53 = weeks35.isGreaterThan(weeks51);
        int int54 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.DurationFieldType durationFieldType55 = weeks34.getFieldType();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks57 = weeks34.plus(weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks60.dividedBy((int) '4');
        int int63 = weeks60.size();
        org.joda.time.Period period64 = weeks60.toPeriod();
        org.joda.time.DurationFieldType durationFieldType65 = weeks60.getFieldType();
        org.joda.time.Weeks weeks66 = weeks56.plus(weeks60);
        org.joda.time.Weeks weeks67 = weeks6.plus(weeks66);
        org.joda.time.Weeks weeks69 = weeks66.minus(0);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        org.joda.time.Weeks weeks76 = weeks74.dividedBy((int) '4');
        int int77 = weeks74.size();
        org.joda.time.Weeks weeks78 = weeks74.negated();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks80 = weeks79.negated();
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks80);
        org.joda.time.Weeks weeks83 = weeks81.dividedBy((int) '4');
        int int84 = weeks81.size();
        org.joda.time.Weeks weeks85 = weeks81.negated();
        boolean boolean86 = weeks78.isGreaterThan(weeks81);
        org.joda.time.DurationFieldType durationFieldType87 = weeks78.getFieldType();
        int int88 = weeks71.get(durationFieldType87);
        org.joda.time.Weeks weeks90 = weeks71.plus((int) (byte) 100);
        org.joda.time.Weeks weeks92 = weeks90.multipliedBy(1);
        int int93 = weeks69.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks90);
        org.joda.time.PeriodType periodType94 = weeks90.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(periodType94);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = weeks3.dividedBy(1);
        org.joda.time.Weeks weeks11 = weeks3.minus((int) 'a');
        org.joda.time.Weeks weeks13 = weeks11.minus((int) (short) 1);
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.DurationFieldType durationFieldType18 = weeks17.getFieldType();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = weeks19.getFieldType();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        boolean boolean29 = weeks21.isLessThan(weeks27);
        org.joda.time.Weeks weeks30 = weeks27.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.MutablePeriod mutablePeriod33 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks34 = weeks30.plus(weeks32);
        org.joda.time.Weeks weeks35 = weeks19.plus(weeks34);
        org.joda.time.Weeks weeks37 = weeks34.dividedBy((int) (short) 100);
        boolean boolean38 = weeks17.isGreaterThan(weeks34);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = weeks42.minus(weeks43);
        org.joda.time.DurationFieldType durationFieldType46 = weeks43.getFieldType();
        boolean boolean47 = weeks40.isSupported(durationFieldType46);
        int int48 = weeks17.get(durationFieldType46);
        boolean boolean49 = weeks13.isSupported(durationFieldType46);
        org.joda.time.Weeks weeks51 = weeks13.multipliedBy((int) ' ');
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-3) + "'", int48 == (-3));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(weeks51);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks20 = weeks0.multipliedBy((-100));
        org.joda.time.MutablePeriod mutablePeriod21 = weeks0.toMutablePeriod();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks24.dividedBy((int) '4');
        int int27 = weeks24.size();
        org.joda.time.Weeks weeks28 = weeks24.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks31.dividedBy((int) '4');
        int int34 = weeks31.size();
        org.joda.time.Weeks weeks35 = weeks31.negated();
        boolean boolean36 = weeks28.isGreaterThan(weeks31);
        org.joda.time.DurationFieldType durationFieldType37 = weeks28.getFieldType();
        org.joda.time.Weeks weeks39 = weeks28.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.weeks((-1));
        int int42 = weeks41.size();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks47 = weeks45.dividedBy((int) '4');
        int int48 = weeks45.size();
        org.joda.time.Period period49 = weeks45.toPeriod();
        org.joda.time.DurationFieldType durationFieldType50 = weeks45.getFieldType();
        org.joda.time.Weeks weeks51 = weeks41.minus(weeks45);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        boolean boolean54 = weeks52.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        boolean boolean60 = weeks52.isLessThan(weeks58);
        org.joda.time.Weeks weeks61 = weeks58.negated();
        org.joda.time.Weeks weeks62 = weeks41.plus(weeks61);
        org.joda.time.Weeks weeks63 = weeks39.plus(weeks62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.TWO;
        int int65 = weeks64.size();
        org.joda.time.Weeks weeks67 = weeks64.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks68 = weeks62.plus(weeks64);
        int int69 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks68);
        org.joda.time.PeriodType periodType70 = weeks68.getPeriodType();
        int int71 = weeks68.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType23 = weeks20.getFieldType(0);
        org.joda.time.Duration duration24 = weeks20.toStandardDuration();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = weeks25.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        boolean boolean29 = weeks27.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        java.lang.String str34 = weeks33.toString();
        boolean boolean35 = weeks27.isLessThan(weeks33);
        org.joda.time.Weeks weeks36 = weeks33.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.MutablePeriod mutablePeriod39 = weeks38.toMutablePeriod();
        org.joda.time.Weeks weeks40 = weeks36.plus(weeks38);
        org.joda.time.Weeks weeks41 = weeks25.plus(weeks40);
        org.joda.time.Weeks weeks43 = weeks40.plus((int) (short) 10);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        boolean boolean47 = weeks45.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        java.lang.String str52 = weeks51.toString();
        boolean boolean53 = weeks45.isLessThan(weeks51);
        org.joda.time.Weeks weeks54 = weeks44.plus(weeks45);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.ONE;
        int int61 = weeks58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks60);
        boolean boolean62 = weeks44.isGreaterThan(weeks60);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Period period64 = weeks44.toPeriod();
        boolean boolean65 = weeks40.isLessThan(weeks44);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        boolean boolean68 = weeks66.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        java.lang.String str73 = weeks72.toString();
        org.joda.time.Weeks weeks74 = weeks66.plus(weeks72);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks76 = weeks75.negated();
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks76);
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks76);
        java.lang.String str79 = weeks78.toString();
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.ONE;
        int int81 = weeks78.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks80);
        org.joda.time.Weeks weeks83 = weeks80.plus((int) (short) -1);
        int int84 = weeks66.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks83);
        org.joda.time.Weeks weeks86 = weeks83.plus((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType87 = weeks86.getFieldType();
        boolean boolean88 = weeks44.isSupported(durationFieldType87);
        int int89 = weeks20.get(durationFieldType87);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "P-3W" + "'", str34, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "P-3W" + "'", str52, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "P-3W" + "'", str73, "P-3W");
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "P-3W" + "'", str79, "P-3W");
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 103 + "'", int89 == 103);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks21 = weeks11.negated();
        org.joda.time.Weeks weeks22 = weeks11.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        // The following exception was thrown during execution in test generation
        try {
            int int25 = weeks11.getValue(12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 12");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        int int12 = weeks11.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Period period19 = weeks15.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = weeks15.getFieldType();
        org.joda.time.Weeks weeks21 = weeks11.minus(weeks15);
        org.joda.time.Weeks weeks23 = weeks11.minus((int) (byte) 100);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        org.joda.time.DurationFieldType durationFieldType31 = weeks28.getFieldType(0);
        boolean boolean32 = weeks25.isSupported(durationFieldType31);
        boolean boolean33 = weeks11.equals((java.lang.Object) weeks25);
        boolean boolean34 = weeks0.isLessThan(weeks25);
        org.joda.time.Weeks weeks36 = weeks25.multipliedBy(3);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        boolean boolean39 = weeks37.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        boolean boolean45 = weeks37.isLessThan(weeks43);
        org.joda.time.Weeks weeks46 = weeks36.plus(weeks43);
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = weeks43.get(durationFieldType47);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        int int24 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        java.lang.String str25 = weeks21.toString();
        org.joda.time.Weeks weeks27 = weeks21.dividedBy(1);
        org.joda.time.Weeks weeks29 = weeks21.minus((int) 'a');
        int int30 = weeks17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks21);
        org.joda.time.Duration duration31 = weeks21.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(duration31);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        int int19 = weeks17.getWeeks();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks31.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks20.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.dividedBy((int) (short) 100);
        boolean boolean39 = weeks17.isGreaterThan(weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = weeks40.getFieldType();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = weeks48.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.MutablePeriod mutablePeriod54 = weeks53.toMutablePeriod();
        org.joda.time.Weeks weeks55 = weeks51.plus(weeks53);
        org.joda.time.Weeks weeks56 = weeks40.plus(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        boolean boolean61 = weeks59.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        java.lang.String str66 = weeks65.toString();
        org.joda.time.Weeks weeks67 = weeks59.plus(weeks65);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        int int74 = weeks71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks73);
        org.joda.time.Weeks weeks76 = weeks73.plus((int) (short) -1);
        int int77 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks76);
        org.joda.time.Weeks weeks79 = weeks59.plus((int) (short) 100);
        org.joda.time.Weeks weeks81 = weeks59.multipliedBy(3);
        org.joda.time.Weeks weeks82 = weeks58.minus(weeks59);
        boolean boolean83 = weeks38.isGreaterThan(weeks59);
        int int84 = weeks59.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P-3W" + "'", str66, "P-3W");
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 3 + "'", int84 == 3);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks16 = weeks11.minus((int) (byte) -1);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks17.plus(weeks18);
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = weeks30.minus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.PeriodType periodType36 = weeks34.getPeriodType();
        boolean boolean37 = weeks30.isGreaterThan(weeks34);
        org.joda.time.Weeks weeks39 = weeks34.minus((int) (byte) 0);
        org.joda.time.Weeks weeks40 = weeks27.plus(weeks39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType42 = weeks41.getPeriodType();
        org.joda.time.Weeks weeks44 = weeks41.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks46 = weeks41.dividedBy((int) 'a');
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        boolean boolean50 = weeks48.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        boolean boolean56 = weeks48.isLessThan(weeks54);
        org.joda.time.Weeks weeks57 = weeks47.plus(weeks48);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.ONE;
        int int64 = weeks61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks63);
        boolean boolean65 = weeks47.isGreaterThan(weeks63);
        int int66 = weeks46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        org.joda.time.DurationFieldType durationFieldType67 = weeks46.getFieldType();
        org.joda.time.Weeks weeks68 = weeks27.plus(weeks46);
        org.joda.time.Weeks weeks69 = weeks11.plus(weeks46);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType71 = weeks69.getFieldType((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P3081W");
        org.joda.time.Period period2 = weeks1.toPeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(period2);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType5 = weeks4.getPeriodType();
        org.joda.time.Weeks weeks7 = weeks4.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks9 = weeks4.dividedBy((int) 'a');
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks10.plus(weeks11);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        int int27 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        boolean boolean28 = weeks10.isGreaterThan(weeks26);
        int int29 = weeks9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks10);
        org.joda.time.DurationFieldType durationFieldType30 = weeks9.getFieldType();
        int int31 = weeks3.get(durationFieldType30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = weeks35.minus(weeks36);
        boolean boolean39 = weeks32.isLessThan(weeks35);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType41 = weeks40.getPeriodType();
        org.joda.time.Weeks weeks43 = weeks40.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks45 = weeks40.dividedBy((int) 'a');
        boolean boolean46 = weeks32.isGreaterThan(weeks40);
        int int47 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks40);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(9);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks4 = weeks2.dividedBy(900);
        java.lang.Class<?> wildcardClass5 = weeks4.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks1.minus((int) '4');
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((-3));
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.parseWeeks("P-3W");
        boolean boolean14 = weeks5.isLessThan(weeks13);
        int int15 = weeks5.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        java.lang.String str6 = weeks4.toString();
        org.joda.time.Duration duration7 = weeks4.toStandardDuration();
        java.lang.String str8 = weeks4.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType10 = weeks4.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-4W" + "'", str6, "P-4W");
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-4W" + "'", str8, "P-4W");
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks27 = weeks5.plus((int) 'a');
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks27);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType24 = weeks2.getFieldType();
        org.joda.time.Weeks weeks25 = null;
        org.joda.time.Weeks weeks26 = weeks2.plus(weeks25);
        int int27 = weeks26.getWeeks();
        org.joda.time.Weeks weeks29 = weeks26.plus((-3));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-3) + "'", int27 == (-3));
        org.junit.Assert.assertNotNull(weeks29);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks4.plus(weeks5);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        boolean boolean22 = weeks4.isGreaterThan(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = weeks23.getFieldType();
        int int25 = weeks20.get(durationFieldType24);
        boolean boolean26 = weeks0.isSupported(durationFieldType24);
        org.joda.time.Weeks weeks28 = weeks0.dividedBy((-1));
        org.joda.time.Weeks weeks30 = weeks0.dividedBy(3);
        org.joda.time.Weeks weeks32 = weeks30.dividedBy(4);
        java.lang.Class<?> wildcardClass33 = weeks32.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks4.plus(weeks5);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        boolean boolean22 = weeks4.isGreaterThan(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = weeks23.getFieldType();
        int int25 = weeks20.get(durationFieldType24);
        boolean boolean26 = weeks0.isSupported(durationFieldType24);
        org.joda.time.Weeks weeks28 = weeks0.dividedBy((-1));
        org.joda.time.Weeks weeks30 = weeks0.dividedBy(3);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        java.lang.String str36 = weeks35.toString();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.weeks((-1));
        int int39 = weeks38.size();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks44 = weeks42.dividedBy((int) '4');
        int int45 = weeks42.size();
        org.joda.time.Period period46 = weeks42.toPeriod();
        org.joda.time.DurationFieldType durationFieldType47 = weeks42.getFieldType();
        org.joda.time.Weeks weeks48 = weeks38.minus(weeks42);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        boolean boolean51 = weeks49.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        java.lang.String str56 = weeks55.toString();
        boolean boolean57 = weeks49.isLessThan(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.negated();
        org.joda.time.Weeks weeks59 = weeks38.plus(weeks58);
        boolean boolean60 = weeks35.isLessThan(weeks59);
        org.joda.time.MutablePeriod mutablePeriod61 = weeks35.toMutablePeriod();
        int int62 = weeks35.getWeeks();
        org.joda.time.Weeks weeks64 = weeks35.multipliedBy((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType65 = weeks64.getFieldType();
        int int66 = weeks30.get(durationFieldType65);
        org.joda.time.Weeks weeks67 = null;
        org.joda.time.Weeks weeks68 = weeks30.plus(weeks67);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "P-3W" + "'", str36, "P-3W");
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-3) + "'", int62 == (-3));
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(weeks68);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        int int12 = weeks11.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Period period19 = weeks15.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = weeks15.getFieldType();
        org.joda.time.Weeks weeks21 = weeks11.minus(weeks15);
        org.joda.time.Weeks weeks23 = weeks11.minus((int) (byte) 100);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        org.joda.time.DurationFieldType durationFieldType31 = weeks28.getFieldType(0);
        boolean boolean32 = weeks25.isSupported(durationFieldType31);
        boolean boolean33 = weeks11.equals((java.lang.Object) weeks25);
        boolean boolean34 = weeks0.isLessThan(weeks25);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks39 = weeks37.dividedBy((int) '4');
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks44 = weeks42.dividedBy((int) '4');
        int int45 = weeks42.size();
        org.joda.time.Weeks weeks46 = weeks39.plus(weeks42);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.DurationFieldType durationFieldType52 = weeks51.getFieldType();
        org.joda.time.DurationFieldType durationFieldType54 = weeks51.getFieldType(0);
        boolean boolean55 = weeks48.isSupported(durationFieldType54);
        boolean boolean56 = weeks42.isSupported(durationFieldType54);
        org.joda.time.PeriodType periodType57 = weeks42.getPeriodType();
        boolean boolean58 = weeks25.isLessThan(weeks42);
        org.joda.time.Weeks weeks60 = weeks25.plus((-3));
        int int61 = weeks60.getWeeks();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        org.joda.time.Weeks weeks64 = weeks60.minus(weeks63);
        java.lang.Class<?> wildcardClass65 = weeks60.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 97 + "'", int61 == 97);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        int int12 = weeks11.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Period period19 = weeks15.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = weeks15.getFieldType();
        org.joda.time.Weeks weeks21 = weeks11.minus(weeks15);
        org.joda.time.Weeks weeks23 = weeks11.minus((int) (byte) 100);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        org.joda.time.DurationFieldType durationFieldType31 = weeks28.getFieldType(0);
        boolean boolean32 = weeks25.isSupported(durationFieldType31);
        boolean boolean33 = weeks11.equals((java.lang.Object) weeks25);
        boolean boolean34 = weeks0.isLessThan(weeks25);
        org.joda.time.Weeks weeks36 = weeks25.multipliedBy(3);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        boolean boolean39 = weeks37.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        boolean boolean45 = weeks37.isLessThan(weeks43);
        org.joda.time.Weeks weeks46 = weeks36.plus(weeks43);
        int int47 = weeks36.size();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = weeks49.minus(weeks50);
        int int53 = weeks52.size();
        org.joda.time.Weeks weeks54 = weeks52.negated();
        org.joda.time.DurationFieldType durationFieldType55 = weeks54.getFieldType();
        org.joda.time.Weeks weeks56 = weeks36.minus(weeks54);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks7 = weeks2.multipliedBy((int) (short) -1);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        boolean boolean10 = weeks8.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = weeks8.plus(weeks14);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks22.plus((int) (short) -1);
        int int26 = weeks8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks8.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks28.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType31 = weeks28.getFieldType(0);
        org.joda.time.Duration duration32 = weeks28.toStandardDuration();
        boolean boolean33 = weeks2.isGreaterThan(weeks28);
        java.lang.Class<?> wildcardClass34 = weeks2.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P-1W");
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        java.lang.String str6 = weeks5.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((-1));
        int int9 = weeks8.size();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks14 = weeks12.dividedBy((int) '4');
        int int15 = weeks12.size();
        org.joda.time.Period period16 = weeks12.toPeriod();
        org.joda.time.DurationFieldType durationFieldType17 = weeks12.getFieldType();
        org.joda.time.Weeks weeks18 = weeks8.minus(weeks12);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        boolean boolean27 = weeks19.isLessThan(weeks25);
        org.joda.time.Weeks weeks28 = weeks25.negated();
        org.joda.time.Weeks weeks29 = weeks8.plus(weeks28);
        boolean boolean30 = weeks5.isLessThan(weeks29);
        boolean boolean31 = weeks1.equals((java.lang.Object) boolean30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        org.joda.time.Weeks weeks42 = weeks32.dividedBy(100);
        org.joda.time.Duration duration43 = weeks42.toStandardDuration();
        boolean boolean44 = weeks1.isLessThan(weeks42);
        int int45 = weeks1.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.parseWeeks("P-3W");
        boolean boolean14 = weeks5.isLessThan(weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks19 = weeks16.minus(1030);
        org.joda.time.Weeks weeks20 = weeks15.plus(weeks16);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks22 = weeks20.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks17.plus(weeks18);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        boolean boolean30 = weeks27.isSupported(durationFieldType29);
        int int31 = weeks15.get(durationFieldType29);
        org.joda.time.Weeks weeks33 = weeks15.minus((int) ' ');
        org.joda.time.Weeks weeks35 = weeks15.minus((int) (short) 10);
        org.joda.time.Weeks weeks37 = weeks15.dividedBy((-2));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType39 = weeks37.getFieldType(101);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 101");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks31.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks20.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.plus((int) (short) 10);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.DurationFieldType durationFieldType42 = weeks41.getFieldType();
        org.joda.time.DurationFieldType durationFieldType44 = weeks41.getFieldType(0);
        int int45 = weeks35.get(durationFieldType44);
        int int46 = weeks18.get(durationFieldType44);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(weeks47);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks5 = weeks0.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = weeks7.minus(weeks8);
        org.joda.time.DurationFieldType durationFieldType11 = weeks8.getFieldType();
        int int12 = weeks5.get(durationFieldType11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        java.lang.String str17 = weeks16.toString();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.ONE;
        int int19 = weeks16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks18.plus((int) (short) -1);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType23 = weeks22.getPeriodType();
        org.joda.time.Weeks weeks25 = weeks22.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks27 = weeks22.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod28 = weeks22.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType29 = weeks22.getFieldType();
        org.joda.time.PeriodType periodType30 = weeks22.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType31 = weeks22.getFieldType();
        boolean boolean32 = weeks21.isSupported(durationFieldType31);
        int int33 = weeks5.get(durationFieldType31);
        org.joda.time.Weeks weeks35 = weeks5.plus(25);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 300 + "'", int12 == 300);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P-3W" + "'", str17, "P-3W");
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 300 + "'", int33 == 300);
        org.junit.Assert.assertNotNull(weeks35);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        int int14 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Duration duration15 = weeks11.toStandardDuration();
        org.joda.time.Weeks weeks17 = weeks11.minus(1030);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        boolean boolean27 = weeks19.isLessThan(weeks25);
        org.joda.time.Weeks weeks28 = weeks18.plus(weeks19);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        int int35 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks34);
        boolean boolean36 = weeks18.isGreaterThan(weeks34);
        org.joda.time.Weeks weeks38 = weeks18.plus((int) '#');
        org.joda.time.Weeks weeks39 = weeks17.minus(weeks18);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        boolean boolean41 = weeks17.isSupported(durationFieldType40);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks48 = weeks46.dividedBy((int) '4');
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks53 = weeks51.dividedBy((int) '4');
        int int54 = weeks51.size();
        org.joda.time.Weeks weeks55 = weeks48.plus(weeks51);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.DurationFieldType durationFieldType61 = weeks60.getFieldType();
        org.joda.time.DurationFieldType durationFieldType63 = weeks60.getFieldType(0);
        boolean boolean64 = weeks57.isSupported(durationFieldType63);
        boolean boolean65 = weeks51.isSupported(durationFieldType63);
        boolean boolean66 = weeks43.isSupported(durationFieldType63);
        boolean boolean67 = weeks17.isSupported(durationFieldType63);
        org.joda.time.Period period68 = weeks17.toPeriod();
        int int70 = weeks17.getValue(0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1033) + "'", int70 == (-1033));
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = weeks19.getFieldType();
        int int21 = weeks16.get(durationFieldType20);
        org.joda.time.Weeks weeks23 = weeks16.minus((int) (byte) -1);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period25 = weeks24.toPeriod();
        boolean boolean26 = weeks16.isLessThan(weeks24);
        int int27 = weeks16.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks21 = weeks11.negated();
        org.joda.time.Weeks weeks22 = weeks11.negated();
        org.joda.time.MutablePeriod mutablePeriod23 = weeks22.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod24 = weeks22.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = weeks19.negated();
        java.lang.Class<?> wildcardClass21 = weeks20.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = weeks1.multipliedBy(0);
        org.joda.time.Weeks weeks6 = weeks4.minus(100);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks19.dividedBy((int) '4');
        int int22 = weeks19.size();
        org.joda.time.Weeks weeks23 = weeks19.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks26.dividedBy((int) '4');
        int int29 = weeks26.size();
        org.joda.time.Weeks weeks30 = weeks26.negated();
        boolean boolean31 = weeks23.isGreaterThan(weeks26);
        org.joda.time.DurationFieldType durationFieldType32 = weeks23.getFieldType();
        int int33 = weeks16.get(durationFieldType32);
        int int34 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.Weeks weeks36 = weeks16.minus(9);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        boolean boolean39 = weeks37.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = weeks37.plus(weeks43);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        org.joda.time.Weeks weeks54 = weeks51.plus((int) (short) -1);
        int int55 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks54);
        org.joda.time.Weeks weeks57 = weeks37.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod58 = weeks57.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType60 = weeks57.getFieldType(0);
        org.joda.time.Weeks weeks61 = weeks57.negated();
        org.joda.time.Weeks weeks63 = weeks57.dividedBy((int) 'a');
        boolean boolean64 = weeks16.isLessThan(weeks57);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        boolean boolean16 = weeks14.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = weeks14.plus(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.ONE;
        int int29 = weeks26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.Weeks weeks31 = weeks28.plus((int) (short) -1);
        int int32 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks31);
        org.joda.time.Weeks weeks34 = weeks14.plus((int) (short) 100);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        int int38 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks36);
        org.joda.time.Weeks weeks40 = weeks36.minus((int) (short) 1);
        org.joda.time.Weeks weeks42 = weeks40.minus(2);
        boolean boolean43 = weeks11.isLessThan(weeks42);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.Weeks weeks24 = weeks22.minus(1030);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = weeks25.plus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        int int40 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks39.plus((int) (short) -1);
        int int43 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks25.plus((int) (short) 100);
        org.joda.time.Weeks weeks47 = weeks25.multipliedBy(3);
        int int48 = weeks47.getWeeks();
        int int49 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        org.joda.time.Weeks weeks51 = weeks24.minus(10);
        java.lang.String str52 = weeks51.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 9 + "'", int48 == 9);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "P-937W" + "'", str52, "P-937W");
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks10 = weeks0.negated();
        org.joda.time.Weeks weeks12 = weeks0.multipliedBy(300);
        org.joda.time.Period period13 = weeks0.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        int int24 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.Weeks weeks26 = weeks22.minus((int) (short) 1);
        int int27 = weeks22.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = weeks19.getFieldType();
        int int21 = weeks16.get(durationFieldType20);
        org.joda.time.Weeks weeks23 = weeks16.minus((int) (byte) -1);
        org.joda.time.Weeks weeks25 = weeks23.minus((int) '#');
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType27 = weeks26.getPeriodType();
        org.joda.time.Weeks weeks29 = weeks26.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks31 = weeks26.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod32 = weeks26.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType33 = weeks26.getFieldType();
        org.joda.time.PeriodType periodType34 = weeks26.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType35 = weeks26.getFieldType();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.weeks((-1));
        int int38 = weeks37.size();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks43 = weeks41.dividedBy((int) '4');
        int int44 = weeks41.size();
        org.joda.time.Period period45 = weeks41.toPeriod();
        org.joda.time.DurationFieldType durationFieldType46 = weeks41.getFieldType();
        org.joda.time.Weeks weeks47 = weeks37.minus(weeks41);
        org.joda.time.Weeks weeks49 = weeks37.minus((int) (byte) 100);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.DurationFieldType durationFieldType55 = weeks54.getFieldType();
        org.joda.time.DurationFieldType durationFieldType57 = weeks54.getFieldType(0);
        boolean boolean58 = weeks51.isSupported(durationFieldType57);
        boolean boolean59 = weeks37.equals((java.lang.Object) weeks51);
        boolean boolean60 = weeks26.isLessThan(weeks51);
        org.joda.time.Weeks weeks62 = weeks51.multipliedBy(3);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.THREE;
        boolean boolean65 = weeks63.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks67 = weeks66.negated();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        java.lang.String str70 = weeks69.toString();
        boolean boolean71 = weeks63.isLessThan(weeks69);
        org.joda.time.Weeks weeks72 = weeks62.plus(weeks69);
        boolean boolean73 = weeks23.isGreaterThan(weeks69);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "P-3W" + "'", str70, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks0.multipliedBy(3);
        org.joda.time.Weeks weeks24 = weeks0.dividedBy((int) (byte) -1);
        org.joda.time.Weeks weeks26 = weeks24.minus((int) '4');
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType28 = weeks27.getFieldType();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        boolean boolean31 = weeks29.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        java.lang.String str36 = weeks35.toString();
        boolean boolean37 = weeks29.isLessThan(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.MutablePeriod mutablePeriod41 = weeks40.toMutablePeriod();
        org.joda.time.Weeks weeks42 = weeks38.plus(weeks40);
        org.joda.time.Weeks weeks43 = weeks27.plus(weeks42);
        org.joda.time.Weeks weeks45 = weeks42.plus((int) (short) 10);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        boolean boolean49 = weeks47.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        java.lang.String str54 = weeks53.toString();
        boolean boolean55 = weeks47.isLessThan(weeks53);
        org.joda.time.Weeks weeks56 = weeks46.plus(weeks47);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks58 = weeks57.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        java.lang.String str61 = weeks60.toString();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.ONE;
        int int63 = weeks60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks62);
        boolean boolean64 = weeks46.isGreaterThan(weeks62);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Period period66 = weeks46.toPeriod();
        boolean boolean67 = weeks42.isLessThan(weeks46);
        boolean boolean68 = weeks24.equals((java.lang.Object) weeks46);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "P-3W" + "'", str36, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "P-3W" + "'", str54, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "P-3W" + "'", str61, "P-3W");
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.PeriodType periodType7 = weeks5.getPeriodType();
        boolean boolean8 = weeks1.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks10 = weeks5.minus((int) (byte) 0);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks17.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = weeks21.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = weeks21.isSupported(durationFieldType26);
        org.joda.time.Weeks weeks28 = weeks20.minus(weeks21);
        boolean boolean29 = weeks10.isLessThan(weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        int int31 = weeks30.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType26 = weeks5.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks28 = weeks5.plus(weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks31.dividedBy((int) '4');
        int int34 = weeks31.size();
        org.joda.time.Period period35 = weeks31.toPeriod();
        org.joda.time.DurationFieldType durationFieldType36 = weeks31.getFieldType();
        org.joda.time.Weeks weeks37 = weeks27.plus(weeks31);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks43 = weeks40.minus((int) '4');
        org.joda.time.Weeks weeks44 = weeks38.plus(weeks43);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType46 = weeks44.getFieldType(1030);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1030");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.DurationFieldType durationFieldType6 = weeks5.getFieldType();
        org.joda.time.DurationFieldType durationFieldType8 = weeks5.getFieldType(0);
        org.joda.time.Weeks weeks9 = weeks2.plus(weeks5);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((-3));
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        org.joda.time.Weeks weeks50 = weeks42.plus(weeks48);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.ONE;
        int int57 = weeks54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks56);
        org.joda.time.Weeks weeks59 = weeks56.plus((int) (short) -1);
        int int60 = weeks42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks42.plus((int) (short) 100);
        org.joda.time.Weeks weeks64 = weeks42.multipliedBy(3);
        org.joda.time.Weeks weeks65 = weeks5.minus(weeks64);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType67 = weeks66.getPeriodType();
        org.joda.time.Weeks weeks69 = weeks66.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks71 = weeks66.dividedBy((int) 'a');
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        boolean boolean75 = weeks73.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks77 = weeks76.negated();
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        java.lang.String str80 = weeks79.toString();
        boolean boolean81 = weeks73.isLessThan(weeks79);
        org.joda.time.Weeks weeks82 = weeks72.plus(weeks73);
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks84 = weeks83.negated();
        org.joda.time.Weeks weeks85 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks84);
        org.joda.time.Weeks weeks86 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks84);
        java.lang.String str87 = weeks86.toString();
        org.joda.time.Weeks weeks88 = org.joda.time.Weeks.ONE;
        int int89 = weeks86.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks88);
        boolean boolean90 = weeks72.isGreaterThan(weeks88);
        int int91 = weeks71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks72);
        java.lang.String str92 = weeks72.toString();
        org.joda.time.DurationFieldType durationFieldType93 = weeks72.getFieldType();
        boolean boolean94 = weeks5.isSupported(durationFieldType93);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "P-3W" + "'", str80, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "P-3W" + "'", str87, "P-3W");
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "P1W" + "'", str92, "P1W");
        org.junit.Assert.assertNotNull(durationFieldType93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks17.plus(weeks18);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        boolean boolean30 = weeks27.isSupported(durationFieldType29);
        int int31 = weeks15.get(durationFieldType29);
        org.joda.time.Weeks weeks33 = weeks15.minus((int) ' ');
        org.joda.time.Weeks weeks35 = weeks15.minus((int) (short) 10);
        org.joda.time.Weeks weeks37 = weeks15.dividedBy((-2));
        java.lang.Class<?> wildcardClass38 = weeks37.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Period period8 = weeks4.toPeriod();
        org.joda.time.DurationFieldType durationFieldType9 = weeks4.getFieldType();
        org.joda.time.Weeks weeks10 = weeks4.negated();
        int int11 = weeks1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks4);
        boolean boolean13 = weeks4.equals((java.lang.Object) (byte) 100);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType8 = weeks7.getFieldType();
        org.joda.time.DurationFieldType durationFieldType10 = weeks7.getFieldType(0);
        int int11 = weeks0.get(durationFieldType10);
        java.lang.Class<?> wildcardClass12 = durationFieldType10.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = weeks22.minus(weeks23);
        java.lang.String str26 = weeks25.toString();
        int int27 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.DurationFieldType durationFieldType29 = weeks25.getFieldType(0);
        java.lang.String str30 = weeks25.toString();
        int int31 = weeks25.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-4W" + "'", str26, "P-4W");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "P-4W" + "'", str30, "P-4W");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.Weeks weeks28 = weeks18.dividedBy(300);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = weeks13.minus(weeks14);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.PeriodType periodType19 = weeks17.getPeriodType();
        boolean boolean20 = weeks13.isGreaterThan(weeks17);
        org.joda.time.Weeks weeks22 = weeks17.minus((int) (byte) 0);
        org.joda.time.Weeks weeks23 = weeks10.plus(weeks22);
        org.joda.time.Weeks weeks24 = weeks10.negated();
        org.joda.time.Weeks weeks26 = weeks10.multipliedBy(101);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeksIn(readableInterval24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks25.minus(weeks32);
        org.joda.time.Weeks weeks36 = weeks19.plus(weeks25);
        int int37 = weeks19.getWeeks();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        boolean boolean40 = weeks38.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        java.lang.String str45 = weeks44.toString();
        org.joda.time.Weeks weeks46 = weeks38.plus(weeks44);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.ONE;
        int int53 = weeks50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks52);
        org.joda.time.Weeks weeks55 = weeks52.plus((int) (short) -1);
        int int56 = weeks38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks55);
        org.joda.time.Weeks weeks58 = weeks38.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod59 = weeks58.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType61 = weeks58.getFieldType(0);
        org.joda.time.Weeks weeks62 = weeks58.negated();
        int int63 = weeks19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType65 = weeks64.getPeriodType();
        org.joda.time.Weeks weeks67 = weeks64.dividedBy((int) (short) 10);
        boolean boolean68 = weeks19.isGreaterThan(weeks67);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-3W" + "'", str45, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks13.negated();
        org.joda.time.Weeks weeks17 = weeks6.plus(weeks16);
        int int18 = weeks17.getWeeks();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Period period25 = weeks21.toPeriod();
        org.joda.time.DurationFieldType durationFieldType26 = weeks21.getFieldType();
        org.joda.time.PeriodType periodType27 = weeks21.getPeriodType();
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeksIn(readableInterval28);
        org.joda.time.MutablePeriod mutablePeriod30 = weeks29.toMutablePeriod();
        boolean boolean31 = weeks21.isGreaterThan(weeks29);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType33 = weeks32.getFieldType();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        boolean boolean42 = weeks34.isLessThan(weeks40);
        org.joda.time.Weeks weeks43 = weeks40.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.MutablePeriod mutablePeriod46 = weeks45.toMutablePeriod();
        org.joda.time.Weeks weeks47 = weeks43.plus(weeks45);
        org.joda.time.Weeks weeks48 = weeks32.plus(weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        boolean boolean52 = weeks50.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        java.lang.String str57 = weeks56.toString();
        boolean boolean58 = weeks50.isLessThan(weeks56);
        org.joda.time.Weeks weeks59 = weeks49.plus(weeks50);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType61 = weeks60.getFieldType();
        boolean boolean62 = weeks59.isSupported(durationFieldType61);
        int int63 = weeks47.get(durationFieldType61);
        int int64 = weeks29.get(durationFieldType61);
        boolean boolean65 = weeks17.isLessThan(weeks29);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "P-3W" + "'", str57, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        int int7 = weeks2.size();
        org.joda.time.Weeks weeks9 = weeks2.dividedBy((int) (byte) 10);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks14 = weeks12.dividedBy((int) '4');
        int int15 = weeks14.getWeeks();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((-1));
        int int18 = weeks17.size();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Period period25 = weeks21.toPeriod();
        org.joda.time.DurationFieldType durationFieldType26 = weeks21.getFieldType();
        org.joda.time.Weeks weeks27 = weeks17.minus(weeks21);
        org.joda.time.Weeks weeks29 = weeks27.minus((-3));
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.MutablePeriod mutablePeriod41 = weeks40.toMutablePeriod();
        org.joda.time.Weeks weeks42 = weeks36.plus(weeks40);
        org.joda.time.Weeks weeks43 = weeks29.plus(weeks36);
        org.joda.time.Weeks weeks44 = weeks14.minus(weeks43);
        org.joda.time.Weeks weeks45 = null;
        org.joda.time.Weeks weeks46 = weeks43.plus(weeks45);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        boolean boolean49 = weeks47.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        java.lang.String str54 = weeks53.toString();
        org.joda.time.Weeks weeks55 = weeks47.plus(weeks53);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        java.lang.String str60 = weeks59.toString();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.ONE;
        int int62 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks61);
        org.joda.time.Weeks weeks64 = weeks61.plus((int) (short) -1);
        int int65 = weeks47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks64);
        int int66 = weeks64.getWeeks();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = weeks69.get(durationFieldType70);
        int int72 = weeks69.size();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks74 = weeks73.negated();
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks74);
        org.joda.time.DurationFieldType durationFieldType76 = weeks75.getFieldType();
        boolean boolean77 = weeks69.isSupported(durationFieldType76);
        int int78 = weeks64.get(durationFieldType76);
        boolean boolean79 = weeks43.isSupported(durationFieldType76);
        int int80 = weeks9.get(durationFieldType76);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "P-3W" + "'", str54, "P-3W");
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "P-3W" + "'", str60, "P-3W");
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks12 = weeks2.multipliedBy((int) (short) -1);
        boolean boolean13 = weeks1.isLessThan(weeks2);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        int int20 = weeks17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (short) -1);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType24 = weeks23.getPeriodType();
        org.joda.time.Weeks weeks26 = weeks23.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks28 = weeks23.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod29 = weeks23.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType30 = weeks23.getFieldType();
        org.joda.time.PeriodType periodType31 = weeks23.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType32 = weeks23.getFieldType();
        boolean boolean33 = weeks22.isSupported(durationFieldType32);
        int int34 = weeks1.get(durationFieldType32);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        int int14 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Duration duration15 = weeks11.toStandardDuration();
        org.joda.time.Weeks weeks17 = weeks11.minus(1030);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        boolean boolean27 = weeks19.isLessThan(weeks25);
        org.joda.time.Weeks weeks28 = weeks18.plus(weeks19);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        int int35 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks34);
        boolean boolean36 = weeks18.isGreaterThan(weeks34);
        org.joda.time.Weeks weeks38 = weeks18.plus((int) '#');
        org.joda.time.Weeks weeks39 = weeks17.minus(weeks18);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        boolean boolean41 = weeks39.isSupported(durationFieldType40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = weeks42.getFieldType();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        boolean boolean46 = weeks44.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        boolean boolean52 = weeks44.isLessThan(weeks50);
        org.joda.time.Weeks weeks53 = weeks50.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks55 = weeks54.negated();
        org.joda.time.MutablePeriod mutablePeriod56 = weeks55.toMutablePeriod();
        org.joda.time.Weeks weeks57 = weeks53.plus(weeks55);
        org.joda.time.Weeks weeks58 = weeks42.plus(weeks57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        boolean boolean62 = weeks60.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks64 = weeks63.negated();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks64);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks64);
        java.lang.String str67 = weeks66.toString();
        boolean boolean68 = weeks60.isLessThan(weeks66);
        org.joda.time.Weeks weeks69 = weeks59.plus(weeks60);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType71 = weeks70.getFieldType();
        boolean boolean72 = weeks69.isSupported(durationFieldType71);
        int int73 = weeks57.get(durationFieldType71);
        org.joda.time.Weeks weeks75 = weeks57.minus((int) ' ');
        boolean boolean76 = weeks39.isGreaterThan(weeks57);
        org.joda.time.DurationFieldType durationFieldType77 = weeks39.getFieldType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "P-3W" + "'", str67, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(durationFieldType77);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = weeks22.minus(weeks23);
        java.lang.String str26 = weeks25.toString();
        int int27 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType29 = weeks28.getPeriodType();
        org.joda.time.Weeks weeks31 = weeks28.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks33 = weeks28.dividedBy((int) 'a');
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        boolean boolean37 = weeks35.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        java.lang.String str42 = weeks41.toString();
        boolean boolean43 = weeks35.isLessThan(weeks41);
        org.joda.time.Weeks weeks44 = weeks34.plus(weeks35);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.ONE;
        int int51 = weeks48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks50);
        boolean boolean52 = weeks34.isGreaterThan(weeks50);
        int int53 = weeks33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks34);
        org.joda.time.DurationFieldType durationFieldType54 = weeks33.getFieldType();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks56 = weeks33.plus(weeks55);
        boolean boolean57 = weeks25.isLessThan(weeks55);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        boolean boolean60 = weeks58.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks62 = weeks61.negated();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        java.lang.String str65 = weeks64.toString();
        org.joda.time.Weeks weeks66 = weeks58.plus(weeks64);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType70 = weeks69.getPeriodType();
        org.joda.time.Weeks weeks72 = weeks69.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks74 = weeks69.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod75 = weeks69.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType76 = weeks69.getFieldType();
        int int77 = weeks68.get(durationFieldType76);
        int int78 = weeks64.get(durationFieldType76);
        boolean boolean79 = weeks55.isSupported(durationFieldType76);
        int int80 = weeks55.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-4W" + "'", str26, "P-4W");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P-3W" + "'", str42, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "P-3W" + "'", str65, "P-3W");
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks11 = weeks6.dividedBy((int) (short) 10);
        java.lang.Class<?> wildcardClass12 = weeks11.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks21 = weeks11.negated();
        org.joda.time.Weeks weeks22 = weeks11.negated();
        org.joda.time.Period period23 = weeks22.toPeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks11.negated();
        org.joda.time.Weeks weeks15 = weeks13.minus((-3));
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P-937W");
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks18.negated();
        org.joda.time.Weeks weeks22 = weeks1.plus(weeks21);
        org.joda.time.Weeks weeks24 = weeks22.dividedBy((-3));
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType26 = weeks25.getPeriodType();
        org.joda.time.Weeks weeks28 = weeks25.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks30 = weeks25.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod31 = weeks25.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType32 = weeks25.getFieldType();
        org.joda.time.PeriodType periodType33 = weeks25.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType34 = weeks25.getFieldType();
        org.joda.time.Weeks weeks35 = weeks25.negated();
        boolean boolean36 = weeks22.isLessThan(weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType38 = weeks37.getFieldType();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        boolean boolean41 = weeks39.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        boolean boolean47 = weeks39.isLessThan(weeks45);
        org.joda.time.Weeks weeks48 = weeks45.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.MutablePeriod mutablePeriod51 = weeks50.toMutablePeriod();
        org.joda.time.Weeks weeks52 = weeks48.plus(weeks50);
        org.joda.time.Weeks weeks53 = weeks37.plus(weeks52);
        org.joda.time.Weeks weeks55 = weeks52.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        java.lang.String str60 = weeks59.toString();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.ONE;
        int int62 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks61);
        org.joda.time.Weeks weeks63 = weeks55.plus(weeks59);
        org.joda.time.MutablePeriod mutablePeriod64 = weeks59.toMutablePeriod();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.TWO;
        boolean boolean66 = weeks59.isGreaterThan(weeks65);
        org.joda.time.Weeks weeks67 = weeks65.negated();
        boolean boolean68 = weeks35.equals((java.lang.Object) weeks65);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "P-3W" + "'", str60, "P-3W");
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks3 = weeks1.dividedBy((int) (byte) -1);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks27 = weeks25.dividedBy((int) '4');
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks30.dividedBy((int) '4');
        int int33 = weeks30.size();
        org.joda.time.Weeks weeks34 = weeks27.plus(weeks30);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.DurationFieldType durationFieldType40 = weeks39.getFieldType();
        org.joda.time.DurationFieldType durationFieldType42 = weeks39.getFieldType(0);
        boolean boolean43 = weeks36.isSupported(durationFieldType42);
        boolean boolean44 = weeks30.isSupported(durationFieldType42);
        org.joda.time.PeriodType periodType45 = weeks30.getPeriodType();
        boolean boolean46 = weeks22.equals((java.lang.Object) weeks30);
        org.joda.time.Weeks weeks48 = weeks22.dividedBy(4);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        boolean boolean51 = weeks49.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        java.lang.String str56 = weeks55.toString();
        org.joda.time.Weeks weeks57 = weeks49.plus(weeks55);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType61 = weeks60.getPeriodType();
        org.joda.time.Weeks weeks63 = weeks60.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks65 = weeks60.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod66 = weeks60.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType67 = weeks60.getFieldType();
        int int68 = weeks59.get(durationFieldType67);
        int int69 = weeks55.get(durationFieldType67);
        java.lang.String str70 = weeks55.toString();
        boolean boolean71 = weeks48.isGreaterThan(weeks55);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-3) + "'", int69 == (-3));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "P-3W" + "'", str70, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        java.lang.String str26 = weeks22.toString();
        org.joda.time.Period period27 = weeks22.toPeriod();
        boolean boolean28 = weeks15.isLessThan(weeks22);
        org.joda.time.Weeks weeks30 = weeks22.plus(2);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks30);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks4.plus(weeks5);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        boolean boolean22 = weeks4.isGreaterThan(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = weeks23.getFieldType();
        int int25 = weeks20.get(durationFieldType24);
        boolean boolean26 = weeks0.isSupported(durationFieldType24);
        org.joda.time.Weeks weeks28 = weeks0.dividedBy((-1));
        org.joda.time.Weeks weeks30 = weeks0.dividedBy(3);
        org.joda.time.Weeks weeks32 = weeks30.dividedBy(4);
        org.joda.time.MutablePeriod mutablePeriod33 = weeks30.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType26 = weeks5.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks28 = weeks5.plus(weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks31.dividedBy((int) '4');
        int int34 = weeks31.size();
        org.joda.time.Period period35 = weeks31.toPeriod();
        org.joda.time.DurationFieldType durationFieldType36 = weeks31.getFieldType();
        org.joda.time.Weeks weeks37 = weeks27.plus(weeks31);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks43 = weeks40.minus((int) '4');
        org.joda.time.Weeks weeks44 = weeks38.plus(weeks43);
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.Period period46 = weeks44.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(period46);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        int int5 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks2);
        org.joda.time.Weeks weeks7 = weeks0.minus((int) ' ');
        org.joda.time.Weeks weeks9 = weeks7.plus((-1027));
        java.lang.Class<?> wildcardClass10 = weeks9.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        int int24 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.Weeks weeks26 = weeks22.minus((int) (short) 1);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = weeks28.minus(weeks29);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        int int41 = weeks29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks38);
        org.joda.time.Duration duration42 = weeks38.toStandardDuration();
        org.joda.time.Weeks weeks44 = weeks38.minus(1030);
        int int45 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks50 = weeks48.dividedBy((int) '4');
        org.joda.time.Weeks weeks52 = weeks48.multipliedBy((int) (short) 0);
        org.joda.time.Duration duration53 = weeks52.toStandardDuration();
        org.joda.time.Period period54 = weeks52.toPeriod();
        boolean boolean55 = weeks22.isLessThan(weeks52);
        org.joda.time.PeriodType periodType56 = weeks52.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(periodType56);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks10 = weeks0.dividedBy(100);
        org.joda.time.Duration duration11 = weeks10.toStandardDuration();
        org.joda.time.Weeks weeks13 = weeks10.multipliedBy(4);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(weeks13);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType4 = weeks3.getPeriodType();
        org.joda.time.Weeks weeks6 = weeks3.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        boolean boolean10 = weeks8.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        boolean boolean16 = weeks8.isLessThan(weeks14);
        org.joda.time.Weeks weeks17 = weeks7.plus(weeks8);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        int int24 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        boolean boolean25 = weeks7.isGreaterThan(weeks23);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType27 = weeks26.getFieldType();
        int int28 = weeks23.get(durationFieldType27);
        boolean boolean29 = weeks3.isSupported(durationFieldType27);
        org.joda.time.Weeks weeks31 = weeks3.dividedBy((-1));
        org.joda.time.Weeks weeks33 = weeks3.dividedBy(3);
        boolean boolean34 = weeks2.equals((java.lang.Object) 3);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType36 = weeks35.getPeriodType();
        org.joda.time.Weeks weeks38 = weeks35.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks40 = weeks35.dividedBy((int) 'a');
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = weeks41.plus(weeks42);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        java.lang.String str56 = weeks55.toString();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.ONE;
        int int58 = weeks55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks57);
        boolean boolean59 = weeks41.isGreaterThan(weeks57);
        int int60 = weeks40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks41);
        java.lang.String str61 = weeks41.toString();
        org.joda.time.DurationFieldType durationFieldType62 = weeks41.getFieldType();
        boolean boolean63 = weeks2.isSupported(durationFieldType62);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "P1W" + "'", str61, "P1W");
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        java.lang.String str2 = weeks0.toString();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.ONE;
        int int10 = weeks7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks9.plus((int) (short) -1);
        org.joda.time.Weeks weeks14 = weeks9.multipliedBy((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType16 = weeks14.getFieldType((int) (byte) 0);
        org.joda.time.Weeks weeks18 = weeks14.multipliedBy((int) (byte) -1);
        org.joda.time.Weeks weeks19 = weeks3.minus(weeks14);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "P3W" + "'", str2, "P3W");
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks1.multipliedBy((int) ' ');
        java.lang.String str5 = weeks1.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P0W" + "'", str5, "P0W");
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MIN_VALUE;
        int int1 = weeks0.getWeeks();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = weeks5.minus(weeks6);
        org.joda.time.DurationFieldType durationFieldType9 = weeks6.getFieldType();
        boolean boolean10 = weeks3.isSupported(durationFieldType9);
        org.joda.time.Weeks weeks12 = weeks3.multipliedBy((int) (short) 100);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        int int17 = weeks16.size();
        java.lang.String str18 = weeks16.toString();
        java.lang.String str19 = weeks16.toString();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks24 = weeks21.minus((int) '4');
        org.joda.time.Weeks weeks25 = weeks16.minus(weeks21);
        org.joda.time.Weeks weeks27 = weeks16.minus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType28 = weeks16.getFieldType();
        int int29 = weeks12.get(durationFieldType28);
        int int30 = weeks0.get(durationFieldType28);
        int int31 = weeks0.getWeeks();
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeksIn(readableInterval32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        boolean boolean42 = weeks34.isLessThan(weeks40);
        org.joda.time.Weeks weeks43 = weeks33.minus(weeks40);
        org.joda.time.Weeks weeks45 = weeks43.plus((int) 'a');
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = weeks47.minus(weeks48);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType52 = weeks51.getPeriodType();
        int int53 = weeks50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        org.joda.time.Weeks weeks54 = weeks45.plus(weeks51);
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.weeksIn(readableInterval55);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks56.minus(weeks63);
        org.joda.time.Weeks weeks68 = weeks66.plus((int) 'a');
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.Weeks weeks73 = weeks70.minus(weeks71);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType75 = weeks74.getPeriodType();
        int int76 = weeks73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks74);
        org.joda.time.Weeks weeks77 = weeks68.plus(weeks74);
        org.joda.time.DurationFieldType durationFieldType78 = weeks68.getFieldType();
        boolean boolean79 = weeks54.isSupported(durationFieldType78);
        int int80 = weeks0.get(durationFieldType78);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3200 + "'", int29 == 3200);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-2147483648) + "'", int30 == (-2147483648));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-2147483648) + "'", int31 == (-2147483648));
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-2147483648) + "'", int80 == (-2147483648));
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType28 = weeks27.getPeriodType();
        org.joda.time.Weeks weeks30 = weeks27.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks32 = weeks27.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod33 = weeks27.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType34 = weeks27.getFieldType();
        org.joda.time.PeriodType periodType35 = weeks27.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType36 = weeks27.getFieldType();
        org.joda.time.Weeks weeks37 = weeks26.minus(weeks27);
        org.joda.time.Period period38 = weeks27.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(period38);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks17.plus((int) (byte) 1);
        boolean boolean22 = weeks20.equals((java.lang.Object) 1.0d);
        org.joda.time.Weeks weeks24 = weeks20.plus((int) (byte) 100);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks27.dividedBy((int) '4');
        org.joda.time.Weeks weeks31 = weeks27.multipliedBy((int) (short) 0);
        org.joda.time.Duration duration32 = weeks31.toStandardDuration();
        org.joda.time.Weeks weeks33 = weeks31.negated();
        boolean boolean34 = weeks24.isLessThan(weeks33);
        int int35 = weeks33.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks12 = weeks10.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = weeks14.minus(weeks15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.PeriodType periodType20 = weeks18.getPeriodType();
        boolean boolean21 = weeks14.isGreaterThan(weeks18);
        org.joda.time.Weeks weeks23 = weeks18.minus((int) (byte) 0);
        org.joda.time.Duration duration24 = weeks23.toStandardDuration();
        boolean boolean25 = weeks10.equals((java.lang.Object) duration24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = weeks26.plus(weeks32);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        int int41 = weeks38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks40);
        org.joda.time.Weeks weeks43 = weeks40.plus((int) (short) -1);
        int int44 = weeks26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks43);
        org.joda.time.Weeks weeks46 = weeks26.plus((int) (short) 100);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = weeks48.minus(weeks49);
        java.lang.String str52 = weeks51.toString();
        int int53 = weeks26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        org.joda.time.DurationFieldType durationFieldType55 = weeks51.getFieldType(0);
        java.lang.String str56 = weeks51.toString();
        int int57 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        int int62 = weeks61.size();
        java.lang.String str63 = weeks61.toString();
        java.lang.String str64 = weeks61.toString();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks69 = weeks66.minus((int) '4');
        org.joda.time.Weeks weeks70 = weeks61.minus(weeks66);
        org.joda.time.Weeks weeks72 = weeks61.minus((int) (byte) 100);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks74 = weeks73.negated();
        org.joda.time.Weeks weeks75 = weeks72.plus(weeks73);
        int int76 = weeks72.getWeeks();
        boolean boolean77 = weeks51.isGreaterThan(weeks72);
        org.joda.time.Weeks weeks79 = weeks51.dividedBy((int) '4');
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "P-4W" + "'", str52, "P-4W");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-4W" + "'", str56, "P-4W");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "P-3W" + "'", str63, "P-3W");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-103) + "'", int76 == (-103));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(weeks79);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) '#');
        java.lang.String str21 = weeks0.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P1W" + "'", str21, "P1W");
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        int int19 = weeks17.getWeeks();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks31.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks20.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.dividedBy((int) (short) 100);
        boolean boolean39 = weeks17.isGreaterThan(weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = weeks40.getFieldType();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = weeks48.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.MutablePeriod mutablePeriod54 = weeks53.toMutablePeriod();
        org.joda.time.Weeks weeks55 = weeks51.plus(weeks53);
        org.joda.time.Weeks weeks56 = weeks40.plus(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        boolean boolean61 = weeks59.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        java.lang.String str66 = weeks65.toString();
        org.joda.time.Weeks weeks67 = weeks59.plus(weeks65);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        int int74 = weeks71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks73);
        org.joda.time.Weeks weeks76 = weeks73.plus((int) (short) -1);
        int int77 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks76);
        org.joda.time.Weeks weeks79 = weeks59.plus((int) (short) 100);
        org.joda.time.Weeks weeks81 = weeks59.multipliedBy(3);
        org.joda.time.Weeks weeks82 = weeks58.minus(weeks59);
        boolean boolean83 = weeks38.isGreaterThan(weeks59);
        org.joda.time.Weeks weeks85 = org.joda.time.Weeks.parseWeeks("P3W");
        int int86 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks85);
        int int87 = weeks85.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P-3W" + "'", str66, "P-3W");
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = weeks6.getValue((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean24 = weeks19.equals((java.lang.Object) 1L);
        int int25 = weeks1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks27 = weeks19.dividedBy((int) (byte) 1);
        int int28 = weeks27.getWeeks();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks29.plus(weeks30);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        boolean boolean47 = weeks29.isGreaterThan(weeks45);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        boolean boolean49 = weeks45.isGreaterThan(weeks48);
        org.joda.time.Weeks weeks51 = weeks48.plus((int) (byte) 100);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks56 = weeks54.dividedBy((int) '4');
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks58 = weeks57.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks61 = weeks59.dividedBy((int) '4');
        int int62 = weeks59.size();
        org.joda.time.Weeks weeks63 = weeks56.plus(weeks59);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks67 = weeks66.negated();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        org.joda.time.DurationFieldType durationFieldType69 = weeks68.getFieldType();
        org.joda.time.DurationFieldType durationFieldType71 = weeks68.getFieldType(0);
        boolean boolean72 = weeks65.isSupported(durationFieldType71);
        boolean boolean73 = weeks59.isSupported(durationFieldType71);
        org.joda.time.PeriodType periodType74 = weeks59.getPeriodType();
        boolean boolean75 = weeks51.equals((java.lang.Object) weeks59);
        org.joda.time.Weeks weeks77 = weeks51.dividedBy(4);
        org.joda.time.Weeks weeks79 = weeks77.plus((int) (short) 10);
        org.joda.time.PeriodType periodType80 = weeks79.getPeriodType();
        boolean boolean81 = weeks27.equals((java.lang.Object) weeks79);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.Duration duration8 = weeks7.toStandardDuration();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = weeks10.minus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType15 = weeks14.getPeriodType();
        org.joda.time.Weeks weeks17 = weeks14.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks19 = weeks14.dividedBy((int) 'a');
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        boolean boolean29 = weeks21.isLessThan(weeks27);
        org.joda.time.Weeks weeks30 = weeks20.plus(weeks21);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.ONE;
        int int37 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks36);
        boolean boolean38 = weeks20.isGreaterThan(weeks36);
        int int39 = weeks19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        boolean boolean42 = weeks40.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        java.lang.String str47 = weeks46.toString();
        boolean boolean48 = weeks40.isLessThan(weeks46);
        org.joda.time.Weeks weeks49 = weeks46.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.MutablePeriod mutablePeriod52 = weeks51.toMutablePeriod();
        org.joda.time.Weeks weeks53 = weeks49.plus(weeks51);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks55 = weeks19.minus(weeks49);
        boolean boolean56 = weeks11.isLessThan(weeks19);
        boolean boolean57 = weeks7.isLessThan(weeks11);
        java.lang.Class<?> wildcardClass58 = weeks11.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P-3W" + "'", str47, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType6 = weeks5.getPeriodType();
        org.joda.time.Weeks weeks8 = weeks5.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks10 = weeks5.dividedBy((int) 'a');
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks11.plus(weeks12);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.ONE;
        int int28 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks27);
        boolean boolean29 = weeks11.isGreaterThan(weeks27);
        int int30 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks37.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.MutablePeriod mutablePeriod43 = weeks42.toMutablePeriod();
        org.joda.time.Weeks weeks44 = weeks40.plus(weeks42);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks46 = weeks10.minus(weeks40);
        boolean boolean47 = weeks2.isLessThan(weeks10);
        org.joda.time.Weeks weeks49 = weeks10.minus(100);
        int int50 = weeks10.size();
        int int51 = weeks10.getWeeks();
        int int52 = weeks10.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = weeks0.toMutablePeriod();
        int int2 = weeks0.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-2147483648) + "'", int2 == (-2147483648));
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.Weeks weeks22 = weeks20.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType24 = weeks23.getPeriodType();
        org.joda.time.Weeks weeks26 = weeks23.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks28 = weeks23.dividedBy((int) 'a');
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks29.plus(weeks30);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        boolean boolean47 = weeks29.isGreaterThan(weeks45);
        int int48 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        java.lang.String str49 = weeks29.toString();
        org.joda.time.MutablePeriod mutablePeriod50 = weeks29.toMutablePeriod();
        boolean boolean51 = weeks22.isGreaterThan(weeks29);
        int int52 = weeks29.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P1W" + "'", str49, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks15 = weeks5.minus(weeks12);
        org.joda.time.Weeks weeks17 = weeks5.dividedBy((int) (short) 1);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType19 = weeks18.getFieldType();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = weeks26.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.MutablePeriod mutablePeriod32 = weeks31.toMutablePeriod();
        org.joda.time.Weeks weeks33 = weeks29.plus(weeks31);
        org.joda.time.Weeks weeks34 = weeks18.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks33.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        int int43 = weeks40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks44 = weeks36.plus(weeks40);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType46 = weeks45.getPeriodType();
        org.joda.time.Weeks weeks48 = weeks45.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks50 = weeks45.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod51 = weeks45.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType52 = weeks45.getFieldType();
        org.joda.time.PeriodType periodType53 = weeks45.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType54 = weeks45.getFieldType();
        org.joda.time.Weeks weeks55 = weeks44.minus(weeks45);
        boolean boolean56 = weeks17.isLessThan(weeks44);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks58 = weeks57.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks61 = weeks59.dividedBy((int) '4');
        int int62 = weeks59.size();
        org.joda.time.Weeks weeks63 = weeks59.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks65 = weeks64.negated();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        org.joda.time.Weeks weeks68 = weeks66.dividedBy((int) '4');
        int int69 = weeks66.size();
        org.joda.time.Weeks weeks70 = weeks66.negated();
        boolean boolean71 = weeks63.isGreaterThan(weeks66);
        org.joda.time.DurationFieldType durationFieldType72 = weeks63.getFieldType();
        org.joda.time.Weeks weeks74 = weeks63.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks76 = weeks75.negated();
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks76);
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks76);
        java.lang.String str79 = weeks78.toString();
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.ONE;
        int int81 = weeks78.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks80);
        java.lang.String str82 = weeks78.toString();
        org.joda.time.Weeks weeks84 = weeks78.dividedBy(1);
        org.joda.time.Weeks weeks86 = weeks78.minus((int) 'a');
        int int87 = weeks74.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks78);
        boolean boolean88 = weeks44.isLessThan(weeks78);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "P-3W" + "'", str79, "P-3W");
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "P-3W" + "'", str82, "P-3W");
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = weeks2.get(durationFieldType3);
        int int5 = weeks2.size();
        org.joda.time.PeriodType periodType6 = weeks2.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType8 = weeks2.getFieldType((-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Duration duration11 = weeks0.toStandardDuration();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(weeks12);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = weeks0.get(durationFieldType3);
        org.joda.time.Weeks weeks5 = weeks0.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = weeks6.plus(weeks12);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks20.plus((int) (short) -1);
        int int24 = weeks6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks6.plus((int) (short) 100);
        org.joda.time.Weeks weeks28 = weeks26.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType30 = weeks29.getFieldType();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks37.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.MutablePeriod mutablePeriod43 = weeks42.toMutablePeriod();
        org.joda.time.Weeks weeks44 = weeks40.plus(weeks42);
        org.joda.time.Weeks weeks45 = weeks29.plus(weeks44);
        org.joda.time.Weeks weeks47 = weeks44.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks48 = weeks47.negated();
        boolean boolean49 = weeks28.isGreaterThan(weeks47);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType51 = weeks50.getFieldType();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        boolean boolean54 = weeks52.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        boolean boolean60 = weeks52.isLessThan(weeks58);
        org.joda.time.Weeks weeks61 = weeks58.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.MutablePeriod mutablePeriod64 = weeks63.toMutablePeriod();
        org.joda.time.Weeks weeks65 = weeks61.plus(weeks63);
        org.joda.time.Weeks weeks66 = weeks50.plus(weeks65);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        boolean boolean70 = weeks68.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        java.lang.String str75 = weeks74.toString();
        boolean boolean76 = weeks68.isLessThan(weeks74);
        org.joda.time.Weeks weeks77 = weeks67.plus(weeks68);
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType79 = weeks78.getFieldType();
        boolean boolean80 = weeks77.isSupported(durationFieldType79);
        int int81 = weeks65.get(durationFieldType79);
        boolean boolean82 = weeks28.isSupported(durationFieldType79);
        int int83 = weeks0.get(durationFieldType79);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "P-3W" + "'", str75, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 3 + "'", int83 == 3);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        int int4 = weeks3.size();
        java.lang.String str5 = weeks3.toString();
        org.joda.time.Weeks weeks6 = weeks3.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-3W" + "'", str5, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod3 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int4 = weeks1.compareTo(baseSingleFieldPeriod3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 0);
        java.lang.String str2 = weeks1.toString();
        org.joda.time.Days days3 = weeks1.toStandardDays();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "P0W" + "'", str2, "P0W");
        org.junit.Assert.assertNotNull(days3);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = weeks26.minus(weeks27);
        boolean boolean30 = weeks23.isLessThan(weeks26);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks35 = weeks33.dividedBy((int) '4');
        int int36 = weeks35.getWeeks();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.weeks((-1));
        int int39 = weeks38.size();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks44 = weeks42.dividedBy((int) '4');
        int int45 = weeks42.size();
        org.joda.time.Period period46 = weeks42.toPeriod();
        org.joda.time.DurationFieldType durationFieldType47 = weeks42.getFieldType();
        org.joda.time.Weeks weeks48 = weeks38.minus(weeks42);
        org.joda.time.Weeks weeks50 = weeks48.minus((-3));
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        boolean boolean53 = weeks51.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks55 = weeks54.negated();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks55);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks55);
        java.lang.String str58 = weeks57.toString();
        boolean boolean59 = weeks51.isLessThan(weeks57);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.MutablePeriod mutablePeriod62 = weeks61.toMutablePeriod();
        org.joda.time.Weeks weeks63 = weeks57.plus(weeks61);
        org.joda.time.Weeks weeks64 = weeks50.plus(weeks57);
        org.joda.time.Weeks weeks65 = weeks35.minus(weeks64);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks68 = weeks35.minus(weeks67);
        org.joda.time.DurationFieldType durationFieldType70 = weeks67.getFieldType((int) (byte) 0);
        boolean boolean71 = weeks26.isSupported(durationFieldType70);
        org.joda.time.Weeks weeks73 = weeks26.plus((-13));
        org.joda.time.Weeks weeks74 = weeks22.plus(weeks73);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "P-3W" + "'", str58, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks10 = weeks6.dividedBy(3);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.weeks((int) (short) -1);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = weeks13.getFieldType();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        boolean boolean17 = weeks15.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        boolean boolean23 = weeks15.isLessThan(weeks21);
        org.joda.time.Weeks weeks24 = weeks21.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks26.toMutablePeriod();
        org.joda.time.Weeks weeks28 = weeks24.plus(weeks26);
        org.joda.time.Weeks weeks29 = weeks13.plus(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks32 = weeks31.negated();
        int int33 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.MutablePeriod mutablePeriod34 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks6.plus(weeks32);
        org.joda.time.Weeks weeks37 = weeks32.multipliedBy((int) (byte) 10);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks4.plus(weeks5);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        boolean boolean22 = weeks4.isGreaterThan(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = weeks23.getFieldType();
        int int25 = weeks20.get(durationFieldType24);
        boolean boolean26 = weeks0.isSupported(durationFieldType24);
        org.joda.time.Weeks weeks28 = weeks0.dividedBy((-1));
        org.joda.time.PeriodType periodType29 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks31 = weeks0.minus(10);
        org.joda.time.DurationFieldType durationFieldType32 = weeks31.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(durationFieldType32);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType28 = weeks27.getPeriodType();
        org.joda.time.Weeks weeks30 = weeks27.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks32 = weeks27.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod33 = weeks27.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType34 = weeks27.getFieldType();
        org.joda.time.PeriodType periodType35 = weeks27.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType36 = weeks27.getFieldType();
        org.joda.time.Weeks weeks37 = weeks26.minus(weeks27);
        org.joda.time.Weeks weeks39 = weeks37.multipliedBy((-55));
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        boolean boolean42 = weeks40.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        java.lang.String str47 = weeks46.toString();
        boolean boolean48 = weeks40.isLessThan(weeks46);
        org.joda.time.Weeks weeks49 = weeks46.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.MutablePeriod mutablePeriod52 = weeks51.toMutablePeriod();
        org.joda.time.Weeks weeks53 = weeks49.plus(weeks51);
        org.joda.time.Weeks weeks54 = weeks51.negated();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        org.joda.time.Weeks weeks56 = weeks54.negated();
        int int57 = weeks39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks54);
        org.joda.time.Period period58 = weeks39.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P-3W" + "'", str47, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(period58);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks3 = weeks1.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.plus(9);
        org.joda.time.Weeks weeks5 = null;
        boolean boolean6 = weeks4.isLessThan(weeks5);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = weeks10.minus(10);
        org.joda.time.Duration duration18 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks19 = weeks17.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(weeks19);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Weeks weeks8 = weeks4.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        boolean boolean16 = weeks8.isGreaterThan(weeks11);
        org.joda.time.DurationFieldType durationFieldType17 = weeks8.getFieldType();
        int int18 = weeks1.get(durationFieldType17);
        org.joda.time.PeriodType periodType19 = weeks1.getPeriodType();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        int int26 = weeks23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks25.plus((int) (short) -1);
        org.joda.time.Weeks weeks30 = weeks25.multipliedBy((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType32 = weeks30.getFieldType((int) (byte) 0);
        int int33 = weeks1.get(durationFieldType32);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.MutablePeriod mutablePeriod27 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        int int35 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks34);
        org.joda.time.Weeks weeks37 = weeks34.plus((int) (short) -1);
        org.joda.time.Weeks weeks39 = weeks34.multipliedBy((int) (byte) 10);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeks((-1));
        int int47 = weeks46.size();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks52 = weeks50.dividedBy((int) '4');
        int int53 = weeks50.size();
        org.joda.time.Period period54 = weeks50.toPeriod();
        org.joda.time.DurationFieldType durationFieldType55 = weeks50.getFieldType();
        org.joda.time.Weeks weeks56 = weeks46.minus(weeks50);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks63.negated();
        org.joda.time.Weeks weeks67 = weeks46.plus(weeks66);
        boolean boolean68 = weeks43.isLessThan(weeks67);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.Weeks weeks73 = weeks71.dividedBy((int) '4');
        int int74 = weeks71.size();
        org.joda.time.Period period75 = weeks71.toPeriod();
        org.joda.time.DurationFieldType durationFieldType76 = weeks71.getFieldType();
        boolean boolean77 = weeks43.isSupported(durationFieldType76);
        int int78 = weeks39.get(durationFieldType76);
        org.joda.time.Weeks weeks79 = weeks22.plus(weeks39);
        org.joda.time.Duration duration80 = weeks79.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType81 = null;
        int int82 = weeks79.get(durationFieldType81);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        int int4 = weeks3.size();
        java.lang.String str5 = weeks3.toString();
        java.lang.String str6 = weeks3.toString();
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.weeks(300);
        org.joda.time.Weeks weeks10 = weeks3.plus(weeks9);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-3W" + "'", str5, "P-3W");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = weeks1.minus((int) (byte) 100);
        org.joda.time.Duration duration14 = weeks1.toStandardDuration();
        org.joda.time.Weeks weeks16 = weeks1.multipliedBy((int) (short) 100);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(weeks16);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.parseWeeks("P9W");
        boolean boolean19 = weeks0.isGreaterThan(weeks18);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = weeks2.get(durationFieldType3);
        int int5 = weeks2.getWeeks();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType7 = weeks2.getFieldType((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-3) + "'", int5 == (-3));
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.minus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.MutablePeriod mutablePeriod27 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        int int35 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks34);
        org.joda.time.Weeks weeks37 = weeks34.plus((int) (short) -1);
        org.joda.time.Weeks weeks39 = weeks34.multipliedBy((int) (byte) 10);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeks((-1));
        int int47 = weeks46.size();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks52 = weeks50.dividedBy((int) '4');
        int int53 = weeks50.size();
        org.joda.time.Period period54 = weeks50.toPeriod();
        org.joda.time.DurationFieldType durationFieldType55 = weeks50.getFieldType();
        org.joda.time.Weeks weeks56 = weeks46.minus(weeks50);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks63.negated();
        org.joda.time.Weeks weeks67 = weeks46.plus(weeks66);
        boolean boolean68 = weeks43.isLessThan(weeks67);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.Weeks weeks73 = weeks71.dividedBy((int) '4');
        int int74 = weeks71.size();
        org.joda.time.Period period75 = weeks71.toPeriod();
        org.joda.time.DurationFieldType durationFieldType76 = weeks71.getFieldType();
        boolean boolean77 = weeks43.isSupported(durationFieldType76);
        int int78 = weeks39.get(durationFieldType76);
        org.joda.time.Weeks weeks79 = weeks22.plus(weeks39);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = weeks79.getValue(300);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 300");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertNotNull(weeks79);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Weeks weeks8 = weeks4.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        boolean boolean16 = weeks8.isGreaterThan(weeks11);
        org.joda.time.DurationFieldType durationFieldType17 = weeks8.getFieldType();
        int int18 = weeks1.get(durationFieldType17);
        org.joda.time.Duration duration19 = weeks1.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod20 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.MutablePeriod mutablePeriod25 = weeks24.toMutablePeriod();
        org.joda.time.Weeks weeks27 = weeks24.multipliedBy(0);
        org.joda.time.Weeks weeks28 = weeks22.minus(weeks27);
        org.joda.time.Weeks weeks29 = weeks22.negated();
        boolean boolean30 = weeks1.isGreaterThan(weeks29);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks6 = weeks0.multipliedBy((int) (short) -1);
        org.joda.time.PeriodType periodType7 = weeks6.getPeriodType();
        org.joda.time.Weeks weeks9 = weeks6.multipliedBy(300);
        org.joda.time.Weeks weeks10 = null;
        boolean boolean11 = weeks6.isGreaterThan(weeks10);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks21 = weeks19.negated();
        org.joda.time.MutablePeriod mutablePeriod22 = weeks21.toMutablePeriod();
        int int23 = weeks21.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks10 = weeks0.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = weeks0.getValue(97);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = weeks2.get(durationFieldType3);
        org.joda.time.Weeks weeks6 = weeks2.plus((-1));
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        org.joda.time.Weeks weeks15 = weeks7.plus(weeks13);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        java.lang.String str20 = weeks19.toString();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.ONE;
        int int22 = weeks19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks21);
        org.joda.time.Weeks weeks24 = weeks21.plus((int) (short) -1);
        int int25 = weeks7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Period period26 = weeks7.toPeriod();
        int int27 = weeks6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks7);
        org.joda.time.DurationFieldType durationFieldType29 = weeks7.getFieldType((int) (byte) 0);
        java.lang.Class<?> wildcardClass30 = durationFieldType29.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P-3W" + "'", str20, "P-3W");
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.PeriodType periodType10 = weeks6.getPeriodType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = weeks11.plus(weeks17);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        int int26 = weeks23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks25.plus((int) (short) -1);
        int int29 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.Weeks weeks31 = weeks28.plus((int) (byte) 1);
        boolean boolean33 = weeks31.equals((java.lang.Object) 1.0d);
        org.joda.time.Weeks weeks35 = weeks31.plus((int) (byte) 100);
        org.joda.time.Weeks weeks36 = weeks6.plus(weeks31);
        java.lang.String str37 = weeks36.toString();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = weeks39.minus(weeks40);
        java.lang.String str43 = weeks42.toString();
        int int44 = weeks36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        java.lang.String str45 = weeks36.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-2W" + "'", str37, "P-2W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-4W" + "'", str43, "P-4W");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-2W" + "'", str45, "P-2W");
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        boolean boolean17 = weeks9.isLessThan(weeks15);
        org.joda.time.Weeks weeks18 = weeks8.plus(weeks9);
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = weeks21.minus(weeks22);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.PeriodType periodType27 = weeks25.getPeriodType();
        boolean boolean28 = weeks21.isGreaterThan(weeks25);
        org.joda.time.Weeks weeks30 = weeks25.minus((int) (byte) 0);
        org.joda.time.Weeks weeks31 = weeks18.plus(weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType33 = weeks32.getPeriodType();
        org.joda.time.Weeks weeks35 = weeks32.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks37 = weeks32.dividedBy((int) 'a');
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        boolean boolean41 = weeks39.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        boolean boolean47 = weeks39.isLessThan(weeks45);
        org.joda.time.Weeks weeks48 = weeks38.plus(weeks39);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        int int55 = weeks52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks54);
        boolean boolean56 = weeks38.isGreaterThan(weeks54);
        int int57 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks38);
        org.joda.time.DurationFieldType durationFieldType58 = weeks37.getFieldType();
        org.joda.time.Weeks weeks59 = weeks18.plus(weeks37);
        boolean boolean60 = weeks0.isGreaterThan(weeks59);
        int int61 = weeks59.size();
        java.lang.Class<?> wildcardClass62 = weeks59.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = weeks1.minus((int) (byte) 100);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.DurationFieldType durationFieldType19 = weeks18.getFieldType();
        org.joda.time.DurationFieldType durationFieldType21 = weeks18.getFieldType(0);
        boolean boolean22 = weeks15.isSupported(durationFieldType21);
        boolean boolean23 = weeks1.equals((java.lang.Object) weeks15);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        org.joda.time.Weeks weeks32 = weeks24.plus(weeks30);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeks((-1));
        int int41 = weeks40.size();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks46 = weeks44.dividedBy((int) '4');
        int int47 = weeks44.size();
        org.joda.time.Period period48 = weeks44.toPeriod();
        org.joda.time.DurationFieldType durationFieldType49 = weeks44.getFieldType();
        org.joda.time.Weeks weeks50 = weeks40.minus(weeks44);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        boolean boolean53 = weeks51.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks55 = weeks54.negated();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks55);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks55);
        java.lang.String str58 = weeks57.toString();
        boolean boolean59 = weeks51.isLessThan(weeks57);
        org.joda.time.Weeks weeks60 = weeks57.negated();
        org.joda.time.Weeks weeks61 = weeks40.plus(weeks60);
        boolean boolean62 = weeks37.isLessThan(weeks61);
        org.joda.time.MutablePeriod mutablePeriod63 = weeks37.toMutablePeriod();
        int int64 = weeks37.getWeeks();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.Weeks weeks69 = weeks66.minus(weeks67);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks71 = weeks70.negated();
        org.joda.time.PeriodType periodType72 = weeks70.getPeriodType();
        boolean boolean73 = weeks66.isGreaterThan(weeks70);
        org.joda.time.Weeks weeks75 = weeks70.minus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType76 = weeks75.getFieldType();
        boolean boolean77 = weeks37.isSupported(durationFieldType76);
        boolean boolean78 = weeks33.equals((java.lang.Object) durationFieldType76);
        int int79 = weeks1.get(durationFieldType76);
        int int80 = weeks1.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "P-3W" + "'", str58, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-3) + "'", int64 == (-3));
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = weeks10.minus(10);
        org.joda.time.Duration duration18 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        org.joda.time.Weeks weeks27 = weeks19.plus(weeks25);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks30 = weeks28.minus((int) (byte) 10);
        org.joda.time.Weeks weeks31 = weeks17.minus(weeks30);
        org.joda.time.Weeks weeks33 = weeks17.multipliedBy((-13));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        int int24 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.Weeks weeks26 = weeks22.minus((int) (short) 1);
        org.joda.time.Weeks weeks28 = weeks26.minus(2);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        boolean boolean31 = weeks29.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        java.lang.String str36 = weeks35.toString();
        boolean boolean37 = weeks29.isLessThan(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.negated();
        org.joda.time.Weeks weeks39 = weeks28.minus(weeks35);
        org.joda.time.Weeks weeks41 = weeks28.plus((int) '#');
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.weeks((-1));
        int int49 = weeks48.size();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        org.joda.time.Weeks weeks54 = weeks52.dividedBy((int) '4');
        int int55 = weeks52.size();
        org.joda.time.Period period56 = weeks52.toPeriod();
        org.joda.time.DurationFieldType durationFieldType57 = weeks52.getFieldType();
        org.joda.time.Weeks weeks58 = weeks48.minus(weeks52);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        boolean boolean61 = weeks59.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        java.lang.String str66 = weeks65.toString();
        boolean boolean67 = weeks59.isLessThan(weeks65);
        org.joda.time.Weeks weeks68 = weeks65.negated();
        org.joda.time.Weeks weeks69 = weeks48.plus(weeks68);
        boolean boolean70 = weeks45.isLessThan(weeks69);
        int int71 = weeks45.getWeeks();
        org.joda.time.DurationFieldType durationFieldType72 = null;
        boolean boolean73 = weeks45.isSupported(durationFieldType72);
        org.joda.time.Weeks weeks74 = weeks28.plus(weeks45);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "P-3W" + "'", str36, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P-3W" + "'", str66, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-3) + "'", int71 == (-3));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(weeks74);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        int int4 = weeks3.size();
        java.lang.String str5 = weeks3.toString();
        java.lang.String str6 = weeks3.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks8.minus((int) '4');
        org.joda.time.Weeks weeks12 = weeks3.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.MutablePeriod mutablePeriod15 = weeks14.toMutablePeriod();
        org.joda.time.Weeks weeks16 = weeks14.negated();
        int int17 = weeks8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        java.lang.String str18 = weeks16.toString();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-3W" + "'", str5, "P-3W");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P3W" + "'", str18, "P3W");
        org.junit.Assert.assertNotNull(weeks19);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = weeks11.minus((-3));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        boolean boolean16 = weeks14.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        boolean boolean22 = weeks14.isLessThan(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.MutablePeriod mutablePeriod25 = weeks24.toMutablePeriod();
        org.joda.time.Weeks weeks26 = weeks20.plus(weeks24);
        org.joda.time.Weeks weeks27 = weeks13.plus(weeks20);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType29 = weeks20.getFieldType((-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.DurationFieldType durationFieldType6 = weeks5.getFieldType();
        org.joda.time.DurationFieldType durationFieldType8 = weeks5.getFieldType(0);
        org.joda.time.Weeks weeks9 = weeks2.plus(weeks5);
        org.joda.time.PeriodType periodType10 = weeks2.getPeriodType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.PeriodType periodType6 = weeks4.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType8 = weeks4.getFieldType((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks3 = weeks1.plus((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            int int5 = weeks3.getValue((-55));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -55");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType23 = weeks20.getFieldType(0);
        org.joda.time.Weeks weeks24 = weeks20.negated();
        org.joda.time.Weeks weeks26 = weeks20.dividedBy((int) 'a');
        int int27 = weeks20.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 103 + "'", int27 == 103);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks10 = weeks0.dividedBy(100);
        org.joda.time.Weeks weeks12 = weeks10.plus(1);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(9);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = weeks11.isSupported(durationFieldType15);
        org.joda.time.Weeks weeks18 = weeks11.multipliedBy((-1027));
        org.joda.time.Weeks weeks20 = weeks11.dividedBy((-927));
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.MutablePeriod mutablePeriod25 = weeks24.toMutablePeriod();
        org.joda.time.Weeks weeks27 = weeks24.multipliedBy(0);
        org.joda.time.Weeks weeks28 = weeks22.minus(weeks27);
        org.joda.time.Weeks weeks30 = weeks28.dividedBy((int) ' ');
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = weeks31.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        org.joda.time.Weeks weeks48 = weeks45.plus((int) (short) -1);
        int int49 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks48);
        int int50 = weeks48.getWeeks();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType52 = weeks51.getFieldType();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        boolean boolean55 = weeks53.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        java.lang.String str60 = weeks59.toString();
        boolean boolean61 = weeks53.isLessThan(weeks59);
        org.joda.time.Weeks weeks62 = weeks59.negated();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks64 = weeks63.negated();
        org.joda.time.MutablePeriod mutablePeriod65 = weeks64.toMutablePeriod();
        org.joda.time.Weeks weeks66 = weeks62.plus(weeks64);
        org.joda.time.Weeks weeks67 = weeks51.plus(weeks66);
        org.joda.time.Weeks weeks69 = weeks66.dividedBy((int) (short) 100);
        boolean boolean70 = weeks48.isGreaterThan(weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        java.lang.String str75 = weeks74.toString();
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.ONE;
        int int77 = weeks74.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks76);
        org.joda.time.Weeks weeks79 = weeks76.plus((int) (short) -1);
        org.joda.time.Weeks weeks81 = weeks76.multipliedBy((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType83 = weeks81.getFieldType((int) (byte) 0);
        boolean boolean84 = weeks69.isSupported(durationFieldType83);
        boolean boolean85 = weeks30.isSupported(durationFieldType83);
        boolean boolean86 = weeks11.isSupported(durationFieldType83);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "P-3W" + "'", str60, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "P-3W" + "'", str75, "P-3W");
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-13));
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.PeriodType periodType10 = weeks9.getPeriodType();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.parseWeeks("P-3W");
        boolean boolean13 = weeks9.equals((java.lang.Object) "P-3W");
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.PeriodType periodType15 = weeks9.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(periodType15);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks10 = weeks0.negated();
        org.joda.time.Weeks weeks12 = weeks0.plus((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod13 = weeks12.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.plus(weeks22);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        java.lang.String str36 = weeks35.toString();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.ONE;
        int int38 = weeks35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks37);
        boolean boolean39 = weeks21.isGreaterThan(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        boolean boolean41 = weeks11.isGreaterThan(weeks21);
        org.joda.time.Weeks weeks43 = weeks11.dividedBy((int) (short) 100);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "P-3W" + "'", str36, "P-3W");
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(weeks43);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks5 = weeks0.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = weeks7.minus(weeks8);
        org.joda.time.DurationFieldType durationFieldType11 = weeks8.getFieldType();
        int int12 = weeks5.get(durationFieldType11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        java.lang.String str17 = weeks16.toString();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.ONE;
        int int19 = weeks16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks18.plus((int) (short) -1);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType23 = weeks22.getPeriodType();
        org.joda.time.Weeks weeks25 = weeks22.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks27 = weeks22.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod28 = weeks22.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType29 = weeks22.getFieldType();
        org.joda.time.PeriodType periodType30 = weeks22.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType31 = weeks22.getFieldType();
        boolean boolean32 = weeks21.isSupported(durationFieldType31);
        int int33 = weeks5.get(durationFieldType31);
        org.joda.time.Weeks weeks35 = weeks5.multipliedBy(100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds36 = weeks35.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 30000 * 604800");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 300 + "'", int12 == 300);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P-3W" + "'", str17, "P-3W");
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 300 + "'", int33 == 300);
        org.junit.Assert.assertNotNull(weeks35);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.Duration duration23 = weeks19.toStandardDuration();
        java.lang.String str24 = weeks19.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P3W" + "'", str24, "P3W");
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = weeks4.negated();
        org.joda.time.DurationFieldType durationFieldType7 = weeks6.getFieldType();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.parseWeeks("P3W");
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = weeks11.plus(weeks17);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        int int26 = weeks23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks25.plus((int) (short) -1);
        int int29 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.Weeks weeks31 = weeks11.plus((int) (short) 100);
        org.joda.time.Weeks weeks33 = weeks31.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType35 = weeks34.getFieldType();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks42.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.MutablePeriod mutablePeriod48 = weeks47.toMutablePeriod();
        org.joda.time.Weeks weeks49 = weeks45.plus(weeks47);
        org.joda.time.Weeks weeks50 = weeks34.plus(weeks49);
        org.joda.time.Weeks weeks52 = weeks49.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks53 = weeks52.negated();
        boolean boolean54 = weeks33.isGreaterThan(weeks52);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType56 = weeks55.getFieldType();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks63.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.MutablePeriod mutablePeriod69 = weeks68.toMutablePeriod();
        org.joda.time.Weeks weeks70 = weeks66.plus(weeks68);
        org.joda.time.Weeks weeks71 = weeks55.plus(weeks70);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        boolean boolean75 = weeks73.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks77 = weeks76.negated();
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        java.lang.String str80 = weeks79.toString();
        boolean boolean81 = weeks73.isLessThan(weeks79);
        org.joda.time.Weeks weeks82 = weeks72.plus(weeks73);
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType84 = weeks83.getFieldType();
        boolean boolean85 = weeks82.isSupported(durationFieldType84);
        int int86 = weeks70.get(durationFieldType84);
        boolean boolean87 = weeks33.isSupported(durationFieldType84);
        int int88 = weeks10.get(durationFieldType84);
        boolean boolean89 = weeks8.isSupported(durationFieldType84);
        org.joda.time.DurationFieldType durationFieldType90 = weeks8.getFieldType();
        org.joda.time.Weeks weeks92 = weeks8.multipliedBy((int) ' ');
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "P-3W" + "'", str80, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 3 + "'", int88 == 3);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertNotNull(weeks92);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType26 = weeks5.getFieldType();
        java.lang.String str27 = weeks5.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P0W" + "'", str27, "P0W");
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P3W");
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        int int7 = weeks2.size();
        int int8 = weeks2.getWeeks();
        int int9 = weeks2.size();
        int int11 = weeks2.getValue(0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-3) + "'", int8 == (-3));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Weeks weeks11 = weeks4.plus(weeks7);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks16 = weeks14.dividedBy((int) '4');
        int int17 = weeks14.size();
        org.joda.time.Weeks weeks18 = weeks14.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Weeks weeks25 = weeks21.negated();
        boolean boolean26 = weeks18.isGreaterThan(weeks21);
        org.joda.time.DurationFieldType durationFieldType27 = weeks18.getFieldType();
        org.joda.time.Weeks weeks29 = weeks18.multipliedBy((int) (short) 1);
        boolean boolean30 = weeks11.equals((java.lang.Object) weeks18);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.weeks((-3));
        org.joda.time.Weeks weeks34 = weeks32.plus(0);
        org.joda.time.DurationFieldType durationFieldType35 = weeks34.getFieldType();
        int int36 = weeks11.get(durationFieldType35);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks11.negated();
        org.joda.time.DurationFieldType durationFieldType14 = weeks11.getFieldType();
        org.joda.time.Period period15 = weeks11.toPeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks11.getFieldType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType16);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType13 = weeks12.getFieldType();
        int int14 = weeks1.get(durationFieldType13);
        org.joda.time.Weeks weeks16 = weeks1.minus((int) ' ');
        int int17 = weeks16.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-33) + "'", int17 == (-33));
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) ' ');
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        boolean boolean13 = weeks7.isGreaterThan(weeks11);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType24 = weeks2.getFieldType();
        org.joda.time.Weeks weeks25 = null;
        org.joda.time.Weeks weeks26 = weeks2.plus(weeks25);
        int int27 = weeks26.getWeeks();
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod28 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int29 = weeks26.compareTo(baseSingleFieldPeriod28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-3) + "'", int27 == (-3));
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        org.joda.time.PeriodType periodType28 = weeks6.getPeriodType();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str31 = weeks29.toString();
        int int32 = weeks6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.Class<?> wildcardClass34 = weeks29.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P1W" + "'", str31, "P1W");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeks((-1));
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.Weeks weeks10 = weeks8.dividedBy((int) '4');
        int int11 = weeks8.size();
        org.joda.time.Period period12 = weeks8.toPeriod();
        org.joda.time.DurationFieldType durationFieldType13 = weeks8.getFieldType();
        org.joda.time.Weeks weeks14 = weeks4.minus(weeks8);
        org.joda.time.Weeks weeks16 = weeks14.minus((-3));
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.MutablePeriod mutablePeriod28 = weeks27.toMutablePeriod();
        org.joda.time.Weeks weeks29 = weeks23.plus(weeks27);
        org.joda.time.Weeks weeks30 = weeks16.plus(weeks23);
        org.joda.time.Weeks weeks31 = weeks1.plus(weeks16);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks33 = weeks16.multipliedBy((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 5 * -2147483648");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        int int12 = weeks11.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Period period19 = weeks15.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = weeks15.getFieldType();
        org.joda.time.Weeks weeks21 = weeks11.minus(weeks15);
        org.joda.time.Weeks weeks23 = weeks11.minus((int) (byte) 100);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        org.joda.time.DurationFieldType durationFieldType31 = weeks28.getFieldType(0);
        boolean boolean32 = weeks25.isSupported(durationFieldType31);
        boolean boolean33 = weeks11.equals((java.lang.Object) weeks25);
        boolean boolean34 = weeks0.isLessThan(weeks25);
        org.joda.time.Weeks weeks36 = weeks25.multipliedBy(3);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        boolean boolean39 = weeks37.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        boolean boolean45 = weeks37.isLessThan(weeks43);
        org.joda.time.Weeks weeks46 = weeks36.plus(weeks43);
        org.joda.time.Weeks weeks48 = weeks36.plus((-3));
        org.joda.time.Weeks weeks49 = weeks36.negated();
        int int50 = weeks36.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 300 + "'", int50 == 300);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Weeks weeks8 = weeks4.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        boolean boolean16 = weeks8.isGreaterThan(weeks11);
        org.joda.time.DurationFieldType durationFieldType17 = weeks8.getFieldType();
        int int18 = weeks1.get(durationFieldType17);
        org.joda.time.Weeks weeks20 = weeks1.plus((int) (byte) 100);
        org.joda.time.Weeks weeks22 = weeks20.multipliedBy((int) '4');
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = weeks1.getValue(1030);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1030");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeksIn(readableInterval24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks25.minus(weeks32);
        org.joda.time.Weeks weeks36 = weeks19.plus(weeks25);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks39 = weeks25.dividedBy((-1027));
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        boolean boolean42 = weeks40.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        java.lang.String str47 = weeks46.toString();
        boolean boolean48 = weeks40.isLessThan(weeks46);
        org.joda.time.Weeks weeks49 = weeks46.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.MutablePeriod mutablePeriod52 = weeks51.toMutablePeriod();
        org.joda.time.Weeks weeks53 = weeks49.plus(weeks51);
        int int54 = weeks51.size();
        org.joda.time.DurationFieldType durationFieldType55 = null;
        boolean boolean56 = weeks51.isSupported(durationFieldType55);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        boolean boolean60 = weeks51.isGreaterThan(weeks59);
        boolean boolean61 = weeks25.isGreaterThan(weeks51);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks64 = weeks62.dividedBy(900);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P-3W" + "'", str47, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks64);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.PeriodType periodType10 = weeks6.getPeriodType();
        org.joda.time.Period period11 = weeks6.toPeriod();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = weeks12.plus(weeks18);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        int int27 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks26.plus((int) (short) -1);
        int int30 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        int int31 = weeks29.getWeeks();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = weeks34.get(durationFieldType35);
        int int37 = weeks34.size();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.DurationFieldType durationFieldType41 = weeks40.getFieldType();
        boolean boolean42 = weeks34.isSupported(durationFieldType41);
        int int43 = weeks29.get(durationFieldType41);
        int int44 = weeks6.get(durationFieldType41);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-3) + "'", int44 == (-3));
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(1030);
        org.joda.time.Weeks weeks3 = weeks1.dividedBy((int) '4');
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P0W");
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType3 = weeks2.getPeriodType();
        org.joda.time.Weeks weeks5 = weeks2.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks7 = weeks2.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = weeks2.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = weeks2.getFieldType();
        org.joda.time.PeriodType periodType10 = weeks2.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType11 = weeks2.getFieldType();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        int int14 = weeks13.size();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks19 = weeks17.dividedBy((int) '4');
        int int20 = weeks17.size();
        org.joda.time.Period period21 = weeks17.toPeriod();
        org.joda.time.DurationFieldType durationFieldType22 = weeks17.getFieldType();
        org.joda.time.Weeks weeks23 = weeks13.minus(weeks17);
        org.joda.time.Weeks weeks25 = weeks13.minus((int) (byte) 100);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.DurationFieldType durationFieldType31 = weeks30.getFieldType();
        org.joda.time.DurationFieldType durationFieldType33 = weeks30.getFieldType(0);
        boolean boolean34 = weeks27.isSupported(durationFieldType33);
        boolean boolean35 = weeks13.equals((java.lang.Object) weeks27);
        boolean boolean36 = weeks2.isLessThan(weeks27);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks41 = weeks39.dividedBy((int) '4');
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks46 = weeks44.dividedBy((int) '4');
        int int47 = weeks44.size();
        org.joda.time.Weeks weeks48 = weeks41.plus(weeks44);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.DurationFieldType durationFieldType54 = weeks53.getFieldType();
        org.joda.time.DurationFieldType durationFieldType56 = weeks53.getFieldType(0);
        boolean boolean57 = weeks50.isSupported(durationFieldType56);
        boolean boolean58 = weeks44.isSupported(durationFieldType56);
        org.joda.time.PeriodType periodType59 = weeks44.getPeriodType();
        boolean boolean60 = weeks27.isLessThan(weeks44);
        org.joda.time.Weeks weeks62 = weeks27.plus((-3));
        boolean boolean63 = weeks1.equals((java.lang.Object) weeks27);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType65 = weeks1.getFieldType((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P-3W");
        org.joda.time.DurationFieldType durationFieldType2 = weeks1.getFieldType();
        org.joda.time.Weeks weeks4 = weeks1.plus(1);
        java.lang.Class<?> wildcardClass5 = weeks1.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((-1));
        int int20 = weeks19.size();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        int int26 = weeks23.size();
        org.joda.time.Period period27 = weeks23.toPeriod();
        org.joda.time.DurationFieldType durationFieldType28 = weeks23.getFieldType();
        org.joda.time.Weeks weeks29 = weeks19.minus(weeks23);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.negated();
        org.joda.time.Weeks weeks40 = weeks19.plus(weeks39);
        org.joda.time.Weeks weeks41 = weeks17.plus(weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.TWO;
        int int43 = weeks42.size();
        org.joda.time.Weeks weeks45 = weeks42.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks46 = weeks40.plus(weeks42);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks51 = weeks49.dividedBy((int) '4');
        org.joda.time.Weeks weeks53 = weeks49.multipliedBy((int) (short) 0);
        org.joda.time.Duration duration54 = weeks53.toStandardDuration();
        org.joda.time.Weeks weeks55 = weeks53.negated();
        boolean boolean56 = weeks42.equals((java.lang.Object) weeks53);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType58 = weeks53.getFieldType((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        boolean boolean17 = weeks9.isLessThan(weeks15);
        org.joda.time.Weeks weeks18 = weeks8.plus(weeks9);
        int int19 = weeks9.size();
        org.joda.time.DurationFieldType durationFieldType20 = weeks9.getFieldType();
        org.joda.time.Weeks weeks21 = weeks1.plus(weeks9);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = weeks21.getValue(3200);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3200");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks6.dividedBy((int) '4');
        org.joda.time.Weeks weeks10 = weeks6.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks17.negated();
        org.joda.time.Weeks weeks21 = weeks10.plus(weeks20);
        org.joda.time.DurationFieldType durationFieldType22 = weeks21.getFieldType();
        int int23 = weeks2.get(durationFieldType22);
        java.lang.Class<?> wildcardClass24 = durationFieldType22.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-3) + "'", int23 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        int int28 = weeks6.size();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType30 = weeks29.getPeriodType();
        org.joda.time.Weeks weeks32 = weeks29.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks34 = weeks29.dividedBy((int) 'a');
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks35.plus(weeks36);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        boolean boolean53 = weeks35.isGreaterThan(weeks51);
        int int54 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.DurationFieldType durationFieldType55 = weeks34.getFieldType();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks57 = weeks34.plus(weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks60.dividedBy((int) '4');
        int int63 = weeks60.size();
        org.joda.time.Period period64 = weeks60.toPeriod();
        org.joda.time.DurationFieldType durationFieldType65 = weeks60.getFieldType();
        org.joda.time.Weeks weeks66 = weeks56.plus(weeks60);
        org.joda.time.Weeks weeks67 = weeks6.plus(weeks66);
        org.joda.time.Weeks weeks69 = weeks66.minus(0);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks72 = weeks66.minus((int) (byte) 0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks72);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType3 = weeks2.getPeriodType();
        org.joda.time.Weeks weeks5 = weeks2.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks7 = weeks2.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = weeks2.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = weeks2.getFieldType();
        org.joda.time.PeriodType periodType10 = weeks2.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType11 = weeks2.getFieldType();
        org.joda.time.Weeks weeks12 = weeks2.negated();
        org.joda.time.Weeks weeks14 = weeks2.multipliedBy(300);
        boolean boolean15 = weeks0.equals((java.lang.Object) weeks2);
        org.joda.time.Weeks weeks17 = weeks0.plus((int) (short) 1);
        org.joda.time.Weeks weeks19 = weeks17.multipliedBy(1030);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        boolean boolean29 = weeks21.isLessThan(weeks27);
        org.joda.time.Weeks weeks30 = weeks20.plus(weeks21);
        org.joda.time.Weeks weeks32 = weeks30.multipliedBy((int) (byte) 100);
        boolean boolean33 = weeks17.equals((java.lang.Object) (byte) 100);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        org.joda.time.Weeks weeks15 = weeks11.multipliedBy((int) (short) 0);
        int int16 = weeks11.size();
        boolean boolean17 = weeks8.equals((java.lang.Object) int16);
        org.joda.time.PeriodType periodType18 = weeks8.getPeriodType();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = weeks19.plus(weeks20);
        int int30 = weeks20.size();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = weeks31.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        org.joda.time.Weeks weeks48 = weeks45.plus((int) (short) -1);
        int int49 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks48);
        org.joda.time.Weeks weeks51 = weeks31.plus((int) (short) 100);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks55 = weeks54.negated();
        org.joda.time.Weeks weeks56 = weeks53.minus(weeks54);
        java.lang.String str57 = weeks56.toString();
        int int58 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks56);
        org.joda.time.Weeks weeks60 = weeks56.dividedBy((int) ' ');
        int int61 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks60);
        boolean boolean62 = weeks8.equals((java.lang.Object) weeks20);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "P-4W" + "'", str57, "P-4W");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Weeks weeks11 = weeks7.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks16 = weeks14.dividedBy((int) '4');
        int int17 = weeks14.size();
        org.joda.time.Weeks weeks18 = weeks14.negated();
        boolean boolean19 = weeks11.isGreaterThan(weeks14);
        org.joda.time.DurationFieldType durationFieldType20 = weeks11.getFieldType();
        int int21 = weeks4.get(durationFieldType20);
        org.joda.time.PeriodType periodType22 = weeks4.getPeriodType();
        java.lang.String str23 = weeks4.toString();
        org.joda.time.Weeks weeks24 = weeks1.minus(weeks4);
        int int25 = weeks4.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P100W" + "'", str23, "P100W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks24 = weeks19.dividedBy((int) 'a');
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks25.plus(weeks26);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        java.lang.String str40 = weeks39.toString();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.ONE;
        int int42 = weeks39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks41);
        boolean boolean43 = weeks25.isGreaterThan(weeks41);
        int int44 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.DurationFieldType durationFieldType45 = weeks24.getFieldType();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks47 = weeks24.plus(weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks52 = weeks50.dividedBy((int) '4');
        int int53 = weeks50.size();
        org.joda.time.Period period54 = weeks50.toPeriod();
        org.joda.time.DurationFieldType durationFieldType55 = weeks50.getFieldType();
        org.joda.time.Weeks weeks56 = weeks46.plus(weeks50);
        boolean boolean57 = weeks18.isGreaterThan(weeks56);
        org.joda.time.Period period58 = weeks56.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "P-3W" + "'", str40, "P-3W");
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(period58);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Period period6 = weeks2.toPeriod();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        boolean boolean9 = weeks2.isGreaterThan(weeks7);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType11 = weeks10.getFieldType();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks18.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = weeks23.toMutablePeriod();
        org.joda.time.Weeks weeks25 = weeks21.plus(weeks23);
        org.joda.time.Weeks weeks26 = weeks10.plus(weeks25);
        org.joda.time.Weeks weeks28 = weeks25.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        int int35 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks34);
        org.joda.time.Weeks weeks36 = weeks28.plus(weeks32);
        org.joda.time.Weeks weeks37 = weeks7.minus(weeks32);
        org.joda.time.PeriodType periodType38 = weeks7.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(periodType38);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = weeks4.negated();
        org.joda.time.DurationFieldType durationFieldType7 = weeks6.getFieldType();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.parseWeeks("P3W");
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = weeks11.plus(weeks17);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        int int26 = weeks23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks25.plus((int) (short) -1);
        int int29 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.Weeks weeks31 = weeks11.plus((int) (short) 100);
        org.joda.time.Weeks weeks33 = weeks31.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType35 = weeks34.getFieldType();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks42.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.MutablePeriod mutablePeriod48 = weeks47.toMutablePeriod();
        org.joda.time.Weeks weeks49 = weeks45.plus(weeks47);
        org.joda.time.Weeks weeks50 = weeks34.plus(weeks49);
        org.joda.time.Weeks weeks52 = weeks49.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks53 = weeks52.negated();
        boolean boolean54 = weeks33.isGreaterThan(weeks52);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType56 = weeks55.getFieldType();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks63.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.MutablePeriod mutablePeriod69 = weeks68.toMutablePeriod();
        org.joda.time.Weeks weeks70 = weeks66.plus(weeks68);
        org.joda.time.Weeks weeks71 = weeks55.plus(weeks70);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        boolean boolean75 = weeks73.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks77 = weeks76.negated();
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        java.lang.String str80 = weeks79.toString();
        boolean boolean81 = weeks73.isLessThan(weeks79);
        org.joda.time.Weeks weeks82 = weeks72.plus(weeks73);
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType84 = weeks83.getFieldType();
        boolean boolean85 = weeks82.isSupported(durationFieldType84);
        int int86 = weeks70.get(durationFieldType84);
        boolean boolean87 = weeks33.isSupported(durationFieldType84);
        int int88 = weeks10.get(durationFieldType84);
        boolean boolean89 = weeks8.isSupported(durationFieldType84);
        org.joda.time.Weeks weeks90 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "P-3W" + "'", str80, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 3 + "'", int88 == 3);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(weeks90);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks4.getWeeks();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((-1));
        int int8 = weeks7.size();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Period period15 = weeks11.toPeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks11.getFieldType();
        org.joda.time.Weeks weeks17 = weeks7.minus(weeks11);
        org.joda.time.Weeks weeks19 = weeks17.minus((-3));
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = weeks30.toMutablePeriod();
        org.joda.time.Weeks weeks32 = weeks26.plus(weeks30);
        org.joda.time.Weeks weeks33 = weeks19.plus(weeks26);
        org.joda.time.Weeks weeks34 = weeks4.minus(weeks33);
        org.joda.time.Weeks weeks35 = null;
        org.joda.time.Weeks weeks36 = weeks33.plus(weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        int int43 = weeks40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        java.lang.String str44 = weeks40.toString();
        org.joda.time.Weeks weeks46 = weeks40.dividedBy(1);
        org.joda.time.Weeks weeks48 = weeks40.minus((int) 'a');
        org.joda.time.Weeks weeks50 = weeks48.minus((int) (short) 1);
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = weeks36.minus(weeks50);
        org.joda.time.Weeks weeks54 = weeks36.multipliedBy(4);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        org.joda.time.Weeks weeks15 = weeks11.multipliedBy((int) (short) 0);
        int int16 = weeks11.size();
        boolean boolean17 = weeks8.equals((java.lang.Object) int16);
        java.lang.Class<?> wildcardClass18 = weeks8.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-4));
        org.joda.time.DurationFieldType durationFieldType2 = weeks1.getFieldType();
        org.joda.time.PeriodType periodType3 = weeks1.getPeriodType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(periodType3);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.PeriodType periodType10 = weeks6.getPeriodType();
        org.joda.time.Period period11 = weeks6.toPeriod();
        int int12 = weeks6.size();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.multipliedBy((int) ' ');
        boolean boolean18 = weeks6.isGreaterThan(weeks14);
        org.joda.time.Duration duration19 = weeks6.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration19);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Period period3 = weeks1.toPeriod();
        org.joda.time.Duration duration4 = weeks1.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration4);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks3 = weeks1.plus((int) (short) 0);
        int int4 = weeks3.size();
        org.joda.time.PeriodType periodType5 = weeks3.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Weeks weeks8 = weeks4.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        boolean boolean16 = weeks8.isGreaterThan(weeks11);
        org.joda.time.DurationFieldType durationFieldType17 = weeks8.getFieldType();
        int int18 = weeks1.get(durationFieldType17);
        org.joda.time.PeriodType periodType19 = weeks1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks28);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy(0);
        org.joda.time.Weeks weeks39 = weeks33.minus(weeks38);
        int int40 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks41 = weeks39.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        int int48 = weeks45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        org.joda.time.Weeks weeks50 = weeks47.plus((int) (short) -1);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        org.joda.time.Weeks weeks57 = weeks47.minus(weeks54);
        boolean boolean58 = weeks39.isGreaterThan(weeks54);
        org.joda.time.Weeks weeks59 = weeks1.plus(weeks54);
        org.joda.time.Weeks weeks61 = weeks59.minus((int) (short) 0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks61);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks3 = weeks1.multipliedBy(1);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        boolean boolean6 = weeks4.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        java.lang.String str11 = weeks10.toString();
        org.joda.time.Weeks weeks12 = weeks4.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.minus((int) (byte) 100);
        org.joda.time.Weeks weeks15 = weeks3.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = weeks17.minus(weeks18);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        boolean boolean29 = weeks21.isLessThan(weeks27);
        int int30 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks27);
        org.joda.time.PeriodType periodType31 = weeks27.getPeriodType();
        boolean boolean32 = weeks10.equals((java.lang.Object) periodType31);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P-3W" + "'", str11, "P-3W");
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeks((-1));
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.Weeks weeks10 = weeks8.dividedBy((int) '4');
        int int11 = weeks8.size();
        org.joda.time.Period period12 = weeks8.toPeriod();
        org.joda.time.DurationFieldType durationFieldType13 = weeks8.getFieldType();
        org.joda.time.Weeks weeks14 = weeks4.minus(weeks8);
        org.joda.time.Weeks weeks16 = weeks14.minus((-3));
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.MutablePeriod mutablePeriod28 = weeks27.toMutablePeriod();
        org.joda.time.Weeks weeks29 = weeks23.plus(weeks27);
        org.joda.time.Weeks weeks30 = weeks16.plus(weeks23);
        org.joda.time.Weeks weeks31 = weeks1.plus(weeks16);
        int int32 = weeks16.size();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        boolean boolean35 = weeks33.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        java.lang.String str40 = weeks39.toString();
        boolean boolean41 = weeks33.isLessThan(weeks39);
        org.joda.time.Weeks weeks42 = weeks39.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.MutablePeriod mutablePeriod45 = weeks44.toMutablePeriod();
        org.joda.time.Weeks weeks46 = weeks42.plus(weeks44);
        int int47 = weeks44.size();
        org.joda.time.DurationFieldType durationFieldType48 = null;
        boolean boolean49 = weeks44.isSupported(durationFieldType48);
        org.joda.time.Weeks weeks51 = weeks44.multipliedBy((-1027));
        org.joda.time.DurationFieldType durationFieldType52 = weeks51.getFieldType();
        boolean boolean53 = weeks16.isSupported(durationFieldType52);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "P-3W" + "'", str40, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        org.joda.time.Weeks weeks50 = weeks42.plus(weeks48);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.ONE;
        int int57 = weeks54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks56);
        org.joda.time.Weeks weeks59 = weeks56.plus((int) (short) -1);
        int int60 = weeks42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks42.plus((int) (short) 100);
        org.joda.time.Weeks weeks64 = weeks42.multipliedBy(3);
        org.joda.time.Weeks weeks65 = weeks5.minus(weeks64);
        java.lang.Class<?> wildcardClass66 = weeks65.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks17.plus((int) (byte) 1);
        boolean boolean22 = weeks20.equals((java.lang.Object) 1.0d);
        org.joda.time.Weeks weeks24 = weeks20.plus((int) (byte) 100);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks27.dividedBy((int) '4');
        org.joda.time.Weeks weeks31 = weeks27.multipliedBy((int) (short) 0);
        org.joda.time.Duration duration32 = weeks31.toStandardDuration();
        org.joda.time.Weeks weeks33 = weeks31.negated();
        boolean boolean34 = weeks24.isLessThan(weeks33);
        org.joda.time.MutablePeriod mutablePeriod35 = weeks24.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(mutablePeriod35);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = weeks19.getFieldType();
        int int21 = weeks16.get(durationFieldType20);
        org.joda.time.Weeks weeks23 = weeks16.minus((int) (byte) -1);
        org.joda.time.Weeks weeks25 = weeks23.minus((int) '#');
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = weeks26.plus(weeks32);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        int int41 = weeks38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks40);
        org.joda.time.Weeks weeks43 = weeks40.plus((int) (short) -1);
        int int44 = weeks26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks43);
        org.joda.time.Weeks weeks46 = weeks26.plus((int) (short) 100);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        int int50 = weeks46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks48);
        org.joda.time.DurationFieldType durationFieldType52 = weeks46.getFieldType(0);
        boolean boolean53 = weeks23.isLessThan(weeks46);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(3200);
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks0.multipliedBy(3);
        org.joda.time.Weeks weeks24 = weeks0.dividedBy((-927));
        org.joda.time.PeriodType periodType25 = weeks24.getPeriodType();
        org.joda.time.Weeks weeks26 = weeks24.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeks((-1));
        int int29 = weeks28.size();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        org.joda.time.Weeks weeks34 = weeks32.dividedBy((int) '4');
        int int35 = weeks32.size();
        org.joda.time.Period period36 = weeks32.toPeriod();
        org.joda.time.DurationFieldType durationFieldType37 = weeks32.getFieldType();
        org.joda.time.Weeks weeks38 = weeks28.minus(weeks32);
        org.joda.time.Weeks weeks40 = weeks28.minus((int) (byte) 100);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.DurationFieldType durationFieldType44 = weeks43.getFieldType();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType46 = weeks45.getFieldType();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        boolean boolean49 = weeks47.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        java.lang.String str54 = weeks53.toString();
        boolean boolean55 = weeks47.isLessThan(weeks53);
        org.joda.time.Weeks weeks56 = weeks53.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks58 = weeks57.negated();
        org.joda.time.MutablePeriod mutablePeriod59 = weeks58.toMutablePeriod();
        org.joda.time.Weeks weeks60 = weeks56.plus(weeks58);
        org.joda.time.Weeks weeks61 = weeks45.plus(weeks60);
        org.joda.time.Weeks weeks63 = weeks60.dividedBy((int) (short) 100);
        boolean boolean64 = weeks43.isGreaterThan(weeks60);
        org.joda.time.ReadableInterval readableInterval65 = null;
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.weeksIn(readableInterval65);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        boolean boolean69 = weeks67.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks71 = weeks70.negated();
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks71);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks71);
        java.lang.String str74 = weeks73.toString();
        boolean boolean75 = weeks67.isLessThan(weeks73);
        org.joda.time.Weeks weeks76 = weeks66.minus(weeks73);
        org.joda.time.Weeks weeks77 = weeks60.plus(weeks66);
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks80 = weeks66.dividedBy((-1027));
        org.joda.time.Weeks weeks81 = weeks66.negated();
        boolean boolean82 = weeks40.equals((java.lang.Object) weeks66);
        int int83 = weeks26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks66);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "P-3W" + "'", str54, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "P-3W" + "'", str74, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType23 = weeks20.getFieldType(0);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        int int30 = weeks27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks29.plus((int) (short) -1);
        boolean boolean33 = weeks20.equals((java.lang.Object) weeks32);
        org.joda.time.Duration duration34 = weeks32.toStandardDuration();
        int int35 = weeks32.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = weeks19.getFieldType();
        int int21 = weeks16.get(durationFieldType20);
        org.joda.time.Weeks weeks23 = weeks16.minus((int) (byte) -1);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period25 = weeks24.toPeriod();
        boolean boolean26 = weeks16.isLessThan(weeks24);
        org.joda.time.Weeks weeks28 = weeks24.plus((int) (short) 0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(weeks28);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P100W");
        org.joda.time.PeriodType periodType2 = weeks1.getPeriodType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks5 = weeks0.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = weeks6.getFieldType();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        boolean boolean10 = weeks8.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        boolean boolean16 = weeks8.isLessThan(weeks14);
        org.joda.time.Weeks weeks17 = weeks14.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.MutablePeriod mutablePeriod20 = weeks19.toMutablePeriod();
        org.joda.time.Weeks weeks21 = weeks17.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks6.plus(weeks21);
        org.joda.time.Weeks weeks23 = weeks5.minus(weeks6);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        int int30 = weeks27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks29.plus((int) (short) -1);
        org.joda.time.Weeks weeks34 = weeks29.multipliedBy((int) (byte) 10);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.weeks((-1));
        int int42 = weeks41.size();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks47 = weeks45.dividedBy((int) '4');
        int int48 = weeks45.size();
        org.joda.time.Period period49 = weeks45.toPeriod();
        org.joda.time.DurationFieldType durationFieldType50 = weeks45.getFieldType();
        org.joda.time.Weeks weeks51 = weeks41.minus(weeks45);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        boolean boolean54 = weeks52.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        boolean boolean60 = weeks52.isLessThan(weeks58);
        org.joda.time.Weeks weeks61 = weeks58.negated();
        org.joda.time.Weeks weeks62 = weeks41.plus(weeks61);
        boolean boolean63 = weeks38.isLessThan(weeks62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks65 = weeks64.negated();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        org.joda.time.Weeks weeks68 = weeks66.dividedBy((int) '4');
        int int69 = weeks66.size();
        org.joda.time.Period period70 = weeks66.toPeriod();
        org.joda.time.DurationFieldType durationFieldType71 = weeks66.getFieldType();
        boolean boolean72 = weeks38.isSupported(durationFieldType71);
        int int73 = weeks34.get(durationFieldType71);
        int int74 = weeks5.get(durationFieldType71);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 300 + "'", int74 == 300);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        int int14 = weeks13.size();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks19 = weeks17.dividedBy((int) '4');
        int int20 = weeks17.size();
        org.joda.time.Period period21 = weeks17.toPeriod();
        org.joda.time.DurationFieldType durationFieldType22 = weeks17.getFieldType();
        org.joda.time.Weeks weeks23 = weeks13.minus(weeks17);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks30.negated();
        org.joda.time.Weeks weeks34 = weeks13.plus(weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = weeks10.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks10.dividedBy((-927));
        org.joda.time.PeriodType periodType39 = weeks38.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(periodType39);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType8 = weeks7.getFieldType();
        org.joda.time.DurationFieldType durationFieldType10 = weeks7.getFieldType(0);
        int int11 = weeks0.get(durationFieldType10);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks18 = weeks16.dividedBy((int) '4');
        int int19 = weeks16.size();
        org.joda.time.Weeks weeks20 = weeks16.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        int int26 = weeks23.size();
        org.joda.time.Weeks weeks27 = weeks23.negated();
        boolean boolean28 = weeks20.isGreaterThan(weeks23);
        org.joda.time.DurationFieldType durationFieldType29 = weeks20.getFieldType();
        int int30 = weeks13.get(durationFieldType29);
        boolean boolean31 = weeks0.isLessThan(weeks13);
        org.joda.time.PeriodType periodType32 = weeks13.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(periodType32);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy(103);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType13 = weeks12.getFieldType();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        boolean boolean16 = weeks14.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        boolean boolean22 = weeks14.isLessThan(weeks20);
        org.joda.time.Weeks weeks23 = weeks20.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.MutablePeriod mutablePeriod26 = weeks25.toMutablePeriod();
        org.joda.time.Weeks weeks27 = weeks23.plus(weeks25);
        org.joda.time.Weeks weeks28 = weeks12.plus(weeks27);
        org.joda.time.Weeks weeks30 = weeks27.plus((int) (short) 10);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType32 = weeks31.getPeriodType();
        org.joda.time.Weeks weeks34 = weeks31.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks36 = weeks31.dividedBy((int) 'a');
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        boolean boolean40 = weeks38.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        java.lang.String str45 = weeks44.toString();
        boolean boolean46 = weeks38.isLessThan(weeks44);
        org.joda.time.Weeks weeks47 = weeks37.plus(weeks38);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        java.lang.String str52 = weeks51.toString();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.ONE;
        int int54 = weeks51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks53);
        boolean boolean55 = weeks37.isGreaterThan(weeks53);
        int int56 = weeks36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks37);
        org.joda.time.DurationFieldType durationFieldType57 = weeks36.getFieldType();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks59 = weeks36.plus(weeks58);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks64 = weeks62.dividedBy((int) '4');
        int int65 = weeks62.size();
        org.joda.time.Period period66 = weeks62.toPeriod();
        org.joda.time.DurationFieldType durationFieldType67 = weeks62.getFieldType();
        org.joda.time.Weeks weeks68 = weeks58.plus(weeks62);
        boolean boolean69 = weeks30.isGreaterThan(weeks68);
        boolean boolean70 = weeks9.isGreaterThan(weeks30);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-3W" + "'", str45, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "P-3W" + "'", str52, "P-3W");
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Duration duration26 = weeks5.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(duration26);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks21 = weeks19.negated();
        org.joda.time.Weeks weeks23 = weeks21.dividedBy(1030);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType25 = weeks24.getPeriodType();
        org.joda.time.Weeks weeks27 = weeks24.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks29 = weeks24.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod30 = weeks24.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType31 = weeks24.getFieldType();
        org.joda.time.PeriodType periodType32 = weeks24.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType33 = weeks24.getFieldType();
        org.joda.time.Weeks weeks34 = weeks21.minus(weeks24);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(weeks34);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = weeks19.getFieldType();
        int int21 = weeks16.get(durationFieldType20);
        org.joda.time.MutablePeriod mutablePeriod22 = weeks16.toMutablePeriod();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.PeriodType periodType25 = weeks23.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = weeks23.isSupported(durationFieldType26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.DurationFieldType durationFieldType31 = weeks30.getFieldType();
        org.joda.time.DurationFieldType durationFieldType33 = weeks30.getFieldType(0);
        int int34 = weeks23.get(durationFieldType33);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks41 = weeks39.dividedBy((int) '4');
        int int42 = weeks39.size();
        org.joda.time.Weeks weeks43 = weeks39.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks48 = weeks46.dividedBy((int) '4');
        int int49 = weeks46.size();
        org.joda.time.Weeks weeks50 = weeks46.negated();
        boolean boolean51 = weeks43.isGreaterThan(weeks46);
        org.joda.time.DurationFieldType durationFieldType52 = weeks43.getFieldType();
        int int53 = weeks36.get(durationFieldType52);
        boolean boolean54 = weeks23.isLessThan(weeks36);
        org.joda.time.DurationFieldType durationFieldType55 = weeks23.getFieldType();
        boolean boolean56 = weeks16.isSupported(durationFieldType55);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks58 = weeks16.dividedBy((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 3 + "'", int34 == 3);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = weeks13.minus(weeks14);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.PeriodType periodType19 = weeks17.getPeriodType();
        boolean boolean20 = weeks13.isGreaterThan(weeks17);
        org.joda.time.Weeks weeks22 = weeks17.minus((int) (byte) 0);
        org.joda.time.Weeks weeks23 = weeks10.plus(weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        int int30 = weeks27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks29.plus((int) (short) -1);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks39 = weeks29.minus(weeks36);
        org.joda.time.Weeks weeks40 = weeks22.minus(weeks39);
        java.lang.String str41 = weeks39.toString();
        org.joda.time.Weeks weeks42 = weeks39.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = weeks44.minus(weeks45);
        org.joda.time.DurationFieldType durationFieldType48 = weeks45.getFieldType();
        int int49 = weeks39.get(durationFieldType48);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P4W" + "'", str41, "P4W");
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 4 + "'", int49 == 4);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType(0);
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = weeks10.minus(weeks11);
        org.joda.time.DurationFieldType durationFieldType14 = weeks11.getFieldType();
        boolean boolean15 = weeks1.isLessThan(weeks11);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((-1));
        int int18 = weeks17.size();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Period period25 = weeks21.toPeriod();
        org.joda.time.DurationFieldType durationFieldType26 = weeks21.getFieldType();
        org.joda.time.Weeks weeks27 = weeks17.minus(weeks21);
        org.joda.time.Weeks weeks29 = weeks17.minus((int) (byte) 100);
        org.joda.time.Duration duration30 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks31 = weeks1.minus(weeks17);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType33 = weeks32.getPeriodType();
        org.joda.time.Weeks weeks35 = weeks32.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        boolean boolean39 = weeks37.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        boolean boolean45 = weeks37.isLessThan(weeks43);
        org.joda.time.Weeks weeks46 = weeks36.plus(weeks37);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.ONE;
        int int53 = weeks50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks52);
        boolean boolean54 = weeks36.isGreaterThan(weeks52);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType56 = weeks55.getFieldType();
        int int57 = weeks52.get(durationFieldType56);
        boolean boolean58 = weeks32.isSupported(durationFieldType56);
        org.joda.time.Weeks weeks60 = weeks32.dividedBy((-1));
        boolean boolean61 = weeks1.isGreaterThan(weeks32);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks65 = weeks32.plus(weeks63);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks67 = weeks66.negated();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        java.lang.String str70 = weeks69.toString();
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.weeks((-1));
        int int73 = weeks72.size();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks75 = weeks74.negated();
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        org.joda.time.Weeks weeks78 = weeks76.dividedBy((int) '4');
        int int79 = weeks76.size();
        org.joda.time.Period period80 = weeks76.toPeriod();
        org.joda.time.DurationFieldType durationFieldType81 = weeks76.getFieldType();
        org.joda.time.Weeks weeks82 = weeks72.minus(weeks76);
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.THREE;
        boolean boolean85 = weeks83.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks86 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks87 = weeks86.negated();
        org.joda.time.Weeks weeks88 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks87);
        org.joda.time.Weeks weeks89 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks87);
        java.lang.String str90 = weeks89.toString();
        boolean boolean91 = weeks83.isLessThan(weeks89);
        org.joda.time.Weeks weeks92 = weeks89.negated();
        org.joda.time.Weeks weeks93 = weeks72.plus(weeks92);
        boolean boolean94 = weeks69.isLessThan(weeks93);
        org.joda.time.MutablePeriod mutablePeriod95 = weeks69.toMutablePeriod();
        int int96 = weeks69.getWeeks();
        org.joda.time.Weeks weeks98 = weeks69.multipliedBy((int) (short) 1);
        int int99 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks98);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "P-3W" + "'", str70, "P-3W");
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "P-3W" + "'", str90, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertNotNull(weeks93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(mutablePeriod95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-3) + "'", int96 == (-3));
        org.junit.Assert.assertNotNull(weeks98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 1 + "'", int99 == 1);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        int int24 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.Weeks weeks26 = weeks22.minus((int) (short) 1);
        org.joda.time.Weeks weeks28 = weeks26.minus(2);
        java.lang.String str29 = weeks28.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P97W" + "'", str29, "P97W");
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.MutablePeriod mutablePeriod6 = weeks5.toMutablePeriod();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((-1));
        int int9 = weeks8.size();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks14 = weeks12.dividedBy((int) '4');
        int int15 = weeks12.size();
        org.joda.time.Period period16 = weeks12.toPeriod();
        org.joda.time.DurationFieldType durationFieldType17 = weeks12.getFieldType();
        org.joda.time.Weeks weeks18 = weeks8.minus(weeks12);
        org.joda.time.Weeks weeks20 = weeks18.minus((-3));
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        boolean boolean29 = weeks21.isLessThan(weeks27);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.MutablePeriod mutablePeriod32 = weeks31.toMutablePeriod();
        org.joda.time.Weeks weeks33 = weeks27.plus(weeks31);
        org.joda.time.Weeks weeks34 = weeks20.plus(weeks27);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        int int36 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        org.joda.time.Weeks weeks38 = weeks5.minus((int) (short) 1);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(weeks38);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeksIn(readableInterval6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.ONE;
        int int14 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks13);
        org.joda.time.Weeks weeks16 = weeks13.plus((int) (short) -1);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType18 = weeks17.getPeriodType();
        org.joda.time.Weeks weeks20 = weeks17.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks22 = weeks17.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod23 = weeks17.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType24 = weeks17.getFieldType();
        org.joda.time.PeriodType periodType25 = weeks17.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType26 = weeks17.getFieldType();
        boolean boolean27 = weeks16.isSupported(durationFieldType26);
        org.joda.time.Period period28 = weeks16.toPeriod();
        boolean boolean29 = weeks7.isGreaterThan(weeks16);
        int int30 = weeks16.size();
        org.joda.time.Weeks weeks31 = weeks16.negated();
        int int32 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.Weeks weeks34 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        boolean boolean37 = weeks35.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        java.lang.String str42 = weeks41.toString();
        boolean boolean43 = weeks35.isLessThan(weeks41);
        org.joda.time.Weeks weeks44 = weeks41.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.MutablePeriod mutablePeriod47 = weeks46.toMutablePeriod();
        org.joda.time.Weeks weeks48 = weeks44.plus(weeks46);
        int int49 = weeks46.size();
        org.joda.time.Weeks weeks51 = weeks46.minus((int) (byte) -1);
        org.joda.time.Weeks weeks53 = weeks46.dividedBy(100);
        boolean boolean54 = weeks5.isLessThan(weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks59 = weeks57.dividedBy((int) '4');
        int int60 = weeks57.size();
        int int61 = weeks53.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks57);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P-3W" + "'", str42, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.PeriodType periodType2 = weeks1.getPeriodType();
        org.joda.time.Period period3 = weeks1.toPeriod();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period3);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(weeks4);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Period period19 = weeks0.toPeriod();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        boolean boolean23 = weeks20.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks25 = weeks20.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType27 = weeks26.getFieldType();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = weeks34.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.MutablePeriod mutablePeriod40 = weeks39.toMutablePeriod();
        org.joda.time.Weeks weeks41 = weeks37.plus(weeks39);
        org.joda.time.Weeks weeks42 = weeks26.plus(weeks41);
        org.joda.time.Weeks weeks43 = weeks25.minus(weeks26);
        org.joda.time.Weeks weeks45 = weeks25.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.MIN_VALUE;
        int int47 = weeks46.getWeeks();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = weeks48.getFieldType();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        boolean boolean52 = weeks50.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        java.lang.String str57 = weeks56.toString();
        boolean boolean58 = weeks50.isLessThan(weeks56);
        org.joda.time.Weeks weeks59 = weeks56.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.MutablePeriod mutablePeriod62 = weeks61.toMutablePeriod();
        org.joda.time.Weeks weeks63 = weeks59.plus(weeks61);
        org.joda.time.Weeks weeks64 = weeks48.plus(weeks63);
        org.joda.time.Weeks weeks66 = weeks63.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks67 = weeks66.negated();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType69 = weeks68.getFieldType();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.THREE;
        boolean boolean72 = weeks70.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks74 = weeks73.negated();
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks74);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks74);
        java.lang.String str77 = weeks76.toString();
        boolean boolean78 = weeks70.isLessThan(weeks76);
        org.joda.time.Weeks weeks79 = weeks76.negated();
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks81 = weeks80.negated();
        org.joda.time.MutablePeriod mutablePeriod82 = weeks81.toMutablePeriod();
        org.joda.time.Weeks weeks83 = weeks79.plus(weeks81);
        org.joda.time.Weeks weeks84 = weeks68.plus(weeks83);
        org.joda.time.Weeks weeks86 = weeks83.plus((int) (short) 10);
        org.joda.time.Weeks weeks87 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks88 = weeks87.negated();
        org.joda.time.Weeks weeks89 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks88);
        org.joda.time.DurationFieldType durationFieldType90 = weeks89.getFieldType();
        org.joda.time.DurationFieldType durationFieldType92 = weeks89.getFieldType(0);
        int int93 = weeks83.get(durationFieldType92);
        int int94 = weeks66.get(durationFieldType92);
        boolean boolean95 = weeks46.isSupported(durationFieldType92);
        boolean boolean96 = weeks25.isSupported(durationFieldType92);
        int int97 = weeks0.get(durationFieldType92);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-2147483648) + "'", int47 == (-2147483648));
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "P-3W" + "'", str57, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "P-3W" + "'", str77, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(mutablePeriod82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertNotNull(durationFieldType92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 3 + "'", int97 == 3);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Weeks weeks8 = weeks4.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        boolean boolean16 = weeks8.isGreaterThan(weeks11);
        org.joda.time.DurationFieldType durationFieldType17 = weeks8.getFieldType();
        int int18 = weeks1.get(durationFieldType17);
        org.joda.time.Weeks weeks20 = weeks1.plus((int) (byte) 100);
        org.joda.time.Weeks weeks22 = weeks20.multipliedBy(1);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = weeks23.getFieldType();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        boolean boolean33 = weeks25.isLessThan(weeks31);
        org.joda.time.Weeks weeks34 = weeks31.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.MutablePeriod mutablePeriod37 = weeks36.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks34.plus(weeks36);
        org.joda.time.Weeks weeks39 = weeks23.plus(weeks38);
        org.joda.time.Weeks weeks41 = weeks38.dividedBy((int) (short) 100);
        boolean boolean43 = weeks38.equals((java.lang.Object) 1L);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks48 = weeks46.dividedBy((int) '4');
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks53 = weeks51.dividedBy((int) '4');
        int int54 = weeks51.size();
        org.joda.time.Weeks weeks55 = weeks48.plus(weeks51);
        boolean boolean56 = weeks38.equals((java.lang.Object) weeks51);
        org.joda.time.MutablePeriod mutablePeriod57 = weeks38.toMutablePeriod();
        org.joda.time.Weeks weeks58 = weeks20.minus(weeks38);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(weeks58);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = weeks10.minus(10);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks20.dividedBy((int) '4');
        org.joda.time.Weeks weeks24 = weeks20.multipliedBy((int) (short) 0);
        org.joda.time.Duration duration25 = weeks24.toStandardDuration();
        org.joda.time.Period period26 = weeks24.toPeriod();
        org.joda.time.Weeks weeks27 = weeks10.plus(weeks24);
        java.lang.String str28 = weeks24.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P0W" + "'", str28, "P0W");
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Duration duration10 = weeks0.toStandardDuration();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        java.lang.String str18 = weeks14.toString();
        org.joda.time.Period period19 = weeks14.toPeriod();
        org.joda.time.PeriodType periodType20 = weeks14.getPeriodType();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks22 = weeks0.minus(weeks21);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        boolean boolean17 = weeks9.isLessThan(weeks15);
        org.joda.time.Weeks weeks18 = weeks8.plus(weeks9);
        int int19 = weeks9.size();
        org.joda.time.DurationFieldType durationFieldType20 = weeks9.getFieldType();
        org.joda.time.Weeks weeks21 = weeks1.plus(weeks9);
        int int22 = weeks9.size();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType24 = weeks23.getPeriodType();
        org.joda.time.Weeks weeks26 = weeks23.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks28 = weeks23.dividedBy((int) 'a');
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks29.plus(weeks30);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        boolean boolean47 = weeks29.isGreaterThan(weeks45);
        int int48 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        boolean boolean51 = weeks49.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        java.lang.String str56 = weeks55.toString();
        boolean boolean57 = weeks49.isLessThan(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.MutablePeriod mutablePeriod61 = weeks60.toMutablePeriod();
        org.joda.time.Weeks weeks62 = weeks58.plus(weeks60);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks64 = weeks28.minus(weeks58);
        int int65 = weeks9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks64);
        int int66 = weeks64.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-3) + "'", int66 == (-3));
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks15 = weeks5.minus(weeks12);
        org.joda.time.Weeks weeks17 = weeks5.dividedBy((int) (short) 1);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType19 = weeks18.getFieldType();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = weeks26.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.MutablePeriod mutablePeriod32 = weeks31.toMutablePeriod();
        org.joda.time.Weeks weeks33 = weeks29.plus(weeks31);
        org.joda.time.Weeks weeks34 = weeks18.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks33.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        int int43 = weeks40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks44 = weeks36.plus(weeks40);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType46 = weeks45.getPeriodType();
        org.joda.time.Weeks weeks48 = weeks45.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks50 = weeks45.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod51 = weeks45.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType52 = weeks45.getFieldType();
        org.joda.time.PeriodType periodType53 = weeks45.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType54 = weeks45.getFieldType();
        org.joda.time.Weeks weeks55 = weeks44.minus(weeks45);
        boolean boolean56 = weeks17.isLessThan(weeks44);
        org.joda.time.MutablePeriod mutablePeriod57 = weeks17.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(mutablePeriod57);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Weeks weeks8 = weeks4.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        boolean boolean16 = weeks8.isGreaterThan(weeks11);
        org.joda.time.DurationFieldType durationFieldType17 = weeks8.getFieldType();
        int int18 = weeks1.get(durationFieldType17);
        org.joda.time.Weeks weeks20 = weeks1.plus((int) (byte) 100);
        org.joda.time.Weeks weeks22 = weeks20.multipliedBy(1);
        org.joda.time.PeriodType periodType23 = weeks20.getPeriodType();
        int int24 = weeks20.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 200 + "'", int24 == 200);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.DurationFieldType durationFieldType22 = weeks21.getFieldType();
        org.joda.time.DurationFieldType durationFieldType24 = weeks21.getFieldType(0);
        int int25 = weeks15.get(durationFieldType24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks36 = weeks26.dividedBy(100);
        org.joda.time.Weeks weeks38 = weeks36.plus(1);
        org.joda.time.Weeks weeks39 = weeks15.minus(weeks36);
        int int40 = weeks39.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        int int12 = weeks11.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Period period19 = weeks15.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = weeks15.getFieldType();
        org.joda.time.Weeks weeks21 = weeks11.minus(weeks15);
        org.joda.time.Weeks weeks23 = weeks11.minus((int) (byte) 100);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        org.joda.time.DurationFieldType durationFieldType31 = weeks28.getFieldType(0);
        boolean boolean32 = weeks25.isSupported(durationFieldType31);
        boolean boolean33 = weeks11.equals((java.lang.Object) weeks25);
        boolean boolean34 = weeks0.isLessThan(weeks25);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks39 = weeks37.dividedBy((int) '4');
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks44 = weeks42.dividedBy((int) '4');
        int int45 = weeks42.size();
        org.joda.time.Weeks weeks46 = weeks39.plus(weeks42);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.DurationFieldType durationFieldType52 = weeks51.getFieldType();
        org.joda.time.DurationFieldType durationFieldType54 = weeks51.getFieldType(0);
        boolean boolean55 = weeks48.isSupported(durationFieldType54);
        boolean boolean56 = weeks42.isSupported(durationFieldType54);
        org.joda.time.PeriodType periodType57 = weeks42.getPeriodType();
        boolean boolean58 = weeks25.isLessThan(weeks42);
        org.joda.time.Weeks weeks60 = weeks25.plus((-3));
        int int61 = weeks60.getWeeks();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        org.joda.time.Weeks weeks64 = weeks60.minus(weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        boolean boolean67 = weeks65.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        org.joda.time.Weeks weeks73 = weeks65.plus(weeks71);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks75 = weeks74.negated();
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        java.lang.String str78 = weeks77.toString();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.ONE;
        int int80 = weeks77.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks79);
        org.joda.time.Weeks weeks82 = weeks79.plus((int) (short) -1);
        int int83 = weeks65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks82);
        org.joda.time.Weeks weeks85 = weeks65.plus((int) (short) 100);
        org.joda.time.Weeks weeks87 = weeks65.multipliedBy(3);
        org.joda.time.Weeks weeks89 = weeks65.dividedBy((int) (byte) -1);
        org.joda.time.Weeks weeks91 = weeks89.minus((int) '4');
        int int92 = weeks91.getWeeks();
        org.joda.time.Weeks weeks94 = weeks91.minus((int) '4');
        boolean boolean95 = weeks63.isGreaterThan(weeks91);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 97 + "'", int61 == 97);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "P-3W" + "'", str78, "P-3W");
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-55) + "'", int92 == (-55));
        org.junit.Assert.assertNotNull(weeks94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType10 = weeks9.getPeriodType();
        org.joda.time.Weeks weeks12 = weeks9.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks14 = weeks9.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod15 = weeks9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks9.getFieldType();
        org.joda.time.PeriodType periodType17 = weeks9.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType18 = weeks9.getFieldType();
        boolean boolean19 = weeks8.isSupported(durationFieldType18);
        org.joda.time.Period period20 = weeks8.toPeriod();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType22 = weeks21.getFieldType();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        boolean boolean25 = weeks23.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        java.lang.String str30 = weeks29.toString();
        boolean boolean31 = weeks23.isLessThan(weeks29);
        org.joda.time.Weeks weeks32 = weeks29.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.MutablePeriod mutablePeriod35 = weeks34.toMutablePeriod();
        org.joda.time.Weeks weeks36 = weeks32.plus(weeks34);
        org.joda.time.Weeks weeks37 = weeks21.plus(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        org.joda.time.Weeks weeks47 = weeks39.plus(weeks43);
        org.joda.time.Weeks weeks48 = weeks8.minus(weeks43);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = weeks8.getValue((-55));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -55");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "P-3W" + "'", str30, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType15 = weeks14.getFieldType();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        boolean boolean18 = weeks16.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        boolean boolean24 = weeks16.isLessThan(weeks22);
        org.joda.time.Weeks weeks25 = weeks22.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.MutablePeriod mutablePeriod28 = weeks27.toMutablePeriod();
        org.joda.time.Weeks weeks29 = weeks25.plus(weeks27);
        org.joda.time.Weeks weeks30 = weeks14.plus(weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        org.joda.time.Weeks weeks41 = weeks31.plus(weeks32);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = weeks42.getFieldType();
        boolean boolean44 = weeks41.isSupported(durationFieldType43);
        int int45 = weeks29.get(durationFieldType43);
        int int46 = weeks11.get(durationFieldType43);
        org.joda.time.PeriodType periodType47 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period49 = weeks48.toPeriod();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        org.joda.time.Weeks weeks54 = weeks52.dividedBy((int) '4');
        org.joda.time.Weeks weeks56 = weeks52.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks57 = weeks48.minus(weeks56);
        org.joda.time.Weeks weeks59 = weeks48.dividedBy((int) ' ');
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType61 = weeks60.getFieldType();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        boolean boolean64 = weeks62.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks66 = weeks65.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        java.lang.String str69 = weeks68.toString();
        boolean boolean70 = weeks62.isLessThan(weeks68);
        org.joda.time.Weeks weeks71 = weeks68.negated();
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.MutablePeriod mutablePeriod74 = weeks73.toMutablePeriod();
        org.joda.time.Weeks weeks75 = weeks71.plus(weeks73);
        org.joda.time.Weeks weeks76 = weeks60.plus(weeks75);
        org.joda.time.Weeks weeks78 = weeks75.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks80 = weeks79.negated();
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks80);
        org.joda.time.Weeks weeks82 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks80);
        java.lang.String str83 = weeks82.toString();
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.ONE;
        int int85 = weeks82.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks84);
        org.joda.time.Weeks weeks86 = weeks78.plus(weeks82);
        boolean boolean87 = weeks59.isGreaterThan(weeks82);
        int int88 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks59);
        java.lang.Class<?> wildcardClass89 = weeks59.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-3) + "'", int46 == (-3));
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "P-3W" + "'", str69, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "P-3W" + "'", str83, "P-3W");
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P3W");
        int int2 = weeks1.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 3 + "'", int2 == 3);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        int int23 = weeks19.getWeeks();
        // The following exception was thrown during execution in test generation
        try {
            int int25 = weeks19.getValue(9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 9");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        java.lang.String str6 = weeks5.toString();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.ONE;
        int int8 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks7);
        org.joda.time.Weeks weeks10 = weeks7.plus((int) (short) -1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType12 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks14 = weeks11.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks16 = weeks11.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod17 = weeks11.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType18 = weeks11.getFieldType();
        org.joda.time.PeriodType periodType19 = weeks11.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType20 = weeks11.getFieldType();
        boolean boolean21 = weeks10.isSupported(durationFieldType20);
        org.joda.time.Period period22 = weeks10.toPeriod();
        boolean boolean23 = weeks1.isGreaterThan(weeks10);
        int int24 = weeks10.size();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType26 = weeks25.getPeriodType();
        org.joda.time.Weeks weeks28 = weeks25.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks30 = weeks25.dividedBy((int) 'a');
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        org.joda.time.Weeks weeks41 = weeks31.plus(weeks32);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        int int48 = weeks45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        boolean boolean49 = weeks31.isGreaterThan(weeks47);
        int int50 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks31);
        org.joda.time.DurationFieldType durationFieldType51 = weeks30.getFieldType();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks53 = weeks30.plus(weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        boolean boolean57 = weeks55.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        boolean boolean63 = weeks55.isLessThan(weeks61);
        org.joda.time.Weeks weeks64 = weeks54.plus(weeks55);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks66 = weeks65.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        java.lang.String str69 = weeks68.toString();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.ONE;
        int int71 = weeks68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks70);
        boolean boolean72 = weeks54.isGreaterThan(weeks70);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType74 = weeks73.getFieldType();
        int int75 = weeks70.get(durationFieldType74);
        org.joda.time.Weeks weeks77 = weeks70.minus((int) (byte) -1);
        org.joda.time.Weeks weeks79 = weeks77.minus((int) '#');
        org.joda.time.Weeks weeks80 = weeks30.minus(weeks77);
        org.joda.time.Weeks weeks81 = weeks10.minus(weeks30);
        org.joda.time.Weeks weeks83 = weeks30.minus(0);
        java.lang.String str84 = weeks83.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType86 = weeks83.getFieldType(1030);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1030");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "P-3W" + "'", str69, "P-3W");
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "P0W" + "'", str84, "P0W");
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.weeks((-1));
        int int44 = weeks43.size();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks49 = weeks47.dividedBy((int) '4');
        int int50 = weeks47.size();
        org.joda.time.Period period51 = weeks47.toPeriod();
        org.joda.time.DurationFieldType durationFieldType52 = weeks47.getFieldType();
        org.joda.time.Weeks weeks53 = weeks43.minus(weeks47);
        org.joda.time.Weeks weeks55 = weeks43.minus((int) (byte) 100);
        org.joda.time.Duration duration56 = weeks43.toStandardDuration();
        org.joda.time.Weeks weeks57 = weeks5.minus(weeks43);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType59 = weeks58.getPeriodType();
        org.joda.time.Weeks weeks61 = weeks58.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks63 = weeks58.dividedBy((int) 'a');
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        boolean boolean67 = weeks65.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        boolean boolean73 = weeks65.isLessThan(weeks71);
        org.joda.time.Weeks weeks74 = weeks64.plus(weeks65);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks76 = weeks75.negated();
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks76);
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks76);
        java.lang.String str79 = weeks78.toString();
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.ONE;
        int int81 = weeks78.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks80);
        boolean boolean82 = weeks64.isGreaterThan(weeks80);
        int int83 = weeks63.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks64);
        java.lang.String str84 = weeks64.toString();
        org.joda.time.DurationFieldType durationFieldType85 = weeks64.getFieldType();
        org.joda.time.Weeks weeks86 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks87 = weeks86.negated();
        boolean boolean89 = weeks86.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks90 = weeks64.plus(weeks86);
        org.joda.time.Weeks weeks91 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType92 = weeks91.getPeriodType();
        java.lang.String str93 = weeks91.toString();
        org.joda.time.DurationFieldType durationFieldType94 = weeks91.getFieldType();
        int int95 = weeks91.size();
        boolean boolean96 = weeks64.isLessThan(weeks91);
        int int97 = weeks57.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks64);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "P-3W" + "'", str79, "P-3W");
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "P1W" + "'", str84, "P1W");
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertNotNull(periodType92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "P3W" + "'", str93, "P3W");
        org.junit.Assert.assertNotNull(durationFieldType94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks12.getWeeks();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        int int16 = weeks15.size();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks19.dividedBy((int) '4');
        int int22 = weeks19.size();
        org.joda.time.Period period23 = weeks19.toPeriod();
        org.joda.time.DurationFieldType durationFieldType24 = weeks19.getFieldType();
        org.joda.time.Weeks weeks25 = weeks15.minus(weeks19);
        org.joda.time.Weeks weeks27 = weeks25.minus((-3));
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.MutablePeriod mutablePeriod39 = weeks38.toMutablePeriod();
        org.joda.time.Weeks weeks40 = weeks34.plus(weeks38);
        org.joda.time.Weeks weeks41 = weeks27.plus(weeks34);
        org.joda.time.Weeks weeks42 = weeks12.minus(weeks41);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks45 = weeks12.minus(weeks44);
        org.joda.time.DurationFieldType durationFieldType47 = weeks44.getFieldType((int) (byte) 0);
        boolean boolean48 = weeks3.isSupported(durationFieldType47);
        org.joda.time.Weeks weeks50 = weeks3.plus((-13));
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType52 = weeks51.getPeriodType();
        org.joda.time.Weeks weeks54 = weeks51.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks56 = weeks51.dividedBy((int) 'a');
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        boolean boolean60 = weeks58.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks62 = weeks61.negated();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        java.lang.String str65 = weeks64.toString();
        boolean boolean66 = weeks58.isLessThan(weeks64);
        org.joda.time.Weeks weeks67 = weeks57.plus(weeks58);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        int int74 = weeks71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks73);
        boolean boolean75 = weeks57.isGreaterThan(weeks73);
        int int76 = weeks56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks57);
        java.lang.String str77 = weeks57.toString();
        org.joda.time.Weeks weeks78 = weeks50.minus(weeks57);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType80 = weeks79.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod81 = weeks79.toMutablePeriod();
        boolean boolean82 = weeks50.isGreaterThan(weeks79);
        org.joda.time.Duration duration83 = weeks50.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "P-3W" + "'", str65, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "P1W" + "'", str77, "P1W");
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(mutablePeriod81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(duration83);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = weeks13.minus(weeks14);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.PeriodType periodType19 = weeks17.getPeriodType();
        boolean boolean20 = weeks13.isGreaterThan(weeks17);
        org.joda.time.Weeks weeks22 = weeks17.minus((int) (byte) 0);
        org.joda.time.Weeks weeks23 = weeks10.plus(weeks22);
        org.joda.time.Weeks weeks25 = weeks23.multipliedBy(0);
        int int27 = weeks23.getValue((int) (byte) 0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        int int12 = weeks11.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Period period19 = weeks15.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = weeks15.getFieldType();
        org.joda.time.Weeks weeks21 = weeks11.minus(weeks15);
        org.joda.time.Weeks weeks23 = weeks11.minus((int) (byte) 100);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        org.joda.time.DurationFieldType durationFieldType31 = weeks28.getFieldType(0);
        boolean boolean32 = weeks25.isSupported(durationFieldType31);
        boolean boolean33 = weeks11.equals((java.lang.Object) weeks25);
        boolean boolean34 = weeks0.isLessThan(weeks25);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks39 = weeks37.dividedBy((int) '4');
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks44 = weeks42.dividedBy((int) '4');
        int int45 = weeks42.size();
        org.joda.time.Weeks weeks46 = weeks39.plus(weeks42);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.DurationFieldType durationFieldType52 = weeks51.getFieldType();
        org.joda.time.DurationFieldType durationFieldType54 = weeks51.getFieldType(0);
        boolean boolean55 = weeks48.isSupported(durationFieldType54);
        boolean boolean56 = weeks42.isSupported(durationFieldType54);
        org.joda.time.PeriodType periodType57 = weeks42.getPeriodType();
        boolean boolean58 = weeks25.isLessThan(weeks42);
        org.joda.time.Weeks weeks60 = weeks42.minus(101);
        org.joda.time.Period period61 = weeks60.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(period61);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks4.plus(weeks5);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        boolean boolean22 = weeks4.isGreaterThan(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = weeks23.getFieldType();
        int int25 = weeks20.get(durationFieldType24);
        boolean boolean26 = weeks0.isSupported(durationFieldType24);
        org.joda.time.Weeks weeks28 = weeks0.dividedBy((-1));
        org.joda.time.Weeks weeks30 = weeks0.dividedBy(3);
        org.joda.time.Weeks weeks32 = weeks30.dividedBy(4);
        org.joda.time.Weeks weeks34 = weeks32.plus((-3));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int30 = weeks3.getWeeks();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType32 = weeks31.getPeriodType();
        org.joda.time.Weeks weeks34 = weeks31.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks36 = weeks31.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod37 = weeks31.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType38 = weeks31.getFieldType();
        org.joda.time.PeriodType periodType39 = weeks31.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType40 = weeks31.getFieldType();
        int int41 = weeks3.get(durationFieldType40);
        org.joda.time.Period period42 = weeks3.toPeriod();
        org.joda.time.Weeks weeks44 = weeks3.multipliedBy(3);
        int int45 = weeks3.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-3) + "'", int41 == (-3));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-3) + "'", int45 == (-3));
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType24 = weeks2.getFieldType();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = weeks25.plus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        int int40 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks39.plus((int) (short) -1);
        int int43 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks25.plus((int) (short) 100);
        org.joda.time.Weeks weeks47 = weeks45.multipliedBy((int) (short) 10);
        boolean boolean48 = weeks2.isGreaterThan(weeks45);
        org.joda.time.Duration duration49 = weeks45.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration49);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = weeks13.minus(weeks14);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.PeriodType periodType19 = weeks17.getPeriodType();
        boolean boolean20 = weeks13.isGreaterThan(weeks17);
        org.joda.time.Weeks weeks22 = weeks17.minus((int) (byte) 0);
        org.joda.time.Weeks weeks23 = weeks10.plus(weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        int int30 = weeks27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks29.plus((int) (short) -1);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks39 = weeks29.minus(weeks36);
        org.joda.time.Weeks weeks40 = weeks22.minus(weeks39);
        java.lang.Class<?> wildcardClass41 = weeks22.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((-4));
        org.joda.time.DurationFieldType durationFieldType17 = weeks16.getFieldType();
        boolean boolean18 = weeks14.equals((java.lang.Object) durationFieldType17);
        int int19 = weeks14.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Weeks weeks11 = weeks0.dividedBy((int) ' ');
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType13 = weeks12.getFieldType();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        boolean boolean16 = weeks14.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        boolean boolean22 = weeks14.isLessThan(weeks20);
        org.joda.time.Weeks weeks23 = weeks20.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.MutablePeriod mutablePeriod26 = weeks25.toMutablePeriod();
        org.joda.time.Weeks weeks27 = weeks23.plus(weeks25);
        org.joda.time.Weeks weeks28 = weeks12.plus(weeks27);
        org.joda.time.Weeks weeks30 = weeks27.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.ONE;
        int int37 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks36);
        org.joda.time.Weeks weeks38 = weeks30.plus(weeks34);
        boolean boolean39 = weeks11.isGreaterThan(weeks34);
        org.joda.time.DurationFieldType durationFieldType40 = weeks11.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(durationFieldType40);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = weeks11.getFieldType();
        boolean boolean13 = weeks10.isSupported(durationFieldType12);
        int int14 = weeks10.getWeeks();
        org.joda.time.Weeks weeks16 = weeks10.multipliedBy((int) (byte) 100);
        org.joda.time.Duration duration17 = weeks10.toStandardDuration();
        org.joda.time.Period period18 = weeks10.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.PeriodType periodType4 = weeks3.getPeriodType();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(300);
        org.joda.time.Weeks weeks7 = null;
        org.joda.time.Weeks weeks8 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = weeks10.minus(weeks11);
        org.joda.time.DurationFieldType durationFieldType14 = weeks11.getFieldType();
        boolean boolean15 = weeks8.isSupported(durationFieldType14);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        int int29 = weeks3.getWeeks();
        int int30 = weeks3.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-3) + "'", int29 == (-3));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks21 = weeks19.negated();
        org.joda.time.Weeks weeks23 = weeks21.dividedBy(1030);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str25 = weeks23.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P0W" + "'", str25, "P0W");
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.Weeks weeks10 = weeks8.dividedBy((int) '4');
        int int11 = weeks8.size();
        org.joda.time.Period period12 = weeks8.toPeriod();
        org.joda.time.DurationFieldType durationFieldType13 = weeks8.getFieldType();
        org.joda.time.PeriodType periodType14 = weeks8.getPeriodType();
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeksIn(readableInterval15);
        org.joda.time.MutablePeriod mutablePeriod17 = weeks16.toMutablePeriod();
        boolean boolean18 = weeks8.isGreaterThan(weeks16);
        boolean boolean19 = weeks5.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks20 = weeks5.negated();
        org.joda.time.Weeks weeks21 = null;
        boolean boolean22 = weeks5.isLessThan(weeks21);
        org.joda.time.Weeks weeks24 = weeks5.minus((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType26 = weeks5.getFieldType((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(weeks24);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Duration duration14 = weeks11.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = weeks11.getValue((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(duration14);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        org.joda.time.Weeks weeks13 = weeks5.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        int int20 = weeks17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (short) -1);
        int int23 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks5.plus((int) (short) 100);
        org.joda.time.Weeks weeks27 = weeks5.multipliedBy(3);
        org.joda.time.Weeks weeks29 = weeks5.dividedBy((int) (byte) -1);
        boolean boolean30 = weeks0.isGreaterThan(weeks5);
        int int31 = weeks5.size();
        org.joda.time.Period period32 = weeks5.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(period32);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks10 = weeks6.dividedBy(3);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period12 = weeks11.toPeriod();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        org.joda.time.Weeks weeks19 = weeks15.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks20 = weeks11.minus(weeks19);
        boolean boolean21 = weeks6.equals((java.lang.Object) weeks20);
        int int22 = weeks20.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = weeks1.minus((int) (byte) 100);
        int int14 = weeks13.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks0.multipliedBy(3);
        org.joda.time.Weeks weeks24 = weeks0.dividedBy((int) (byte) -1);
        java.lang.Class<?> wildcardClass25 = weeks0.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(200);
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.Weeks weeks22 = weeks20.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType24 = weeks23.getPeriodType();
        org.joda.time.Weeks weeks26 = weeks23.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks28 = weeks23.dividedBy((int) 'a');
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks29.plus(weeks30);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        boolean boolean47 = weeks29.isGreaterThan(weeks45);
        int int48 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        java.lang.String str49 = weeks29.toString();
        org.joda.time.MutablePeriod mutablePeriod50 = weeks29.toMutablePeriod();
        boolean boolean51 = weeks22.isGreaterThan(weeks29);
        org.joda.time.MutablePeriod mutablePeriod52 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks54 = weeks22.minus((-3));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P1W" + "'", str49, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(weeks54);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = weeks11.getFieldType();
        boolean boolean13 = weeks10.isSupported(durationFieldType12);
        int int14 = weeks10.getWeeks();
        org.joda.time.Weeks weeks16 = weeks10.dividedBy((int) '4');
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        boolean boolean27 = weeks19.isLessThan(weeks25);
        org.joda.time.Weeks weeks28 = weeks18.plus(weeks19);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType30 = weeks29.getFieldType();
        boolean boolean31 = weeks28.isSupported(durationFieldType30);
        int int32 = weeks28.getWeeks();
        org.joda.time.Weeks weeks34 = weeks28.multipliedBy((int) (byte) 100);
        org.joda.time.Duration duration35 = weeks28.toStandardDuration();
        org.joda.time.Weeks weeks37 = weeks28.dividedBy((int) (byte) 10);
        boolean boolean38 = weeks17.isLessThan(weeks28);
        org.joda.time.PeriodType periodType39 = weeks17.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(periodType39);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks5 = weeks0.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks7 = weeks5.multipliedBy((-1));
        int int8 = weeks5.size();
        org.joda.time.Weeks weeks10 = weeks5.multipliedBy((-103));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds11 = weeks10.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -30900 * 604800");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(weeks10);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.DurationFieldType durationFieldType6 = weeks5.getFieldType();
        org.joda.time.DurationFieldType durationFieldType8 = weeks5.getFieldType(0);
        org.joda.time.Weeks weeks9 = weeks2.plus(weeks5);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((-3));
        org.joda.time.Weeks weeks13 = weeks11.minus(3);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        java.lang.String str6 = weeks2.toString();
        org.joda.time.Weeks weeks8 = weeks2.dividedBy((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks14 = weeks12.dividedBy((int) '4');
        org.joda.time.Weeks weeks16 = weeks12.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks16.plus(weeks26);
        org.joda.time.DurationFieldType durationFieldType28 = weeks16.getFieldType();
        int int29 = weeks8.get(durationFieldType28);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        java.lang.String str6 = weeks5.toString();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.ONE;
        int int8 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks7);
        org.joda.time.Weeks weeks10 = weeks7.plus((int) (short) -1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType12 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks14 = weeks11.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks16 = weeks11.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod17 = weeks11.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType18 = weeks11.getFieldType();
        org.joda.time.PeriodType periodType19 = weeks11.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType20 = weeks11.getFieldType();
        boolean boolean21 = weeks10.isSupported(durationFieldType20);
        org.joda.time.Period period22 = weeks10.toPeriod();
        boolean boolean23 = weeks1.isGreaterThan(weeks10);
        int int24 = weeks10.size();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType26 = weeks25.getPeriodType();
        org.joda.time.Weeks weeks28 = weeks25.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks30 = weeks25.dividedBy((int) 'a');
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        org.joda.time.Weeks weeks41 = weeks31.plus(weeks32);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        int int48 = weeks45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        boolean boolean49 = weeks31.isGreaterThan(weeks47);
        int int50 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks31);
        org.joda.time.DurationFieldType durationFieldType51 = weeks30.getFieldType();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks53 = weeks30.plus(weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        boolean boolean57 = weeks55.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        boolean boolean63 = weeks55.isLessThan(weeks61);
        org.joda.time.Weeks weeks64 = weeks54.plus(weeks55);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks66 = weeks65.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        java.lang.String str69 = weeks68.toString();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.ONE;
        int int71 = weeks68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks70);
        boolean boolean72 = weeks54.isGreaterThan(weeks70);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType74 = weeks73.getFieldType();
        int int75 = weeks70.get(durationFieldType74);
        org.joda.time.Weeks weeks77 = weeks70.minus((int) (byte) -1);
        org.joda.time.Weeks weeks79 = weeks77.minus((int) '#');
        org.joda.time.Weeks weeks80 = weeks30.minus(weeks77);
        org.joda.time.Weeks weeks81 = weeks10.minus(weeks30);
        org.joda.time.Weeks weeks83 = weeks81.multipliedBy((int) (short) 1);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "P-3W" + "'", str69, "P-3W");
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks3 = weeks1.plus((-4));
        org.joda.time.Weeks weeks5 = weeks1.multipliedBy((int) (byte) 100);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeksIn(readableInterval24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks25.minus(weeks32);
        org.joda.time.Weeks weeks36 = weeks19.plus(weeks25);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks39 = weeks25.dividedBy((-1027));
        org.joda.time.Weeks weeks40 = weeks25.negated();
        org.joda.time.MutablePeriod mutablePeriod41 = weeks40.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.MutablePeriod mutablePeriod27 = weeks18.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod28 = weeks18.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks11.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        int int19 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.DurationFieldType durationFieldType20 = weeks14.getFieldType();
        int int21 = weeks13.get(durationFieldType20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.MutablePeriod mutablePeriod33 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks34 = weeks28.plus(weeks32);
        int int35 = weeks32.getWeeks();
        org.joda.time.Weeks weeks36 = weeks13.minus(weeks32);
        java.lang.String str37 = weeks13.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2) + "'", int21 == (-2));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-3) + "'", int35 == (-3));
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-2W" + "'", str37, "P-2W");
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks12 = weeks10.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = weeks14.minus(weeks15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.PeriodType periodType20 = weeks18.getPeriodType();
        boolean boolean21 = weeks14.isGreaterThan(weeks18);
        org.joda.time.Weeks weeks23 = weeks18.minus((int) (byte) 0);
        org.joda.time.Duration duration24 = weeks23.toStandardDuration();
        boolean boolean25 = weeks10.equals((java.lang.Object) duration24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = weeks26.plus(weeks32);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        int int41 = weeks38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks40);
        org.joda.time.Weeks weeks43 = weeks40.plus((int) (short) -1);
        int int44 = weeks26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks43);
        org.joda.time.Weeks weeks46 = weeks26.plus((int) (short) 100);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = weeks48.minus(weeks49);
        java.lang.String str52 = weeks51.toString();
        int int53 = weeks26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        org.joda.time.DurationFieldType durationFieldType55 = weeks51.getFieldType(0);
        java.lang.String str56 = weeks51.toString();
        int int57 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        int int62 = weeks61.size();
        java.lang.String str63 = weeks61.toString();
        java.lang.String str64 = weeks61.toString();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks69 = weeks66.minus((int) '4');
        org.joda.time.Weeks weeks70 = weeks61.minus(weeks66);
        org.joda.time.Weeks weeks72 = weeks61.minus((int) (byte) 100);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks74 = weeks73.negated();
        org.joda.time.Weeks weeks75 = weeks72.plus(weeks73);
        int int76 = weeks72.getWeeks();
        boolean boolean77 = weeks51.isGreaterThan(weeks72);
        org.joda.time.Weeks weeks79 = weeks51.dividedBy((int) (short) -1);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "P-4W" + "'", str52, "P-4W");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-4W" + "'", str56, "P-4W");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "P-3W" + "'", str63, "P-3W");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-103) + "'", int76 == (-103));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(weeks79);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (byte) 100);
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.MutablePeriod mutablePeriod29 = weeks28.toMutablePeriod();
        org.joda.time.Weeks weeks31 = weeks28.multipliedBy(0);
        org.joda.time.Weeks weeks32 = weeks26.minus(weeks31);
        org.joda.time.Duration duration33 = weeks32.toStandardDuration();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = weeks35.minus(weeks36);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType40 = weeks39.getPeriodType();
        org.joda.time.Weeks weeks42 = weeks39.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks44 = weeks39.dividedBy((int) 'a');
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        boolean boolean48 = weeks46.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        boolean boolean54 = weeks46.isLessThan(weeks52);
        org.joda.time.Weeks weeks55 = weeks45.plus(weeks46);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        java.lang.String str60 = weeks59.toString();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.ONE;
        int int62 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks61);
        boolean boolean63 = weeks45.isGreaterThan(weeks61);
        int int64 = weeks44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        boolean boolean67 = weeks65.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        boolean boolean73 = weeks65.isLessThan(weeks71);
        org.joda.time.Weeks weeks74 = weeks71.negated();
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks76 = weeks75.negated();
        org.joda.time.MutablePeriod mutablePeriod77 = weeks76.toMutablePeriod();
        org.joda.time.Weeks weeks78 = weeks74.plus(weeks76);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks74);
        org.joda.time.Weeks weeks80 = weeks44.minus(weeks74);
        boolean boolean81 = weeks36.isLessThan(weeks44);
        boolean boolean82 = weeks32.isLessThan(weeks36);
        boolean boolean83 = weeks24.isGreaterThan(weeks36);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "P-3W" + "'", str60, "P-3W");
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(mutablePeriod77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = weeks10.minus(10);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks20.dividedBy((int) '4');
        org.joda.time.Weeks weeks24 = weeks20.multipliedBy((int) (short) 0);
        org.joda.time.Duration duration25 = weeks24.toStandardDuration();
        org.joda.time.Period period26 = weeks24.toPeriod();
        org.joda.time.Weeks weeks27 = weeks10.plus(weeks24);
        java.lang.Class<?> wildcardClass28 = weeks10.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = weeks1.minus((int) (byte) 100);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.DurationFieldType durationFieldType19 = weeks18.getFieldType();
        org.joda.time.DurationFieldType durationFieldType21 = weeks18.getFieldType(0);
        boolean boolean22 = weeks15.isSupported(durationFieldType21);
        boolean boolean23 = weeks1.equals((java.lang.Object) weeks15);
        int int24 = weeks15.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeksIn(readableInterval3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks4.minus(weeks11);
        org.joda.time.Weeks weeks16 = weeks14.plus((int) 'a');
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = weeks18.minus(weeks19);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType23 = weeks22.getPeriodType();
        int int24 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks16.plus(weeks22);
        org.joda.time.Weeks weeks27 = weeks25.minus(1030);
        boolean boolean28 = weeks0.equals((java.lang.Object) weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks0.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(mutablePeriod29);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks6.dividedBy((int) '4');
        int int9 = weeks8.getWeeks();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        int int12 = weeks11.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Period period19 = weeks15.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = weeks15.getFieldType();
        org.joda.time.Weeks weeks21 = weeks11.minus(weeks15);
        org.joda.time.Weeks weeks23 = weeks21.minus((-3));
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.MutablePeriod mutablePeriod35 = weeks34.toMutablePeriod();
        org.joda.time.Weeks weeks36 = weeks30.plus(weeks34);
        org.joda.time.Weeks weeks37 = weeks23.plus(weeks30);
        org.joda.time.Weeks weeks38 = weeks8.minus(weeks37);
        org.joda.time.Weeks weeks39 = weeks3.plus(weeks8);
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.weeks((-1));
        int int43 = weeks42.size();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks48 = weeks46.dividedBy((int) '4');
        int int49 = weeks46.size();
        org.joda.time.Period period50 = weeks46.toPeriod();
        org.joda.time.DurationFieldType durationFieldType51 = weeks46.getFieldType();
        org.joda.time.Weeks weeks52 = weeks42.minus(weeks46);
        org.joda.time.MutablePeriod mutablePeriod53 = weeks52.toMutablePeriod();
        org.joda.time.Weeks weeks54 = weeks52.negated();
        org.joda.time.DurationFieldType durationFieldType55 = weeks52.getFieldType();
        boolean boolean56 = weeks40.isSupported(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks1.plus((int) (byte) 0);
        java.lang.String str14 = weeks1.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P0W" + "'", str14, "P0W");
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        java.lang.String str2 = weeks0.toString();
        org.joda.time.DurationFieldType durationFieldType3 = weeks0.getFieldType();
        int int4 = weeks0.size();
        org.joda.time.Weeks weeks5 = weeks0.negated();
        java.lang.Class<?> wildcardClass6 = weeks0.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "P3W" + "'", str2, "P3W");
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks12 = weeks0.dividedBy((int) (short) -1);
        int int13 = weeks0.size();
        int int14 = weeks0.size();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.DurationFieldType durationFieldType20 = weeks19.getFieldType();
        org.joda.time.DurationFieldType durationFieldType22 = weeks19.getFieldType(0);
        boolean boolean23 = weeks16.isSupported(durationFieldType22);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = weeks25.minus(weeks26);
        org.joda.time.DurationFieldType durationFieldType29 = weeks26.getFieldType();
        boolean boolean30 = weeks16.isLessThan(weeks26);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.weeks((-1));
        int int33 = weeks32.size();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks38 = weeks36.dividedBy((int) '4');
        int int39 = weeks36.size();
        org.joda.time.Period period40 = weeks36.toPeriod();
        org.joda.time.DurationFieldType durationFieldType41 = weeks36.getFieldType();
        org.joda.time.Weeks weeks42 = weeks32.minus(weeks36);
        org.joda.time.Weeks weeks44 = weeks32.minus((int) (byte) 100);
        org.joda.time.Duration duration45 = weeks32.toStandardDuration();
        org.joda.time.Weeks weeks46 = weeks16.minus(weeks32);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        boolean boolean48 = weeks0.isGreaterThan(weeks16);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = weeks16.getValue((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483648");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        java.lang.String str6 = weeks5.toString();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.ONE;
        int int8 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks7);
        org.joda.time.Weeks weeks10 = weeks7.plus((int) (short) -1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType12 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks14 = weeks11.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks16 = weeks11.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod17 = weeks11.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType18 = weeks11.getFieldType();
        org.joda.time.PeriodType periodType19 = weeks11.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType20 = weeks11.getFieldType();
        boolean boolean21 = weeks10.isSupported(durationFieldType20);
        org.joda.time.Period period22 = weeks10.toPeriod();
        boolean boolean23 = weeks1.isGreaterThan(weeks10);
        int int24 = weeks10.size();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType26 = weeks25.getPeriodType();
        org.joda.time.Weeks weeks28 = weeks25.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks30 = weeks25.dividedBy((int) 'a');
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        org.joda.time.Weeks weeks41 = weeks31.plus(weeks32);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        int int48 = weeks45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        boolean boolean49 = weeks31.isGreaterThan(weeks47);
        int int50 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks31);
        org.joda.time.DurationFieldType durationFieldType51 = weeks30.getFieldType();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks53 = weeks30.plus(weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        boolean boolean57 = weeks55.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        boolean boolean63 = weeks55.isLessThan(weeks61);
        org.joda.time.Weeks weeks64 = weeks54.plus(weeks55);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks66 = weeks65.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        java.lang.String str69 = weeks68.toString();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.ONE;
        int int71 = weeks68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks70);
        boolean boolean72 = weeks54.isGreaterThan(weeks70);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType74 = weeks73.getFieldType();
        int int75 = weeks70.get(durationFieldType74);
        org.joda.time.Weeks weeks77 = weeks70.minus((int) (byte) -1);
        org.joda.time.Weeks weeks79 = weeks77.minus((int) '#');
        org.joda.time.Weeks weeks80 = weeks30.minus(weeks77);
        org.joda.time.Weeks weeks81 = weeks10.minus(weeks30);
        org.joda.time.Weeks weeks83 = weeks30.minus(0);
        org.joda.time.PeriodType periodType84 = weeks30.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType85 = weeks30.getFieldType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "P-3W" + "'", str69, "P-3W");
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(durationFieldType85);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(4);
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Weeks weeks11 = weeks4.plus(weeks7);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.DurationFieldType durationFieldType17 = weeks16.getFieldType();
        org.joda.time.DurationFieldType durationFieldType19 = weeks16.getFieldType(0);
        boolean boolean20 = weeks13.isSupported(durationFieldType19);
        boolean boolean21 = weeks7.isSupported(durationFieldType19);
        org.joda.time.Weeks weeks23 = weeks7.dividedBy((-2147483648));
        // The following exception was thrown during execution in test generation
        try {
            int int25 = weeks7.getValue(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(weeks23);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Weeks weeks8 = weeks4.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        boolean boolean16 = weeks8.isGreaterThan(weeks11);
        org.joda.time.DurationFieldType durationFieldType17 = weeks8.getFieldType();
        int int18 = weeks1.get(durationFieldType17);
        org.joda.time.PeriodType periodType19 = weeks1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks28);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy(0);
        org.joda.time.Weeks weeks39 = weeks33.minus(weeks38);
        int int40 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks41 = weeks39.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        int int48 = weeks45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        org.joda.time.Weeks weeks50 = weeks47.plus((int) (short) -1);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        org.joda.time.Weeks weeks57 = weeks47.minus(weeks54);
        boolean boolean58 = weeks39.isGreaterThan(weeks54);
        org.joda.time.Weeks weeks59 = weeks1.plus(weeks54);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType61 = weeks60.getPeriodType();
        org.joda.time.Weeks weeks63 = weeks60.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks65 = weeks60.dividedBy((int) 'a');
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        boolean boolean69 = weeks67.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks71 = weeks70.negated();
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks71);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks71);
        java.lang.String str74 = weeks73.toString();
        boolean boolean75 = weeks67.isLessThan(weeks73);
        org.joda.time.Weeks weeks76 = weeks66.plus(weeks67);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks78 = weeks77.negated();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks78);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks78);
        java.lang.String str81 = weeks80.toString();
        org.joda.time.Weeks weeks82 = org.joda.time.Weeks.ONE;
        int int83 = weeks80.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks82);
        boolean boolean84 = weeks66.isGreaterThan(weeks82);
        int int85 = weeks65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks66);
        java.lang.String str86 = weeks66.toString();
        org.joda.time.DurationFieldType durationFieldType87 = weeks66.getFieldType();
        org.joda.time.Weeks weeks88 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks89 = weeks88.negated();
        boolean boolean91 = weeks88.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks92 = weeks66.plus(weeks88);
        boolean boolean93 = weeks54.isGreaterThan(weeks92);
        int int94 = weeks54.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "P-3W" + "'", str74, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "P-3W" + "'", str81, "P-3W");
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "P1W" + "'", str86, "P1W");
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType12 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks14 = weeks11.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks16 = weeks11.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod17 = weeks11.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType18 = weeks11.getFieldType();
        int int19 = weeks10.get(durationFieldType18);
        int int20 = weeks6.get(durationFieldType18);
        java.lang.String str21 = weeks6.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType23 = weeks22.getFieldType();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType25 = weeks24.getPeriodType();
        org.joda.time.Weeks weeks27 = weeks24.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks29 = weeks24.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod30 = weeks24.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType31 = weeks24.getFieldType();
        org.joda.time.PeriodType periodType32 = weeks24.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType33 = weeks24.getFieldType();
        org.joda.time.Weeks weeks34 = weeks24.negated();
        org.joda.time.Weeks weeks36 = weeks24.multipliedBy(300);
        boolean boolean37 = weeks22.equals((java.lang.Object) weeks24);
        org.joda.time.Weeks weeks39 = weeks22.plus((int) (short) 1);
        boolean boolean40 = weeks6.isGreaterThan(weeks39);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-3) + "'", int20 == (-3));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 10);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        java.lang.String str6 = weeks5.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((-1));
        int int9 = weeks8.size();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks14 = weeks12.dividedBy((int) '4');
        int int15 = weeks12.size();
        org.joda.time.Period period16 = weeks12.toPeriod();
        org.joda.time.DurationFieldType durationFieldType17 = weeks12.getFieldType();
        org.joda.time.Weeks weeks18 = weeks8.minus(weeks12);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        boolean boolean27 = weeks19.isLessThan(weeks25);
        org.joda.time.Weeks weeks28 = weeks25.negated();
        org.joda.time.Weeks weeks29 = weeks8.plus(weeks28);
        boolean boolean30 = weeks5.isLessThan(weeks29);
        org.joda.time.MutablePeriod mutablePeriod31 = weeks5.toMutablePeriod();
        int int32 = weeks5.getWeeks();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType34 = weeks33.getPeriodType();
        org.joda.time.Weeks weeks36 = weeks33.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks38 = weeks33.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod39 = weeks33.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType40 = weeks33.getFieldType();
        org.joda.time.PeriodType periodType41 = weeks33.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType42 = weeks33.getFieldType();
        int int43 = weeks5.get(durationFieldType42);
        int int44 = weeks5.getWeeks();
        boolean boolean45 = weeks1.isGreaterThan(weeks5);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-3) + "'", int44 == (-3));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = weeks10.minus(10);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.DurationFieldType durationFieldType23 = weeks20.getFieldType(0);
        org.joda.time.Weeks weeks24 = weeks10.plus(weeks20);
        java.lang.String str25 = weeks10.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType27 = weeks10.getFieldType((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        int int28 = weeks6.size();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType30 = weeks29.getPeriodType();
        org.joda.time.Weeks weeks32 = weeks29.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks34 = weeks29.dividedBy((int) 'a');
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks35.plus(weeks36);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        boolean boolean53 = weeks35.isGreaterThan(weeks51);
        int int54 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.DurationFieldType durationFieldType55 = weeks34.getFieldType();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks57 = weeks34.plus(weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks60.dividedBy((int) '4');
        int int63 = weeks60.size();
        org.joda.time.Period period64 = weeks60.toPeriod();
        org.joda.time.DurationFieldType durationFieldType65 = weeks60.getFieldType();
        org.joda.time.Weeks weeks66 = weeks56.plus(weeks60);
        org.joda.time.Weeks weeks67 = weeks6.plus(weeks66);
        org.joda.time.Weeks weeks69 = weeks66.minus(0);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        org.joda.time.Weeks weeks76 = weeks74.dividedBy((int) '4');
        int int77 = weeks74.size();
        org.joda.time.Weeks weeks78 = weeks74.negated();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks80 = weeks79.negated();
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks80);
        org.joda.time.Weeks weeks83 = weeks81.dividedBy((int) '4');
        int int84 = weeks81.size();
        org.joda.time.Weeks weeks85 = weeks81.negated();
        boolean boolean86 = weeks78.isGreaterThan(weeks81);
        org.joda.time.DurationFieldType durationFieldType87 = weeks78.getFieldType();
        int int88 = weeks71.get(durationFieldType87);
        org.joda.time.Weeks weeks90 = weeks71.plus((int) (byte) 100);
        org.joda.time.Weeks weeks92 = weeks90.multipliedBy(1);
        int int93 = weeks69.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks90);
        org.joda.time.MutablePeriod mutablePeriod94 = weeks90.toMutablePeriod();
        int int95 = weeks90.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks10 = weeks0.negated();
        org.joda.time.Weeks weeks12 = weeks0.dividedBy((-1027));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        int int4 = weeks1.get(durationFieldType3);
        org.joda.time.Duration duration5 = weeks1.toStandardDuration();
        org.joda.time.Weeks weeks6 = weeks1.negated();
        int int7 = weeks1.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((-1));
        int int20 = weeks19.size();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        int int26 = weeks23.size();
        org.joda.time.Period period27 = weeks23.toPeriod();
        org.joda.time.DurationFieldType durationFieldType28 = weeks23.getFieldType();
        org.joda.time.Weeks weeks29 = weeks19.minus(weeks23);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.negated();
        org.joda.time.Weeks weeks40 = weeks19.plus(weeks39);
        org.joda.time.Weeks weeks41 = weeks17.plus(weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.TWO;
        int int43 = weeks42.size();
        org.joda.time.Weeks weeks45 = weeks42.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks46 = weeks40.plus(weeks42);
        org.joda.time.PeriodType periodType47 = weeks46.getPeriodType();
        int int48 = weeks46.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 4 + "'", int48 == 4);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks10 = weeks5.plus(25);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int30 = weeks3.getWeeks();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = weeks32.minus(weeks33);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.PeriodType periodType38 = weeks36.getPeriodType();
        boolean boolean39 = weeks32.isGreaterThan(weeks36);
        org.joda.time.Weeks weeks41 = weeks36.minus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType42 = weeks41.getFieldType();
        boolean boolean43 = weeks3.isSupported(durationFieldType42);
        org.joda.time.MutablePeriod mutablePeriod44 = weeks3.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(mutablePeriod44);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks16 = weeks11.minus((int) (byte) -1);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks17.plus(weeks18);
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = weeks30.minus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.PeriodType periodType36 = weeks34.getPeriodType();
        boolean boolean37 = weeks30.isGreaterThan(weeks34);
        org.joda.time.Weeks weeks39 = weeks34.minus((int) (byte) 0);
        org.joda.time.Weeks weeks40 = weeks27.plus(weeks39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType42 = weeks41.getPeriodType();
        org.joda.time.Weeks weeks44 = weeks41.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks46 = weeks41.dividedBy((int) 'a');
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        boolean boolean50 = weeks48.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        boolean boolean56 = weeks48.isLessThan(weeks54);
        org.joda.time.Weeks weeks57 = weeks47.plus(weeks48);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.ONE;
        int int64 = weeks61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks63);
        boolean boolean65 = weeks47.isGreaterThan(weeks63);
        int int66 = weeks46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        org.joda.time.DurationFieldType durationFieldType67 = weeks46.getFieldType();
        org.joda.time.Weeks weeks68 = weeks27.plus(weeks46);
        org.joda.time.Weeks weeks69 = weeks11.plus(weeks46);
        int int70 = weeks46.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = weeks19.plus(weeks20);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        java.lang.String str34 = weeks33.toString();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        int int36 = weeks33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        boolean boolean37 = weeks19.isGreaterThan(weeks35);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Period period39 = weeks19.toPeriod();
        boolean boolean40 = weeks15.isLessThan(weeks19);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = weeks41.plus(weeks42);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        java.lang.String str56 = weeks55.toString();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.ONE;
        int int58 = weeks55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks57);
        boolean boolean59 = weeks41.isGreaterThan(weeks57);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Period period61 = weeks41.toPeriod();
        org.joda.time.Weeks weeks62 = weeks19.minus(weeks41);
        org.joda.time.DurationFieldType durationFieldType63 = weeks41.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "P-3W" + "'", str34, "P-3W");
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(durationFieldType63);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.minus((int) 'a');
        org.joda.time.PeriodType periodType5 = weeks4.getPeriodType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = weeks11.getFieldType();
        boolean boolean13 = weeks10.isSupported(durationFieldType12);
        int int14 = weeks10.getWeeks();
        org.joda.time.Weeks weeks16 = weeks10.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        boolean boolean20 = weeks17.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks22 = weeks17.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((-1));
        int int30 = weeks29.size();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks35 = weeks33.dividedBy((int) '4');
        int int36 = weeks33.size();
        org.joda.time.Period period37 = weeks33.toPeriod();
        org.joda.time.DurationFieldType durationFieldType38 = weeks33.getFieldType();
        org.joda.time.Weeks weeks39 = weeks29.minus(weeks33);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        boolean boolean42 = weeks40.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        java.lang.String str47 = weeks46.toString();
        boolean boolean48 = weeks40.isLessThan(weeks46);
        org.joda.time.Weeks weeks49 = weeks46.negated();
        org.joda.time.Weeks weeks50 = weeks29.plus(weeks49);
        boolean boolean51 = weeks26.isLessThan(weeks50);
        org.joda.time.MutablePeriod mutablePeriod52 = weeks26.toMutablePeriod();
        int int54 = weeks26.getValue((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType55 = weeks26.getFieldType();
        boolean boolean56 = weeks17.isSupported(durationFieldType55);
        int int57 = weeks10.get(durationFieldType55);
        int int58 = weeks10.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P-3W" + "'", str47, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-3) + "'", int54 == (-3));
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 4 + "'", int57 == 4);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 4 + "'", int58 == 4);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Weeks weeks11 = weeks7.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks16 = weeks14.dividedBy((int) '4');
        int int17 = weeks14.size();
        org.joda.time.Weeks weeks18 = weeks14.negated();
        boolean boolean19 = weeks11.isGreaterThan(weeks14);
        org.joda.time.DurationFieldType durationFieldType20 = weeks11.getFieldType();
        int int21 = weeks4.get(durationFieldType20);
        org.joda.time.PeriodType periodType22 = weeks4.getPeriodType();
        java.lang.String str23 = weeks4.toString();
        org.joda.time.Weeks weeks24 = weeks1.minus(weeks4);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = weeks25.plus(weeks31);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType37 = weeks36.getPeriodType();
        org.joda.time.Weeks weeks39 = weeks36.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks41 = weeks36.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod42 = weeks36.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType43 = weeks36.getFieldType();
        int int44 = weeks35.get(durationFieldType43);
        int int45 = weeks31.get(durationFieldType43);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = weeks47.minus(weeks48);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType52 = weeks51.getPeriodType();
        int int53 = weeks50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        org.joda.time.Duration duration54 = weeks50.toStandardDuration();
        boolean boolean55 = weeks31.isLessThan(weeks50);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks56.plus(weeks57);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        java.lang.String str71 = weeks70.toString();
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.ONE;
        int int73 = weeks70.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks72);
        boolean boolean74 = weeks56.isGreaterThan(weeks72);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType76 = weeks75.getFieldType();
        int int77 = weeks72.get(durationFieldType76);
        boolean boolean78 = weeks50.equals((java.lang.Object) int77);
        boolean boolean79 = weeks1.equals((java.lang.Object) int77);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P100W" + "'", str23, "P100W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-3) + "'", int45 == (-3));
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "P-3W" + "'", str71, "P-3W");
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        java.lang.String str2 = weeks0.toString();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = weeks5.minus(weeks6);
        org.joda.time.Weeks weeks10 = weeks6.minus((int) 'a');
        org.joda.time.Weeks weeks11 = weeks0.minus(weeks6);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks13 = weeks11.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "P3W" + "'", str2, "P3W");
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeks((-1));
        int int22 = weeks21.size();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks27 = weeks25.dividedBy((int) '4');
        int int28 = weeks25.size();
        org.joda.time.Period period29 = weeks25.toPeriod();
        org.joda.time.DurationFieldType durationFieldType30 = weeks25.getFieldType();
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks25);
        int int32 = weeks31.size();
        org.joda.time.Weeks weeks33 = weeks0.minus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        org.joda.time.Weeks weeks42 = weeks34.plus(weeks40);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        java.lang.String str47 = weeks46.toString();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.ONE;
        int int49 = weeks46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks48);
        org.joda.time.Weeks weeks51 = weeks48.plus((int) (short) -1);
        int int52 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        int int53 = weeks51.getWeeks();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks55 = weeks54.negated();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks55);
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = weeks56.get(durationFieldType57);
        int int59 = weeks56.size();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.DurationFieldType durationFieldType63 = weeks62.getFieldType();
        boolean boolean64 = weeks56.isSupported(durationFieldType63);
        int int65 = weeks51.get(durationFieldType63);
        int int66 = weeks31.get(durationFieldType63);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P-3W" + "'", str47, "P-3W");
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Period period6 = weeks2.toPeriod();
        org.joda.time.Weeks weeks8 = weeks2.plus(9);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        int int11 = weeks10.size();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks16 = weeks14.dividedBy((int) '4');
        int int17 = weeks14.size();
        org.joda.time.Period period18 = weeks14.toPeriod();
        org.joda.time.DurationFieldType durationFieldType19 = weeks14.getFieldType();
        org.joda.time.Weeks weeks20 = weeks10.minus(weeks14);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.parseWeeks("P-3W");
        boolean boolean23 = weeks14.isLessThan(weeks22);
        org.joda.time.PeriodType periodType24 = weeks14.getPeriodType();
        boolean boolean25 = weeks8.equals((java.lang.Object) weeks14);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks19.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod21);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType23 = weeks20.getFieldType(0);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        int int30 = weeks27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks29.plus((int) (short) -1);
        boolean boolean33 = weeks20.equals((java.lang.Object) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.PeriodType periodType36 = weeks34.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType37 = null;
        boolean boolean38 = weeks34.isSupported(durationFieldType37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.DurationFieldType durationFieldType42 = weeks41.getFieldType();
        org.joda.time.DurationFieldType durationFieldType44 = weeks41.getFieldType(0);
        int int45 = weeks34.get(durationFieldType44);
        boolean boolean46 = weeks32.equals((java.lang.Object) weeks34);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.ONE;
        int int53 = weeks50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks52);
        java.lang.String str54 = weeks50.toString();
        org.joda.time.Weeks weeks56 = weeks50.dividedBy(1);
        int int58 = weeks50.getValue(0);
        boolean boolean59 = weeks34.equals((java.lang.Object) 0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3 + "'", int45 == 3);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "P-3W" + "'", str54, "P-3W");
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-3) + "'", int58 == (-3));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = weeks6.plus(weeks27);
        org.joda.time.Weeks weeks30 = weeks28.dividedBy((int) (short) 10);
        org.joda.time.Period period31 = weeks30.toPeriod();
        int int32 = weeks30.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 10);
        org.joda.time.Weeks weeks3 = weeks1.minus((int) '4');
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.plus((-13));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        java.lang.String str6 = weeks2.toString();
        org.joda.time.Period period7 = weeks2.toPeriod();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Duration duration9 = weeks8.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(duration9);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks12 = weeks0.dividedBy((int) (short) -1);
        int int13 = weeks12.getWeeks();
        org.joda.time.Weeks weeks15 = weeks12.minus(300);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(weeks15);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks10 = weeks0.dividedBy(100);
        org.joda.time.Duration duration11 = weeks10.toStandardDuration();
        int int12 = weeks10.getWeeks();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        boolean boolean15 = weeks13.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = weeks13.get(durationFieldType16);
        org.joda.time.Weeks weeks19 = weeks13.minus((int) ' ');
        boolean boolean20 = weeks10.isGreaterThan(weeks13);
        org.joda.time.Weeks weeks22 = weeks10.dividedBy(300);
        org.joda.time.Weeks weeks24 = weeks10.multipliedBy((-100));
        int int25 = weeks24.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        boolean boolean17 = weeks9.isLessThan(weeks15);
        org.joda.time.Weeks weeks18 = weeks8.plus(weeks9);
        int int19 = weeks9.size();
        org.joda.time.DurationFieldType durationFieldType20 = weeks9.getFieldType();
        org.joda.time.Weeks weeks21 = weeks1.plus(weeks9);
        java.lang.Class<?> wildcardClass22 = weeks9.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        boolean boolean17 = weeks9.isLessThan(weeks15);
        org.joda.time.Weeks weeks18 = weeks8.plus(weeks9);
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = weeks21.minus(weeks22);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.PeriodType periodType27 = weeks25.getPeriodType();
        boolean boolean28 = weeks21.isGreaterThan(weeks25);
        org.joda.time.Weeks weeks30 = weeks25.minus((int) (byte) 0);
        org.joda.time.Weeks weeks31 = weeks18.plus(weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType33 = weeks32.getPeriodType();
        org.joda.time.Weeks weeks35 = weeks32.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks37 = weeks32.dividedBy((int) 'a');
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        boolean boolean41 = weeks39.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        boolean boolean47 = weeks39.isLessThan(weeks45);
        org.joda.time.Weeks weeks48 = weeks38.plus(weeks39);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        int int55 = weeks52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks54);
        boolean boolean56 = weeks38.isGreaterThan(weeks54);
        int int57 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks38);
        org.joda.time.DurationFieldType durationFieldType58 = weeks37.getFieldType();
        org.joda.time.Weeks weeks59 = weeks18.plus(weeks37);
        boolean boolean60 = weeks0.isGreaterThan(weeks59);
        java.lang.Class<?> wildcardClass61 = weeks59.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.DurationFieldType durationFieldType15 = weeks14.getFieldType();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        boolean boolean18 = weeks16.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = weeks16.plus(weeks22);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        int int31 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks30.plus((int) (short) -1);
        int int34 = weeks16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        int int35 = weeks33.getWeeks();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = weeks38.get(durationFieldType39);
        int int41 = weeks38.size();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.DurationFieldType durationFieldType45 = weeks44.getFieldType();
        boolean boolean46 = weeks38.isSupported(durationFieldType45);
        int int47 = weeks33.get(durationFieldType45);
        int int48 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        org.joda.time.Weeks weeks50 = weeks14.dividedBy((-103));
        org.joda.time.PeriodType periodType51 = weeks14.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(periodType51);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType10 = weeks9.getPeriodType();
        org.joda.time.Weeks weeks12 = weeks9.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks14 = weeks9.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod15 = weeks9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks9.getFieldType();
        org.joda.time.PeriodType periodType17 = weeks9.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType18 = weeks9.getFieldType();
        boolean boolean19 = weeks8.isSupported(durationFieldType18);
        org.joda.time.Period period20 = weeks8.toPeriod();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType22 = weeks21.getFieldType();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        boolean boolean25 = weeks23.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        java.lang.String str30 = weeks29.toString();
        boolean boolean31 = weeks23.isLessThan(weeks29);
        org.joda.time.Weeks weeks32 = weeks29.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.MutablePeriod mutablePeriod35 = weeks34.toMutablePeriod();
        org.joda.time.Weeks weeks36 = weeks32.plus(weeks34);
        org.joda.time.Weeks weeks37 = weeks21.plus(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        org.joda.time.Weeks weeks47 = weeks39.plus(weeks43);
        org.joda.time.Weeks weeks48 = weeks8.minus(weeks43);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = weeks43.getValue(300);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 300");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "P-3W" + "'", str30, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks20 = weeks6.multipliedBy((-100));
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        int int25 = weeks24.size();
        java.lang.String str26 = weeks24.toString();
        java.lang.String str27 = weeks24.toString();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks29.minus((int) '4');
        org.joda.time.Weeks weeks33 = weeks24.minus(weeks29);
        org.joda.time.DurationFieldType durationFieldType34 = weeks24.getFieldType();
        boolean boolean35 = weeks20.isSupported(durationFieldType34);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks12 = weeks0.dividedBy((int) (short) -1);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Weeks weeks19 = weeks15.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks24 = weeks22.dividedBy((int) '4');
        int int25 = weeks22.size();
        org.joda.time.Weeks weeks26 = weeks22.negated();
        boolean boolean27 = weeks19.isGreaterThan(weeks22);
        org.joda.time.DurationFieldType durationFieldType29 = weeks22.getFieldType((int) (short) 0);
        org.joda.time.Weeks weeks30 = weeks12.plus(weeks22);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks32 = weeks12.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(weeks30);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.MutablePeriod mutablePeriod27 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.TWO;
        boolean boolean29 = weeks22.isGreaterThan(weeks28);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks36 = weeks33.multipliedBy(0);
        org.joda.time.Weeks weeks37 = weeks31.minus(weeks36);
        org.joda.time.Weeks weeks38 = weeks28.minus(weeks36);
        java.lang.Class<?> wildcardClass39 = weeks36.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks10 = weeks0.negated();
        org.joda.time.Weeks weeks12 = weeks0.multipliedBy(300);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = weeks14.minus(weeks15);
        boolean boolean18 = weeks12.isGreaterThan(weeks17);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks12 = weeks10.multipliedBy((int) (byte) 100);
        int int14 = weeks12.getValue(0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 400 + "'", int14 == 400);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks28);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy(0);
        org.joda.time.Weeks weeks39 = weeks33.minus(weeks38);
        int int40 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks41 = weeks39.negated();
        org.joda.time.MutablePeriod mutablePeriod42 = weeks41.toMutablePeriod();
        org.joda.time.Weeks weeks43 = weeks0.plus(weeks41);
        int int44 = weeks43.size();
        org.joda.time.Weeks weeks46 = weeks43.multipliedBy((-3));
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.weeks((int) (short) 1);
        org.joda.time.Weeks weeks49 = weeks43.plus(weeks48);
        org.joda.time.Period period50 = weeks43.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod51 = weeks43.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks13.negated();
        org.joda.time.Weeks weeks17 = weeks6.plus(weeks16);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeksIn(readableInterval18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        int int26 = weeks23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks25.plus((int) (short) -1);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType30 = weeks29.getPeriodType();
        org.joda.time.Weeks weeks32 = weeks29.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks34 = weeks29.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod35 = weeks29.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType36 = weeks29.getFieldType();
        org.joda.time.PeriodType periodType37 = weeks29.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType38 = weeks29.getFieldType();
        boolean boolean39 = weeks28.isSupported(durationFieldType38);
        org.joda.time.Period period40 = weeks28.toPeriod();
        boolean boolean41 = weeks19.isGreaterThan(weeks28);
        org.joda.time.Weeks weeks42 = weeks16.plus(weeks19);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType24 = weeks23.getPeriodType();
        java.lang.String str25 = weeks23.toString();
        org.joda.time.DurationFieldType durationFieldType26 = weeks23.getFieldType();
        boolean boolean27 = weeks19.isLessThan(weeks23);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType30 = weeks28.getFieldType(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P3W" + "'", str25, "P3W");
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks43 = weeks5.plus((int) '#');
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        boolean boolean46 = weeks44.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        org.joda.time.Weeks weeks52 = weeks44.plus(weeks50);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        org.joda.time.DurationFieldType durationFieldType56 = weeks55.getFieldType();
        int int57 = weeks52.get(durationFieldType56);
        boolean boolean58 = weeks43.isSupported(durationFieldType56);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        java.lang.String str3 = weeks0.toString();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "P3W" + "'", str3, "P3W");
        org.junit.Assert.assertNotNull(weeks4);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((-1));
        int int20 = weeks19.size();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        int int26 = weeks23.size();
        org.joda.time.Period period27 = weeks23.toPeriod();
        org.joda.time.DurationFieldType durationFieldType28 = weeks23.getFieldType();
        org.joda.time.Weeks weeks29 = weeks19.minus(weeks23);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.negated();
        org.joda.time.Weeks weeks40 = weeks19.plus(weeks39);
        org.joda.time.Weeks weeks41 = weeks17.plus(weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.TWO;
        int int43 = weeks42.size();
        org.joda.time.Weeks weeks45 = weeks42.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks46 = weeks40.plus(weeks42);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        boolean boolean50 = weeks48.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        boolean boolean56 = weeks48.isLessThan(weeks54);
        org.joda.time.Weeks weeks57 = weeks47.plus(weeks48);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.ONE;
        int int64 = weeks61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks63);
        boolean boolean65 = weeks47.isGreaterThan(weeks63);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        boolean boolean67 = weeks63.isGreaterThan(weeks66);
        org.joda.time.Weeks weeks69 = weeks66.plus((int) (byte) 100);
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = weeks42.plus(weeks69);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Duration duration11 = weeks0.toStandardDuration();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks16 = weeks14.plus(9);
        boolean boolean17 = weeks0.equals((java.lang.Object) weeks14);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.PeriodType periodType10 = weeks9.getPeriodType();
        org.joda.time.Duration duration11 = weeks9.toStandardDuration();
        org.joda.time.Duration duration12 = weeks9.toStandardDuration();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(weeks13);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType24 = weeks2.getFieldType();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = weeks25.plus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        int int40 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks39.plus((int) (short) -1);
        int int43 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks25.plus((int) (short) 100);
        org.joda.time.Weeks weeks47 = weeks45.multipliedBy((int) (short) 10);
        boolean boolean48 = weeks2.isGreaterThan(weeks45);
        org.joda.time.Weeks weeks50 = weeks45.minus((int) ' ');
        org.joda.time.Weeks weeks52 = weeks50.plus((int) (byte) 100);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks5 = weeks0.multipliedBy((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType6 = weeks5.getFieldType();
        java.lang.String str7 = weeks5.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P300W" + "'", str7, "P300W");
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks17.plus(weeks18);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        boolean boolean30 = weeks27.isSupported(durationFieldType29);
        int int31 = weeks15.get(durationFieldType29);
        org.joda.time.Weeks weeks33 = weeks15.minus((int) ' ');
        org.joda.time.Weeks weeks35 = weeks15.minus((int) (short) 10);
        int int37 = weeks15.getValue((int) (short) 0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        int int12 = weeks11.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Period period19 = weeks15.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = weeks15.getFieldType();
        org.joda.time.Weeks weeks21 = weeks11.minus(weeks15);
        org.joda.time.DurationFieldType durationFieldType23 = weeks15.getFieldType(0);
        boolean boolean24 = weeks9.isSupported(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        java.lang.String str6 = weeks2.toString();
        java.lang.String str7 = weeks2.toString();
        org.joda.time.Period period8 = weeks2.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.Weeks weeks10 = weeks8.dividedBy((int) '4');
        int int11 = weeks8.size();
        org.joda.time.Period period12 = weeks8.toPeriod();
        org.joda.time.DurationFieldType durationFieldType13 = weeks8.getFieldType();
        org.joda.time.PeriodType periodType14 = weeks8.getPeriodType();
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeksIn(readableInterval15);
        org.joda.time.MutablePeriod mutablePeriod17 = weeks16.toMutablePeriod();
        boolean boolean18 = weeks8.isGreaterThan(weeks16);
        boolean boolean19 = weeks5.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks20 = weeks5.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int22 = weeks5.getValue((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks4.getWeeks();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((-1));
        int int8 = weeks7.size();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Period period15 = weeks11.toPeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks11.getFieldType();
        org.joda.time.Weeks weeks17 = weeks7.minus(weeks11);
        org.joda.time.Weeks weeks19 = weeks17.minus((-3));
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = weeks30.toMutablePeriod();
        org.joda.time.Weeks weeks32 = weeks26.plus(weeks30);
        org.joda.time.Weeks weeks33 = weeks19.plus(weeks26);
        org.joda.time.Weeks weeks34 = weeks4.minus(weeks33);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks37 = weeks4.minus(weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Period period39 = weeks38.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(period39);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks10 = weeks0.dividedBy(100);
        org.joda.time.Weeks weeks12 = weeks10.plus(1);
        org.joda.time.Weeks weeks14 = weeks12.dividedBy((-1033));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        java.lang.String str6 = weeks5.toString();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.ONE;
        int int8 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks7);
        org.joda.time.Weeks weeks10 = weeks7.plus((int) (short) -1);
        int int11 = weeks7.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = weeks13.minus(weeks14);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        int int26 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        org.joda.time.Duration duration27 = weeks23.toStandardDuration();
        boolean boolean28 = weeks7.equals((java.lang.Object) duration27);
        int int29 = weeks1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks7);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType4 = weeks3.getFieldType();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks11.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.MutablePeriod mutablePeriod17 = weeks16.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks14.plus(weeks16);
        org.joda.time.Weeks weeks19 = weeks3.plus(weeks18);
        org.joda.time.Weeks weeks21 = weeks18.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.ONE;
        int int28 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks27);
        org.joda.time.Weeks weeks29 = weeks21.plus(weeks25);
        org.joda.time.MutablePeriod mutablePeriod30 = weeks25.toMutablePeriod();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        org.joda.time.Weeks weeks40 = weeks32.plus(weeks38);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        java.lang.String str45 = weeks44.toString();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.ONE;
        int int47 = weeks44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks46);
        org.joda.time.Weeks weeks49 = weeks46.plus((int) (short) -1);
        int int50 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks49);
        org.joda.time.Weeks weeks52 = weeks32.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod53 = weeks52.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType55 = weeks52.getFieldType(0);
        int int56 = weeks31.get(durationFieldType55);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period58 = weeks57.toPeriod();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks60);
        org.joda.time.Weeks weeks63 = weeks61.dividedBy((int) '4');
        org.joda.time.Weeks weeks65 = weeks61.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks66 = weeks57.minus(weeks65);
        org.joda.time.Weeks weeks67 = weeks31.plus(weeks57);
        boolean boolean68 = weeks1.isGreaterThan(weeks67);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-3W" + "'", str45, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-3) + "'", int56 == (-3));
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType12 = weeks11.getPeriodType();
        java.lang.String str13 = weeks11.toString();
        org.joda.time.DurationFieldType durationFieldType14 = weeks11.getFieldType();
        int int15 = weeks1.get(durationFieldType14);
        int int16 = weeks1.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P3W" + "'", str13, "P3W");
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        boolean boolean17 = weeks9.isLessThan(weeks15);
        org.joda.time.Weeks weeks18 = weeks8.plus(weeks9);
        int int19 = weeks9.size();
        org.joda.time.DurationFieldType durationFieldType20 = weeks9.getFieldType();
        org.joda.time.Weeks weeks21 = weeks1.plus(weeks9);
        int int22 = weeks9.size();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType24 = weeks23.getPeriodType();
        org.joda.time.Weeks weeks26 = weeks23.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks28 = weeks23.dividedBy((int) 'a');
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks29.plus(weeks30);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        boolean boolean47 = weeks29.isGreaterThan(weeks45);
        int int48 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        boolean boolean51 = weeks49.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        java.lang.String str56 = weeks55.toString();
        boolean boolean57 = weeks49.isLessThan(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.MutablePeriod mutablePeriod61 = weeks60.toMutablePeriod();
        org.joda.time.Weeks weeks62 = weeks58.plus(weeks60);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks64 = weeks28.minus(weeks58);
        int int65 = weeks9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks64);
        org.joda.time.Duration duration66 = weeks9.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            int int68 = weeks9.getValue((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(duration66);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        int int14 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeksIn(readableInterval16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks17.minus(weeks24);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.MutablePeriod mutablePeriod32 = weeks31.toMutablePeriod();
        org.joda.time.Weeks weeks34 = weeks31.multipliedBy(0);
        org.joda.time.Weeks weeks35 = weeks29.minus(weeks34);
        int int36 = weeks27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.Weeks weeks37 = weeks27.negated();
        org.joda.time.Weeks weeks38 = weeks27.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks40 = weeks15.plus(weeks27);
        org.joda.time.PeriodType periodType41 = weeks40.getPeriodType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(periodType41);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks18.negated();
        org.joda.time.Weeks weeks22 = weeks1.plus(weeks21);
        org.joda.time.Weeks weeks24 = weeks22.dividedBy((-3));
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType26 = weeks25.getPeriodType();
        org.joda.time.Weeks weeks28 = weeks25.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks30 = weeks25.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod31 = weeks25.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType32 = weeks25.getFieldType();
        org.joda.time.PeriodType periodType33 = weeks25.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType34 = weeks25.getFieldType();
        org.joda.time.Weeks weeks35 = weeks25.negated();
        boolean boolean36 = weeks22.isLessThan(weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType38 = weeks37.getFieldType();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        boolean boolean41 = weeks39.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        boolean boolean47 = weeks39.isLessThan(weeks45);
        org.joda.time.Weeks weeks48 = weeks45.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.MutablePeriod mutablePeriod51 = weeks50.toMutablePeriod();
        org.joda.time.Weeks weeks52 = weeks48.plus(weeks50);
        org.joda.time.Weeks weeks53 = weeks37.plus(weeks52);
        org.joda.time.Weeks weeks55 = weeks52.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        java.lang.String str60 = weeks59.toString();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.ONE;
        int int62 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks61);
        org.joda.time.Weeks weeks63 = weeks55.plus(weeks59);
        org.joda.time.MutablePeriod mutablePeriod64 = weeks59.toMutablePeriod();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.TWO;
        boolean boolean66 = weeks59.isGreaterThan(weeks65);
        org.joda.time.Weeks weeks67 = weeks65.negated();
        boolean boolean68 = weeks35.equals((java.lang.Object) weeks65);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType70 = weeks69.getPeriodType();
        org.joda.time.Weeks weeks72 = weeks69.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        boolean boolean76 = weeks74.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks78 = weeks77.negated();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks78);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks78);
        java.lang.String str81 = weeks80.toString();
        boolean boolean82 = weeks74.isLessThan(weeks80);
        org.joda.time.Weeks weeks83 = weeks73.plus(weeks74);
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks85 = weeks84.negated();
        org.joda.time.Weeks weeks86 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks85);
        org.joda.time.Weeks weeks87 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks85);
        java.lang.String str88 = weeks87.toString();
        org.joda.time.Weeks weeks89 = org.joda.time.Weeks.ONE;
        int int90 = weeks87.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks89);
        boolean boolean91 = weeks73.isGreaterThan(weeks89);
        org.joda.time.Weeks weeks92 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType93 = weeks92.getFieldType();
        int int94 = weeks89.get(durationFieldType93);
        boolean boolean95 = weeks69.isSupported(durationFieldType93);
        org.joda.time.Weeks weeks97 = weeks69.dividedBy((-1));
        boolean boolean98 = weeks35.isGreaterThan(weeks97);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "P-3W" + "'", str60, "P-3W");
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "P-3W" + "'", str81, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "P-3W" + "'", str88, "P-3W");
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertNotNull(durationFieldType93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(weeks97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Period period6 = weeks2.toPeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks2.getFieldType();
        org.joda.time.Weeks weeks8 = weeks2.negated();
        org.joda.time.Period period9 = weeks2.toPeriod();
        java.lang.Class<?> wildcardClass10 = weeks2.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P-1W");
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        java.lang.String str6 = weeks5.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((-1));
        int int9 = weeks8.size();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks14 = weeks12.dividedBy((int) '4');
        int int15 = weeks12.size();
        org.joda.time.Period period16 = weeks12.toPeriod();
        org.joda.time.DurationFieldType durationFieldType17 = weeks12.getFieldType();
        org.joda.time.Weeks weeks18 = weeks8.minus(weeks12);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        boolean boolean27 = weeks19.isLessThan(weeks25);
        org.joda.time.Weeks weeks28 = weeks25.negated();
        org.joda.time.Weeks weeks29 = weeks8.plus(weeks28);
        boolean boolean30 = weeks5.isLessThan(weeks29);
        boolean boolean31 = weeks1.equals((java.lang.Object) boolean30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        org.joda.time.Weeks weeks42 = weeks32.dividedBy(100);
        org.joda.time.Duration duration43 = weeks42.toStandardDuration();
        boolean boolean44 = weeks1.isLessThan(weeks42);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = weeks42.getValue((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (byte) 100);
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks25 = weeks23.multipliedBy((int) (byte) 10);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks10 = weeks6.dividedBy(3);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.weeks((int) (short) -1);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = weeks13.getFieldType();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        boolean boolean17 = weeks15.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        boolean boolean23 = weeks15.isLessThan(weeks21);
        org.joda.time.Weeks weeks24 = weeks21.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks26.toMutablePeriod();
        org.joda.time.Weeks weeks28 = weeks24.plus(weeks26);
        org.joda.time.Weeks weeks29 = weeks13.plus(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks32 = weeks31.negated();
        int int33 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.MutablePeriod mutablePeriod34 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks6.plus(weeks32);
        org.joda.time.DurationFieldType durationFieldType36 = weeks35.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod37 = weeks35.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        int int19 = weeks17.getWeeks();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks31.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks20.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.dividedBy((int) (short) 100);
        boolean boolean39 = weeks17.isGreaterThan(weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        boolean boolean43 = weeks41.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        java.lang.String str48 = weeks47.toString();
        boolean boolean49 = weeks41.isLessThan(weeks47);
        org.joda.time.Weeks weeks50 = weeks40.plus(weeks41);
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.weeks((-1));
        int int54 = weeks53.size();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks59 = weeks57.dividedBy((int) '4');
        int int60 = weeks57.size();
        org.joda.time.Period period61 = weeks57.toPeriod();
        org.joda.time.DurationFieldType durationFieldType62 = weeks57.getFieldType();
        org.joda.time.Weeks weeks63 = weeks53.minus(weeks57);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        boolean boolean66 = weeks64.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        java.lang.String str71 = weeks70.toString();
        boolean boolean72 = weeks64.isLessThan(weeks70);
        org.joda.time.Weeks weeks73 = weeks70.negated();
        org.joda.time.Weeks weeks74 = weeks53.plus(weeks73);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks74);
        org.joda.time.Weeks weeks76 = weeks50.plus(weeks75);
        org.joda.time.Weeks weeks77 = weeks17.minus(weeks76);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "P-3W" + "'", str48, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "P-3W" + "'", str71, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks10.plus(weeks11);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType22 = weeks21.getFieldType();
        boolean boolean23 = weeks20.isSupported(durationFieldType22);
        int int24 = weeks20.getWeeks();
        org.joda.time.Weeks weeks26 = weeks20.dividedBy((int) '4');
        org.joda.time.Weeks weeks27 = weeks0.minus(weeks20);
        org.joda.time.Weeks weeks29 = weeks27.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.MutablePeriod mutablePeriod42 = weeks41.toMutablePeriod();
        org.joda.time.Weeks weeks43 = weeks39.plus(weeks41);
        org.joda.time.Duration duration44 = weeks41.toStandardDuration();
        boolean boolean45 = weeks27.isLessThan(weeks41);
        org.joda.time.Duration duration46 = weeks41.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType48 = weeks41.getFieldType((-1033));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1033");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration46);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType21 = weeks20.getPeriodType();
        org.joda.time.Weeks weeks23 = weeks20.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        boolean boolean33 = weeks25.isLessThan(weeks31);
        org.joda.time.Weeks weeks34 = weeks24.plus(weeks25);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        int int41 = weeks38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks40);
        boolean boolean42 = weeks24.isGreaterThan(weeks40);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType44 = weeks43.getFieldType();
        int int45 = weeks40.get(durationFieldType44);
        boolean boolean46 = weeks20.isSupported(durationFieldType44);
        boolean boolean47 = weeks0.isSupported(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType48 = weeks0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType49 = weeks0.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(durationFieldType49);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1027));
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType(0);
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = weeks10.minus(weeks11);
        org.joda.time.DurationFieldType durationFieldType14 = weeks11.getFieldType();
        boolean boolean15 = weeks1.isLessThan(weeks11);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((-1));
        int int18 = weeks17.size();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Period period25 = weeks21.toPeriod();
        org.joda.time.DurationFieldType durationFieldType26 = weeks21.getFieldType();
        org.joda.time.Weeks weeks27 = weeks17.minus(weeks21);
        org.joda.time.Weeks weeks29 = weeks17.minus((int) (byte) 100);
        org.joda.time.Duration duration30 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks31 = weeks1.minus(weeks17);
        org.joda.time.Weeks weeks33 = weeks31.multipliedBy((-3));
        org.joda.time.Duration duration34 = weeks33.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(duration34);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks15 = weeks5.minus(weeks12);
        org.joda.time.Weeks weeks17 = weeks5.dividedBy((int) (short) 1);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType19 = weeks18.getFieldType();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = weeks26.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.MutablePeriod mutablePeriod32 = weeks31.toMutablePeriod();
        org.joda.time.Weeks weeks33 = weeks29.plus(weeks31);
        org.joda.time.Weeks weeks34 = weeks18.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks33.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        int int43 = weeks40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks44 = weeks36.plus(weeks40);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType46 = weeks45.getPeriodType();
        org.joda.time.Weeks weeks48 = weeks45.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks50 = weeks45.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod51 = weeks45.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType52 = weeks45.getFieldType();
        org.joda.time.PeriodType periodType53 = weeks45.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType54 = weeks45.getFieldType();
        org.joda.time.Weeks weeks55 = weeks44.minus(weeks45);
        boolean boolean56 = weeks17.isLessThan(weeks44);
        org.joda.time.ReadableInterval readableInterval57 = null;
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.weeksIn(readableInterval57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        boolean boolean61 = weeks59.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        java.lang.String str66 = weeks65.toString();
        boolean boolean67 = weeks59.isLessThan(weeks65);
        org.joda.time.Weeks weeks68 = weeks58.minus(weeks65);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.MutablePeriod mutablePeriod73 = weeks72.toMutablePeriod();
        org.joda.time.Weeks weeks75 = weeks72.multipliedBy(0);
        org.joda.time.Weeks weeks76 = weeks70.minus(weeks75);
        int int77 = weeks68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks76);
        boolean boolean78 = weeks17.isGreaterThan(weeks76);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Period period81 = weeks80.toPeriod();
        org.joda.time.Weeks weeks82 = weeks76.plus(weeks80);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P-3W" + "'", str66, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(mutablePeriod73);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(weeks82);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks4.plus(weeks5);
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = weeks17.minus(weeks18);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.PeriodType periodType23 = weeks21.getPeriodType();
        boolean boolean24 = weeks17.isGreaterThan(weeks21);
        org.joda.time.Weeks weeks26 = weeks21.minus((int) (byte) 0);
        org.joda.time.Weeks weeks27 = weeks14.plus(weeks26);
        boolean boolean28 = weeks0.isLessThan(weeks26);
        org.joda.time.Period period29 = weeks0.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(period29);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks4.getWeeks();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((-1));
        int int8 = weeks7.size();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Period period15 = weeks11.toPeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks11.getFieldType();
        org.joda.time.Weeks weeks17 = weeks7.minus(weeks11);
        org.joda.time.Weeks weeks19 = weeks17.minus((-3));
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = weeks30.toMutablePeriod();
        org.joda.time.Weeks weeks32 = weeks26.plus(weeks30);
        org.joda.time.Weeks weeks33 = weeks19.plus(weeks26);
        org.joda.time.Weeks weeks34 = weeks4.minus(weeks33);
        org.joda.time.Weeks weeks35 = null;
        org.joda.time.Weeks weeks36 = weeks33.plus(weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        int int43 = weeks40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        java.lang.String str44 = weeks40.toString();
        org.joda.time.Weeks weeks46 = weeks40.dividedBy(1);
        org.joda.time.Weeks weeks48 = weeks40.minus((int) 'a');
        org.joda.time.Weeks weeks50 = weeks48.minus((int) (short) 1);
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = weeks36.minus(weeks50);
        int int53 = weeks36.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.MutablePeriod mutablePeriod33 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks34 = weeks28.plus(weeks32);
        boolean boolean35 = weeks20.isLessThan(weeks32);
        int int36 = weeks20.size();
        org.joda.time.Weeks weeks38 = weeks20.dividedBy((-33));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(weeks38);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeks((-1));
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.Weeks weeks10 = weeks8.dividedBy((int) '4');
        int int11 = weeks8.size();
        org.joda.time.Period period12 = weeks8.toPeriod();
        org.joda.time.DurationFieldType durationFieldType13 = weeks8.getFieldType();
        org.joda.time.Weeks weeks14 = weeks4.minus(weeks8);
        org.joda.time.Weeks weeks16 = weeks14.minus((-3));
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.MutablePeriod mutablePeriod28 = weeks27.toMutablePeriod();
        org.joda.time.Weeks weeks29 = weeks23.plus(weeks27);
        org.joda.time.Weeks weeks30 = weeks16.plus(weeks23);
        org.joda.time.Weeks weeks31 = weeks1.plus(weeks16);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        org.joda.time.Weeks weeks40 = weeks32.plus(weeks38);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.DurationFieldType durationFieldType44 = weeks43.getFieldType();
        int int45 = weeks40.get(durationFieldType44);
        org.joda.time.Weeks weeks47 = weeks40.multipliedBy((int) '4');
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.TWO;
        int int49 = weeks48.size();
        org.joda.time.Weeks weeks51 = weeks48.multipliedBy((int) (short) 1);
        boolean boolean52 = weeks40.equals((java.lang.Object) weeks48);
        boolean boolean53 = weeks1.isLessThan(weeks40);
        org.joda.time.Weeks weeks54 = weeks1.negated();
        org.joda.time.Weeks weeks56 = weeks54.dividedBy((-103));
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType60 = weeks59.getPeriodType();
        org.joda.time.Weeks weeks62 = weeks59.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks64 = weeks59.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod65 = weeks59.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType66 = weeks59.getFieldType();
        int int67 = weeks58.get(durationFieldType66);
        int int68 = weeks54.get(durationFieldType66);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 3 + "'", int68 == 3);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks18 = weeks16.dividedBy((int) '4');
        int int19 = weeks16.size();
        org.joda.time.Weeks weeks20 = weeks16.negated();
        boolean boolean21 = weeks13.isGreaterThan(weeks16);
        org.joda.time.DurationFieldType durationFieldType22 = weeks13.getFieldType();
        int int23 = weeks6.get(durationFieldType22);
        org.joda.time.Weeks weeks25 = weeks6.plus((int) (byte) 100);
        boolean boolean26 = weeks4.isGreaterThan(weeks25);
        org.joda.time.Weeks weeks27 = weeks25.negated();
        org.joda.time.Weeks weeks29 = weeks27.multipliedBy((int) ' ');
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks30.plus(weeks31);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        java.lang.String str45 = weeks44.toString();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.ONE;
        int int47 = weeks44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks46);
        boolean boolean48 = weeks30.isGreaterThan(weeks46);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = weeks49.getFieldType();
        int int51 = weeks46.get(durationFieldType50);
        org.joda.time.Weeks weeks53 = weeks46.minus((int) (byte) -1);
        org.joda.time.Weeks weeks55 = weeks53.minus((int) '#');
        java.lang.String str56 = weeks53.toString();
        boolean boolean57 = weeks27.equals((java.lang.Object) weeks53);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-3W" + "'", str45, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P2W" + "'", str56, "P2W");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) -1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.parseWeeks("P3W");
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        boolean boolean6 = weeks4.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        java.lang.String str11 = weeks10.toString();
        org.joda.time.Weeks weeks12 = weeks4.plus(weeks10);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        java.lang.String str17 = weeks16.toString();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.ONE;
        int int19 = weeks16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks18.plus((int) (short) -1);
        int int22 = weeks4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks21);
        org.joda.time.Weeks weeks24 = weeks4.plus((int) (short) 100);
        org.joda.time.Weeks weeks26 = weeks24.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType28 = weeks27.getFieldType();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        boolean boolean31 = weeks29.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        java.lang.String str36 = weeks35.toString();
        boolean boolean37 = weeks29.isLessThan(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.MutablePeriod mutablePeriod41 = weeks40.toMutablePeriod();
        org.joda.time.Weeks weeks42 = weeks38.plus(weeks40);
        org.joda.time.Weeks weeks43 = weeks27.plus(weeks42);
        org.joda.time.Weeks weeks45 = weeks42.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks46 = weeks45.negated();
        boolean boolean47 = weeks26.isGreaterThan(weeks45);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = weeks48.getFieldType();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        boolean boolean52 = weeks50.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        java.lang.String str57 = weeks56.toString();
        boolean boolean58 = weeks50.isLessThan(weeks56);
        org.joda.time.Weeks weeks59 = weeks56.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.MutablePeriod mutablePeriod62 = weeks61.toMutablePeriod();
        org.joda.time.Weeks weeks63 = weeks59.plus(weeks61);
        org.joda.time.Weeks weeks64 = weeks48.plus(weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        boolean boolean68 = weeks66.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        java.lang.String str73 = weeks72.toString();
        boolean boolean74 = weeks66.isLessThan(weeks72);
        org.joda.time.Weeks weeks75 = weeks65.plus(weeks66);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType77 = weeks76.getFieldType();
        boolean boolean78 = weeks75.isSupported(durationFieldType77);
        int int79 = weeks63.get(durationFieldType77);
        boolean boolean80 = weeks26.isSupported(durationFieldType77);
        int int81 = weeks3.get(durationFieldType77);
        int int82 = weeks1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks3);
        int int83 = weeks3.getWeeks();
        org.joda.time.DurationFieldType durationFieldType84 = weeks3.getFieldType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P-3W" + "'", str11, "P-3W");
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P-3W" + "'", str17, "P-3W");
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "P-3W" + "'", str36, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "P-3W" + "'", str57, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "P-3W" + "'", str73, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 3 + "'", int81 == 3);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 3 + "'", int83 == 3);
        org.junit.Assert.assertNotNull(durationFieldType84);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        java.lang.String str6 = weeks5.toString();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.ONE;
        int int8 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks7);
        org.joda.time.Weeks weeks10 = weeks7.plus((int) (short) -1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType12 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks14 = weeks11.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks16 = weeks11.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod17 = weeks11.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType18 = weeks11.getFieldType();
        org.joda.time.PeriodType periodType19 = weeks11.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType20 = weeks11.getFieldType();
        boolean boolean21 = weeks10.isSupported(durationFieldType20);
        org.joda.time.Period period22 = weeks10.toPeriod();
        boolean boolean23 = weeks1.isGreaterThan(weeks10);
        int int24 = weeks10.size();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType26 = weeks25.getPeriodType();
        org.joda.time.Weeks weeks28 = weeks25.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks30 = weeks25.dividedBy((int) 'a');
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        org.joda.time.Weeks weeks41 = weeks31.plus(weeks32);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        int int48 = weeks45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        boolean boolean49 = weeks31.isGreaterThan(weeks47);
        int int50 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks31);
        org.joda.time.DurationFieldType durationFieldType51 = weeks30.getFieldType();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks53 = weeks30.plus(weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        boolean boolean57 = weeks55.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        boolean boolean63 = weeks55.isLessThan(weeks61);
        org.joda.time.Weeks weeks64 = weeks54.plus(weeks55);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks66 = weeks65.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        java.lang.String str69 = weeks68.toString();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.ONE;
        int int71 = weeks68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks70);
        boolean boolean72 = weeks54.isGreaterThan(weeks70);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType74 = weeks73.getFieldType();
        int int75 = weeks70.get(durationFieldType74);
        org.joda.time.Weeks weeks77 = weeks70.minus((int) (byte) -1);
        org.joda.time.Weeks weeks79 = weeks77.minus((int) '#');
        org.joda.time.Weeks weeks80 = weeks30.minus(weeks77);
        org.joda.time.Weeks weeks81 = weeks10.minus(weeks30);
        org.joda.time.Weeks weeks83 = weeks30.minus(0);
        org.joda.time.PeriodType periodType84 = weeks30.getPeriodType();
        org.joda.time.Weeks weeks85 = weeks30.negated();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "P-3W" + "'", str69, "P-3W");
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(weeks85);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.MutablePeriod mutablePeriod33 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks34 = weeks28.plus(weeks32);
        boolean boolean35 = weeks20.isLessThan(weeks32);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks40 = weeks37.multipliedBy((int) ' ');
        boolean boolean41 = weeks20.isLessThan(weeks37);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        int int47 = weeks42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks44);
        org.joda.time.Weeks weeks49 = weeks44.minus((-55));
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType51 = weeks50.getFieldType();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        boolean boolean54 = weeks52.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        boolean boolean60 = weeks52.isLessThan(weeks58);
        org.joda.time.Weeks weeks61 = weeks58.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.MutablePeriod mutablePeriod64 = weeks63.toMutablePeriod();
        org.joda.time.Weeks weeks65 = weeks61.plus(weeks63);
        org.joda.time.Weeks weeks66 = weeks50.plus(weeks65);
        org.joda.time.Weeks weeks68 = weeks65.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        java.lang.String str73 = weeks72.toString();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.ONE;
        int int75 = weeks72.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks74);
        org.joda.time.Weeks weeks76 = weeks68.plus(weeks72);
        org.joda.time.MutablePeriod mutablePeriod77 = weeks72.toMutablePeriod();
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        org.joda.time.Weeks weeks79 = weeks49.minus(weeks78);
        int int80 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks78);
        java.lang.String str81 = weeks78.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "P-3W" + "'", str73, "P-3W");
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(mutablePeriod77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "P-3W" + "'", str81, "P-3W");
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType();
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.PeriodType periodType9 = weeks1.getPeriodType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(periodType9);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        int int19 = weeks17.getWeeks();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks31.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks20.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.dividedBy((int) (short) 100);
        boolean boolean39 = weeks17.isGreaterThan(weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = weeks40.getFieldType();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = weeks48.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.MutablePeriod mutablePeriod54 = weeks53.toMutablePeriod();
        org.joda.time.Weeks weeks55 = weeks51.plus(weeks53);
        org.joda.time.Weeks weeks56 = weeks40.plus(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        boolean boolean61 = weeks59.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        java.lang.String str66 = weeks65.toString();
        org.joda.time.Weeks weeks67 = weeks59.plus(weeks65);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        int int74 = weeks71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks73);
        org.joda.time.Weeks weeks76 = weeks73.plus((int) (short) -1);
        int int77 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks76);
        org.joda.time.Weeks weeks79 = weeks59.plus((int) (short) 100);
        org.joda.time.Weeks weeks81 = weeks59.multipliedBy(3);
        org.joda.time.Weeks weeks82 = weeks58.minus(weeks59);
        boolean boolean83 = weeks38.isGreaterThan(weeks59);
        org.joda.time.MutablePeriod mutablePeriod84 = weeks38.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P-3W" + "'", str66, "P-3W");
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(mutablePeriod84);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        int int19 = weeks17.getWeeks();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks31.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks20.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.dividedBy((int) (short) 100);
        boolean boolean39 = weeks17.isGreaterThan(weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = weeks40.getFieldType();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = weeks48.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.MutablePeriod mutablePeriod54 = weeks53.toMutablePeriod();
        org.joda.time.Weeks weeks55 = weeks51.plus(weeks53);
        org.joda.time.Weeks weeks56 = weeks40.plus(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        boolean boolean61 = weeks59.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        java.lang.String str66 = weeks65.toString();
        org.joda.time.Weeks weeks67 = weeks59.plus(weeks65);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        int int74 = weeks71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks73);
        org.joda.time.Weeks weeks76 = weeks73.plus((int) (short) -1);
        int int77 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks76);
        org.joda.time.Weeks weeks79 = weeks59.plus((int) (short) 100);
        org.joda.time.Weeks weeks81 = weeks59.multipliedBy(3);
        org.joda.time.Weeks weeks82 = weeks58.minus(weeks59);
        boolean boolean83 = weeks38.isGreaterThan(weeks59);
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        int int85 = weeks59.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P-3W" + "'", str66, "P-3W");
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 3 + "'", int85 == 3);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType26 = weeks5.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks28 = weeks5.plus(weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks29.plus(weeks30);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        boolean boolean47 = weeks29.isGreaterThan(weeks45);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = weeks48.getFieldType();
        int int50 = weeks45.get(durationFieldType49);
        org.joda.time.Weeks weeks52 = weeks45.minus((int) (byte) -1);
        org.joda.time.Weeks weeks54 = weeks52.minus((int) '#');
        org.joda.time.Weeks weeks55 = weeks5.minus(weeks52);
        int int56 = weeks5.getWeeks();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks59 = weeks5.plus(weeks57);
        java.lang.Object obj60 = null;
        boolean boolean61 = weeks59.equals(obj60);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = weeks19.getFieldType();
        int int21 = weeks16.get(durationFieldType20);
        org.joda.time.Weeks weeks23 = weeks16.minus((int) (byte) -1);
        org.joda.time.Weeks weeks25 = weeks23.minus((int) '#');
        org.joda.time.Duration duration26 = weeks23.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(duration26);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = weeks11.isSupported(durationFieldType15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        boolean boolean20 = weeks11.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.PeriodType periodType10 = weeks9.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType12 = weeks9.getFieldType(0);
        int int14 = weeks9.getValue(0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.PeriodType periodType7 = weeks5.getPeriodType();
        boolean boolean8 = weeks1.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks10 = weeks5.minus((int) (byte) 0);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks17.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = weeks21.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = weeks21.isSupported(durationFieldType26);
        org.joda.time.Weeks weeks28 = weeks20.minus(weeks21);
        boolean boolean29 = weeks10.isLessThan(weeks28);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = weeks10.getValue(900);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 900");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeks((-1));
        int int21 = weeks20.size();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks24.dividedBy((int) '4');
        int int27 = weeks24.size();
        org.joda.time.Period period28 = weeks24.toPeriod();
        org.joda.time.DurationFieldType durationFieldType29 = weeks24.getFieldType();
        org.joda.time.Weeks weeks30 = weeks20.minus(weeks24);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks37.negated();
        org.joda.time.Weeks weeks41 = weeks20.plus(weeks40);
        boolean boolean42 = weeks17.isLessThan(weeks41);
        org.joda.time.MutablePeriod mutablePeriod43 = weeks17.toMutablePeriod();
        int int44 = weeks17.getWeeks();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType46 = weeks45.getPeriodType();
        org.joda.time.Weeks weeks48 = weeks45.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks50 = weeks45.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod51 = weeks45.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType52 = weeks45.getFieldType();
        org.joda.time.PeriodType periodType53 = weeks45.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType54 = weeks45.getFieldType();
        int int55 = weeks17.get(durationFieldType54);
        boolean boolean56 = weeks11.equals((java.lang.Object) weeks17);
        int int57 = weeks11.size();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks60);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks60);
        int int63 = weeks58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks60);
        org.joda.time.Weeks weeks65 = weeks58.minus((int) ' ');
        org.joda.time.Weeks weeks66 = weeks11.plus(weeks58);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days67 = weeks58.toStandardDays();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 7");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-3) + "'", int44 == (-3));
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks12.getWeeks();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        int int16 = weeks15.size();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks19.dividedBy((int) '4');
        int int22 = weeks19.size();
        org.joda.time.Period period23 = weeks19.toPeriod();
        org.joda.time.DurationFieldType durationFieldType24 = weeks19.getFieldType();
        org.joda.time.Weeks weeks25 = weeks15.minus(weeks19);
        org.joda.time.Weeks weeks27 = weeks25.minus((-3));
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.MutablePeriod mutablePeriod39 = weeks38.toMutablePeriod();
        org.joda.time.Weeks weeks40 = weeks34.plus(weeks38);
        org.joda.time.Weeks weeks41 = weeks27.plus(weeks34);
        org.joda.time.Weeks weeks42 = weeks12.minus(weeks41);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks45 = weeks12.minus(weeks44);
        org.joda.time.DurationFieldType durationFieldType47 = weeks44.getFieldType((int) (byte) 0);
        boolean boolean48 = weeks3.isSupported(durationFieldType47);
        org.joda.time.Weeks weeks50 = weeks3.dividedBy((int) (byte) 1);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.Weeks weeks55 = weeks52.minus(weeks53);
        int int56 = weeks55.size();
        org.joda.time.Weeks weeks57 = weeks55.negated();
        org.joda.time.DurationFieldType durationFieldType58 = weeks57.getFieldType();
        int int59 = weeks50.get(durationFieldType58);
        org.joda.time.Weeks weeks60 = weeks50.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(weeks60);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = weeks0.get(durationFieldType3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks7 = weeks0.plus((-927));
        org.joda.time.Weeks weeks9 = weeks7.minus((int) (byte) 10);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        int int1 = weeks0.size();
        org.joda.time.Weeks weeks3 = weeks0.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType5 = weeks4.getPeriodType();
        org.joda.time.Weeks weeks7 = weeks4.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks9 = weeks4.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod10 = weeks4.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType11 = weeks4.getFieldType();
        org.joda.time.PeriodType periodType12 = weeks4.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType13 = weeks4.getFieldType();
        org.joda.time.Weeks weeks14 = weeks4.negated();
        org.joda.time.Weeks weeks16 = weeks4.multipliedBy(300);
        boolean boolean17 = weeks0.equals((java.lang.Object) weeks16);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.PeriodType periodType7 = weeks5.getPeriodType();
        boolean boolean8 = weeks1.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks10 = weeks5.minus((int) (byte) 0);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks17.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = weeks21.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = weeks21.isSupported(durationFieldType26);
        org.joda.time.Weeks weeks28 = weeks20.minus(weeks21);
        boolean boolean29 = weeks10.isLessThan(weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks4.getWeeks();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((-1));
        int int8 = weeks7.size();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Period period15 = weeks11.toPeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks11.getFieldType();
        org.joda.time.Weeks weeks17 = weeks7.minus(weeks11);
        org.joda.time.Weeks weeks19 = weeks17.minus((-3));
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = weeks30.toMutablePeriod();
        org.joda.time.Weeks weeks32 = weeks26.plus(weeks30);
        org.joda.time.Weeks weeks33 = weeks19.plus(weeks26);
        org.joda.time.Weeks weeks34 = weeks4.minus(weeks33);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks37 = weeks4.minus(weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks40.dividedBy((int) '4');
        int int43 = weeks40.size();
        org.joda.time.DurationFieldType durationFieldType44 = weeks40.getFieldType();
        int int45 = weeks4.get(durationFieldType44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.MutablePeriod mutablePeriod48 = weeks47.toMutablePeriod();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.weeks((-1));
        int int51 = weeks50.size();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks56 = weeks54.dividedBy((int) '4');
        int int57 = weeks54.size();
        org.joda.time.Period period58 = weeks54.toPeriod();
        org.joda.time.DurationFieldType durationFieldType59 = weeks54.getFieldType();
        org.joda.time.Weeks weeks60 = weeks50.minus(weeks54);
        org.joda.time.Weeks weeks62 = weeks60.minus((-3));
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.THREE;
        boolean boolean65 = weeks63.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks67 = weeks66.negated();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        java.lang.String str70 = weeks69.toString();
        boolean boolean71 = weeks63.isLessThan(weeks69);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.MutablePeriod mutablePeriod74 = weeks73.toMutablePeriod();
        org.joda.time.Weeks weeks75 = weeks69.plus(weeks73);
        org.joda.time.Weeks weeks76 = weeks62.plus(weeks69);
        org.joda.time.Weeks weeks77 = weeks47.plus(weeks62);
        org.joda.time.Weeks weeks79 = weeks62.minus(3);
        boolean boolean80 = weeks4.isGreaterThan(weeks79);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "P-3W" + "'", str70, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = weeks19.minus(weeks20);
        org.joda.time.DurationFieldType durationFieldType23 = weeks20.getFieldType();
        boolean boolean24 = weeks17.isSupported(durationFieldType23);
        org.joda.time.Weeks weeks26 = weeks17.multipliedBy((int) (short) 100);
        java.lang.String str27 = weeks17.toString();
        org.joda.time.Weeks weeks29 = weeks17.minus(3);
        org.joda.time.Weeks weeks30 = weeks10.plus(weeks17);
        org.joda.time.DurationFieldType durationFieldType31 = weeks30.getFieldType();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        org.joda.time.Weeks weeks40 = weeks32.plus(weeks38);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        java.lang.String str45 = weeks44.toString();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.ONE;
        int int47 = weeks44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks46);
        org.joda.time.Weeks weeks49 = weeks46.plus((int) (short) -1);
        int int50 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks49);
        int int51 = weeks49.getWeeks();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = weeks54.get(durationFieldType55);
        int int57 = weeks54.size();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.DurationFieldType durationFieldType61 = weeks60.getFieldType();
        boolean boolean62 = weeks54.isSupported(durationFieldType61);
        int int63 = weeks49.get(durationFieldType61);
        int int64 = weeks30.get(durationFieldType61);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P32W" + "'", str27, "P32W");
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-3W" + "'", str45, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 29 + "'", int64 == 29);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P7W");
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks16 = weeks11.minus((int) (byte) -1);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Weeks weeks25 = weeks21.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks30 = weeks28.dividedBy((int) '4');
        int int31 = weeks28.size();
        org.joda.time.Weeks weeks32 = weeks28.negated();
        boolean boolean33 = weeks25.isGreaterThan(weeks28);
        org.joda.time.DurationFieldType durationFieldType34 = weeks25.getFieldType();
        int int35 = weeks18.get(durationFieldType34);
        boolean boolean36 = weeks11.isSupported(durationFieldType34);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks41 = weeks39.dividedBy((int) '4');
        org.joda.time.Weeks weeks43 = weeks39.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        boolean boolean46 = weeks44.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        boolean boolean52 = weeks44.isLessThan(weeks50);
        org.joda.time.Weeks weeks53 = weeks50.negated();
        org.joda.time.Weeks weeks54 = weeks43.plus(weeks53);
        org.joda.time.DurationFieldType durationFieldType55 = weeks43.getFieldType();
        int int56 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks43);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType(0);
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = weeks10.minus(weeks11);
        org.joda.time.DurationFieldType durationFieldType14 = weeks11.getFieldType();
        boolean boolean15 = weeks1.isLessThan(weeks11);
        org.joda.time.Weeks weeks17 = weeks11.dividedBy(3);
        org.joda.time.Period period18 = weeks11.toPeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.DurationFieldType durationFieldType12 = weeks11.getFieldType();
        int int13 = weeks8.get(durationFieldType12);
        org.joda.time.Weeks weeks15 = weeks8.multipliedBy((int) '4');
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.TWO;
        int int17 = weeks16.size();
        org.joda.time.Weeks weeks19 = weeks16.multipliedBy((int) (short) 1);
        boolean boolean20 = weeks8.equals((java.lang.Object) weeks16);
        org.joda.time.Weeks weeks22 = weeks8.multipliedBy((-55));
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeks((-1));
        int int26 = weeks25.size();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks31 = weeks29.dividedBy((int) '4');
        int int32 = weeks29.size();
        org.joda.time.Period period33 = weeks29.toPeriod();
        org.joda.time.DurationFieldType durationFieldType34 = weeks29.getFieldType();
        org.joda.time.Weeks weeks35 = weeks25.minus(weeks29);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.parseWeeks("P-3W");
        boolean boolean38 = weeks29.isLessThan(weeks37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks43 = weeks40.minus(1030);
        org.joda.time.Weeks weeks44 = weeks39.plus(weeks40);
        boolean boolean45 = weeks22.equals((java.lang.Object) weeks39);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Weeks weeks11 = weeks4.plus(weeks7);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.DurationFieldType durationFieldType17 = weeks16.getFieldType();
        org.joda.time.DurationFieldType durationFieldType19 = weeks16.getFieldType(0);
        boolean boolean20 = weeks13.isSupported(durationFieldType19);
        boolean boolean21 = weeks7.isSupported(durationFieldType19);
        org.joda.time.Weeks weeks23 = weeks7.dividedBy((-2147483648));
        // The following exception was thrown during execution in test generation
        try {
            int int25 = weeks7.getValue((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(weeks23);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType24 = weeks2.getFieldType();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = weeks25.plus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        int int40 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks39.plus((int) (short) -1);
        int int43 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks25.plus((int) (short) 100);
        org.joda.time.Weeks weeks47 = weeks45.multipliedBy((int) (short) 10);
        boolean boolean48 = weeks2.isGreaterThan(weeks45);
        org.joda.time.PeriodType periodType49 = weeks2.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(periodType49);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P300W");
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks12 = weeks0.dividedBy((int) (short) -1);
        int int13 = weeks12.getWeeks();
        org.joda.time.PeriodType periodType14 = weeks12.getPeriodType();
        int int15 = weeks12.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks18.negated();
        org.joda.time.Weeks weeks22 = weeks1.plus(weeks21);
        org.joda.time.Weeks weeks24 = weeks22.dividedBy((-3));
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType26 = weeks25.getPeriodType();
        org.joda.time.Weeks weeks28 = weeks25.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks30 = weeks25.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod31 = weeks25.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType32 = weeks25.getFieldType();
        org.joda.time.PeriodType periodType33 = weeks25.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType34 = weeks25.getFieldType();
        org.joda.time.Weeks weeks35 = weeks25.negated();
        boolean boolean36 = weeks22.isLessThan(weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        boolean boolean39 = weeks37.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = weeks37.plus(weeks43);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        org.joda.time.Weeks weeks54 = weeks51.plus((int) (short) -1);
        int int55 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks54);
        org.joda.time.Weeks weeks57 = weeks37.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod58 = weeks57.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType60 = weeks57.getFieldType(0);
        org.joda.time.Duration duration61 = weeks57.toStandardDuration();
        boolean boolean62 = weeks35.equals((java.lang.Object) duration61);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks21 = weeks19.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.parseWeeks("P-4W");
        boolean boolean24 = weeks21.equals((java.lang.Object) "P-4W");
        org.joda.time.Weeks weeks26 = weeks21.multipliedBy(0);
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.PeriodType periodType30 = weeks28.getPeriodType();
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.weeksIn(readableInterval31);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        boolean boolean35 = weeks33.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        java.lang.String str40 = weeks39.toString();
        boolean boolean41 = weeks33.isLessThan(weeks39);
        org.joda.time.Weeks weeks42 = weeks32.minus(weeks39);
        org.joda.time.Weeks weeks44 = weeks42.plus((int) 'a');
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = weeks46.minus(weeks47);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType51 = weeks50.getPeriodType();
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks50);
        org.joda.time.Weeks weeks53 = weeks44.plus(weeks50);
        org.joda.time.Weeks weeks55 = weeks53.minus(1030);
        boolean boolean56 = weeks28.equals((java.lang.Object) weeks55);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.Weeks weeks61 = weeks58.minus(weeks59);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.PeriodType periodType64 = weeks62.getPeriodType();
        boolean boolean65 = weeks58.isGreaterThan(weeks62);
        org.joda.time.Weeks weeks67 = weeks62.minus((int) (byte) 0);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        boolean boolean70 = weeks68.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        java.lang.String str75 = weeks74.toString();
        boolean boolean76 = weeks68.isLessThan(weeks74);
        org.joda.time.Weeks weeks77 = weeks74.negated();
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.THREE;
        boolean boolean80 = weeks78.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType81 = null;
        int int82 = weeks78.get(durationFieldType81);
        org.joda.time.DurationFieldType durationFieldType83 = null;
        boolean boolean84 = weeks78.isSupported(durationFieldType83);
        org.joda.time.Weeks weeks85 = weeks77.minus(weeks78);
        boolean boolean86 = weeks67.isLessThan(weeks85);
        org.joda.time.Weeks weeks87 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        org.joda.time.Weeks weeks88 = weeks55.minus(weeks87);
        int int89 = weeks27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks88);
        // The following exception was thrown during execution in test generation
        try {
            int int91 = weeks27.getValue(97);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "P-3W" + "'", str40, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "P-3W" + "'", str75, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(1030);
        org.joda.time.Duration duration2 = weeks1.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(duration2);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = weeks19.plus(weeks20);
        org.joda.time.Weeks weeks31 = weeks29.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = weeks33.minus(weeks34);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.PeriodType periodType39 = weeks37.getPeriodType();
        boolean boolean40 = weeks33.isGreaterThan(weeks37);
        org.joda.time.Weeks weeks42 = weeks37.minus((int) (byte) 0);
        org.joda.time.Duration duration43 = weeks42.toStandardDuration();
        boolean boolean44 = weeks29.equals((java.lang.Object) duration43);
        boolean boolean45 = weeks18.equals((java.lang.Object) duration43);
        org.joda.time.Weeks weeks47 = weeks18.multipliedBy(0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks47);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks21 = weeks19.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.parseWeeks("P-4W");
        boolean boolean24 = weeks21.equals((java.lang.Object) "P-4W");
        org.joda.time.Weeks weeks26 = weeks21.multipliedBy(0);
        int int27 = weeks21.getWeeks();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType29 = weeks21.getFieldType(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.DurationFieldType durationFieldType23 = weeks13.getFieldType();
        org.joda.time.Weeks weeks25 = weeks13.dividedBy(1);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks25);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        java.lang.String str2 = weeks0.toString();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.MutablePeriod mutablePeriod4 = weeks0.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "P3W" + "'", str2, "P3W");
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        boolean boolean17 = weeks9.isLessThan(weeks15);
        org.joda.time.Weeks weeks18 = weeks8.plus(weeks9);
        int int19 = weeks9.size();
        org.joda.time.DurationFieldType durationFieldType20 = weeks9.getFieldType();
        org.joda.time.Weeks weeks21 = weeks1.plus(weeks9);
        int int22 = weeks9.size();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType24 = weeks23.getPeriodType();
        org.joda.time.Weeks weeks26 = weeks23.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks28 = weeks23.dividedBy((int) 'a');
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks29.plus(weeks30);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        boolean boolean47 = weeks29.isGreaterThan(weeks45);
        int int48 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        boolean boolean51 = weeks49.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        java.lang.String str56 = weeks55.toString();
        boolean boolean57 = weeks49.isLessThan(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.MutablePeriod mutablePeriod61 = weeks60.toMutablePeriod();
        org.joda.time.Weeks weeks62 = weeks58.plus(weeks60);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks64 = weeks28.minus(weeks58);
        int int65 = weeks9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks64);
        org.joda.time.Weeks weeks66 = weeks64.negated();
        org.joda.time.MutablePeriod mutablePeriod67 = weeks66.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeks((-1));
        int int21 = weeks20.size();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks24.dividedBy((int) '4');
        int int27 = weeks24.size();
        org.joda.time.Period period28 = weeks24.toPeriod();
        org.joda.time.DurationFieldType durationFieldType29 = weeks24.getFieldType();
        org.joda.time.Weeks weeks30 = weeks20.minus(weeks24);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks37.negated();
        org.joda.time.Weeks weeks41 = weeks20.plus(weeks40);
        boolean boolean42 = weeks17.isLessThan(weeks41);
        org.joda.time.MutablePeriod mutablePeriod43 = weeks17.toMutablePeriod();
        int int44 = weeks17.getWeeks();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType46 = weeks45.getPeriodType();
        org.joda.time.Weeks weeks48 = weeks45.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks50 = weeks45.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod51 = weeks45.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType52 = weeks45.getFieldType();
        org.joda.time.PeriodType periodType53 = weeks45.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType54 = weeks45.getFieldType();
        int int55 = weeks17.get(durationFieldType54);
        boolean boolean56 = weeks11.equals((java.lang.Object) weeks17);
        org.joda.time.Period period57 = weeks17.toPeriod();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.MutablePeriod mutablePeriod62 = weeks61.toMutablePeriod();
        org.joda.time.Weeks weeks64 = weeks61.multipliedBy(0);
        org.joda.time.Weeks weeks65 = weeks59.minus(weeks64);
        org.joda.time.Weeks weeks67 = weeks65.dividedBy((int) ' ');
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        int int74 = weeks71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks73);
        org.joda.time.Weeks weeks76 = weeks73.plus((int) (short) -1);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks78 = weeks77.negated();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks78);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks78);
        java.lang.String str81 = weeks80.toString();
        org.joda.time.Weeks weeks82 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks80);
        org.joda.time.Weeks weeks83 = weeks73.minus(weeks80);
        boolean boolean84 = weeks67.isLessThan(weeks73);
        org.joda.time.MutablePeriod mutablePeriod85 = weeks67.toMutablePeriod();
        org.joda.time.Weeks weeks86 = weeks17.minus(weeks67);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-3) + "'", int44 == (-3));
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "P-3W" + "'", str81, "P-3W");
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(mutablePeriod85);
        org.junit.Assert.assertNotNull(weeks86);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.parseWeeks("P-3W");
        boolean boolean14 = weeks5.isLessThan(weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Duration duration16 = weeks5.toStandardDuration();
        java.lang.Class<?> wildcardClass17 = duration16.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks27 = weeks5.minus(300);
        org.joda.time.Weeks weeks29 = weeks27.multipliedBy((int) (short) -1);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks21 = weeks19.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.parseWeeks("P-4W");
        boolean boolean24 = weeks21.equals((java.lang.Object) "P-4W");
        org.joda.time.Weeks weeks26 = weeks21.multipliedBy(0);
        org.joda.time.Weeks weeks28 = weeks21.multipliedBy((-2147483648));
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.DurationFieldType durationFieldType6 = weeks5.getFieldType();
        org.joda.time.DurationFieldType durationFieldType8 = weeks5.getFieldType(0);
        org.joda.time.Weeks weeks9 = weeks2.plus(weeks5);
        int int10 = weeks5.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = weeks11.getFieldType();
        boolean boolean13 = weeks10.isSupported(durationFieldType12);
        int int14 = weeks10.getWeeks();
        org.joda.time.Weeks weeks16 = weeks10.dividedBy((int) '4');
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        boolean boolean27 = weeks19.isLessThan(weeks25);
        org.joda.time.Weeks weeks28 = weeks18.plus(weeks19);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType30 = weeks29.getFieldType();
        boolean boolean31 = weeks28.isSupported(durationFieldType30);
        int int32 = weeks28.getWeeks();
        org.joda.time.Weeks weeks34 = weeks28.multipliedBy((int) (byte) 100);
        org.joda.time.Duration duration35 = weeks28.toStandardDuration();
        org.joda.time.Weeks weeks37 = weeks28.dividedBy((int) (byte) 10);
        boolean boolean38 = weeks17.isLessThan(weeks28);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.ONE;
        int int45 = weeks42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks44);
        org.joda.time.Weeks weeks47 = weeks44.plus((int) (short) -1);
        org.joda.time.Weeks weeks49 = weeks44.multipliedBy((int) (byte) 10);
        org.joda.time.Weeks weeks51 = weeks49.dividedBy((int) (byte) 1);
        org.joda.time.Period period52 = weeks49.toPeriod();
        boolean boolean53 = weeks28.isLessThan(weeks49);
        org.joda.time.MutablePeriod mutablePeriod54 = weeks49.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(mutablePeriod54);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        org.joda.time.Weeks weeks50 = weeks42.plus(weeks48);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.ONE;
        int int57 = weeks54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks56);
        org.joda.time.Weeks weeks59 = weeks56.plus((int) (short) -1);
        int int60 = weeks42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks42.plus((int) (short) 100);
        org.joda.time.Weeks weeks64 = weeks42.multipliedBy(3);
        org.joda.time.Weeks weeks65 = weeks5.minus(weeks64);
        org.joda.time.DurationFieldType durationFieldType66 = weeks5.getFieldType();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.DurationFieldType durationFieldType72 = weeks71.getFieldType();
        org.joda.time.DurationFieldType durationFieldType74 = weeks71.getFieldType(0);
        boolean boolean75 = weeks68.isSupported(durationFieldType74);
        int int76 = weeks5.get(durationFieldType74);
        org.joda.time.Weeks weeks78 = weeks5.multipliedBy(0);
        org.joda.time.Weeks weeks80 = weeks5.plus((-4));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks80);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        int int21 = weeks11.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = weeks2.get(durationFieldType3);
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.DurationFieldType durationFieldType9 = weeks8.getFieldType();
        boolean boolean10 = weeks2.isSupported(durationFieldType9);
        java.lang.String str11 = weeks2.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P-3W" + "'", str11, "P-3W");
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks10 = weeks6.dividedBy(3);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks11.plus(weeks12);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType23 = weeks22.getFieldType();
        boolean boolean24 = weeks21.isSupported(durationFieldType23);
        boolean boolean25 = weeks6.isSupported(durationFieldType23);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.DurationFieldType durationFieldType32 = weeks31.getFieldType();
        org.joda.time.DurationFieldType durationFieldType34 = weeks31.getFieldType(0);
        int int35 = weeks26.get(durationFieldType34);
        boolean boolean36 = weeks6.isSupported(durationFieldType34);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.DurationFieldType durationFieldType22 = weeks21.getFieldType();
        org.joda.time.DurationFieldType durationFieldType24 = weeks21.getFieldType(0);
        int int25 = weeks15.get(durationFieldType24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks30 = weeks28.dividedBy((int) '4');
        org.joda.time.Weeks weeks32 = weeks28.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        boolean boolean35 = weeks33.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        java.lang.String str40 = weeks39.toString();
        boolean boolean41 = weeks33.isLessThan(weeks39);
        org.joda.time.Weeks weeks42 = weeks39.negated();
        org.joda.time.Weeks weeks43 = weeks32.plus(weeks42);
        int int44 = weeks15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.weeksIn(readableInterval46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        boolean boolean50 = weeks48.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        boolean boolean56 = weeks48.isLessThan(weeks54);
        org.joda.time.Weeks weeks57 = weeks47.minus(weeks54);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.MutablePeriod mutablePeriod62 = weeks61.toMutablePeriod();
        org.joda.time.Weeks weeks64 = weeks61.multipliedBy(0);
        org.joda.time.Weeks weeks65 = weeks59.minus(weeks64);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        boolean boolean69 = weeks67.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks71 = weeks70.negated();
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks71);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks71);
        java.lang.String str74 = weeks73.toString();
        boolean boolean75 = weeks67.isLessThan(weeks73);
        org.joda.time.Weeks weeks76 = weeks66.plus(weeks67);
        int int77 = weeks67.size();
        org.joda.time.DurationFieldType durationFieldType78 = weeks67.getFieldType();
        org.joda.time.Weeks weeks79 = weeks59.plus(weeks67);
        boolean boolean80 = weeks54.isGreaterThan(weeks79);
        org.joda.time.Weeks weeks82 = org.joda.time.Weeks.weeks((-1));
        int int83 = weeks82.size();
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks85 = weeks84.negated();
        org.joda.time.Weeks weeks86 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks85);
        org.joda.time.Weeks weeks88 = weeks86.dividedBy((int) '4');
        int int89 = weeks86.size();
        org.joda.time.Period period90 = weeks86.toPeriod();
        org.joda.time.DurationFieldType durationFieldType91 = weeks86.getFieldType();
        org.joda.time.Weeks weeks92 = weeks82.minus(weeks86);
        boolean boolean93 = weeks79.isGreaterThan(weeks92);
        org.joda.time.Weeks weeks95 = weeks92.plus(0);
        org.joda.time.DurationFieldType durationFieldType96 = weeks92.getFieldType();
        int int97 = weeks32.get(durationFieldType96);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "P-3W" + "'", str40, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "P-3W" + "'", str74, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(weeks95);
        org.junit.Assert.assertNotNull(durationFieldType96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = weeks1.multipliedBy(0);
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Period period6 = weeks4.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.weeks((-1));
        int int44 = weeks43.size();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks49 = weeks47.dividedBy((int) '4');
        int int50 = weeks47.size();
        org.joda.time.Period period51 = weeks47.toPeriod();
        org.joda.time.DurationFieldType durationFieldType52 = weeks47.getFieldType();
        org.joda.time.Weeks weeks53 = weeks43.minus(weeks47);
        org.joda.time.Weeks weeks55 = weeks43.minus((int) (byte) 100);
        org.joda.time.Duration duration56 = weeks43.toStandardDuration();
        org.joda.time.Weeks weeks57 = weeks5.minus(weeks43);
        org.joda.time.DurationFieldType durationFieldType58 = weeks43.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(durationFieldType58);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType28 = weeks27.getPeriodType();
        org.joda.time.Weeks weeks30 = weeks27.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks32 = weeks27.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod33 = weeks27.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType34 = weeks27.getFieldType();
        org.joda.time.PeriodType periodType35 = weeks27.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType36 = weeks27.getFieldType();
        org.joda.time.Weeks weeks37 = weeks26.minus(weeks27);
        org.joda.time.DurationFieldType durationFieldType38 = weeks27.getFieldType();
        java.lang.Class<?> wildcardClass39 = durationFieldType38.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks12 = weeks10.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = weeks14.minus(weeks15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.PeriodType periodType20 = weeks18.getPeriodType();
        boolean boolean21 = weeks14.isGreaterThan(weeks18);
        org.joda.time.Weeks weeks23 = weeks18.minus((int) (byte) 0);
        org.joda.time.Duration duration24 = weeks23.toStandardDuration();
        boolean boolean25 = weeks10.equals((java.lang.Object) duration24);
        org.joda.time.Weeks weeks27 = weeks10.plus(9);
        org.joda.time.Weeks weeks29 = weeks10.dividedBy(9);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType10 = weeks9.getPeriodType();
        org.joda.time.Weeks weeks12 = weeks9.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks14 = weeks9.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod15 = weeks9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks9.getFieldType();
        org.joda.time.PeriodType periodType17 = weeks9.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType18 = weeks9.getFieldType();
        boolean boolean19 = weeks8.isSupported(durationFieldType18);
        org.joda.time.Period period20 = weeks8.toPeriod();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Weeks weeks23 = weeks21.minus(2);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType25 = weeks24.getFieldType();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = weeks24.plus(weeks39);
        org.joda.time.Weeks weeks42 = weeks39.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType45 = weeks44.getFieldType();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        boolean boolean48 = weeks46.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        boolean boolean54 = weeks46.isLessThan(weeks52);
        org.joda.time.Weeks weeks55 = weeks52.negated();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.MutablePeriod mutablePeriod58 = weeks57.toMutablePeriod();
        org.joda.time.Weeks weeks59 = weeks55.plus(weeks57);
        org.joda.time.Weeks weeks60 = weeks44.plus(weeks59);
        org.joda.time.Weeks weeks62 = weeks59.plus((int) (short) 10);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks64 = weeks63.negated();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks64);
        org.joda.time.DurationFieldType durationFieldType66 = weeks65.getFieldType();
        org.joda.time.DurationFieldType durationFieldType68 = weeks65.getFieldType(0);
        int int69 = weeks59.get(durationFieldType68);
        int int70 = weeks42.get(durationFieldType68);
        int int71 = weeks21.get(durationFieldType68);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks3 = weeks1.multipliedBy((-103));
        org.joda.time.MutablePeriod mutablePeriod4 = weeks1.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks3 = weeks1.multipliedBy((-103));
        org.joda.time.Weeks weeks5 = weeks1.minus(4);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (byte) 100);
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        boolean boolean28 = weeks25.equals((java.lang.Object) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks25.toMutablePeriod();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        org.joda.time.Weeks weeks34 = weeks32.dividedBy((int) '4');
        int int35 = weeks32.size();
        org.joda.time.Period period36 = weeks32.toPeriod();
        boolean boolean37 = weeks25.isGreaterThan(weeks32);
        boolean boolean38 = weeks24.isGreaterThan(weeks25);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((-1));
        int int20 = weeks19.size();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        int int26 = weeks23.size();
        org.joda.time.Period period27 = weeks23.toPeriod();
        org.joda.time.DurationFieldType durationFieldType28 = weeks23.getFieldType();
        org.joda.time.Weeks weeks29 = weeks19.minus(weeks23);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.negated();
        org.joda.time.Weeks weeks40 = weeks19.plus(weeks39);
        org.joda.time.Weeks weeks41 = weeks17.plus(weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.TWO;
        int int43 = weeks42.size();
        org.joda.time.Weeks weeks45 = weeks42.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks46 = weeks40.plus(weeks42);
        org.joda.time.Weeks weeks48 = weeks42.dividedBy((-10));
        int int49 = weeks48.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        int int4 = weeks3.size();
        java.lang.String str5 = weeks3.toString();
        java.lang.String str6 = weeks3.toString();
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = weeks3.minus((-3));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        int int12 = weeks11.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Period period19 = weeks15.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = weeks15.getFieldType();
        org.joda.time.Weeks weeks21 = weeks11.minus(weeks15);
        org.joda.time.Weeks weeks23 = weeks21.minus((-3));
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.MutablePeriod mutablePeriod35 = weeks34.toMutablePeriod();
        org.joda.time.Weeks weeks36 = weeks30.plus(weeks34);
        org.joda.time.Weeks weeks37 = weeks23.plus(weeks30);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks39 = null;
        org.joda.time.Weeks weeks40 = weeks38.plus(weeks39);
        boolean boolean41 = weeks9.isGreaterThan(weeks38);
        org.joda.time.PeriodType periodType42 = weeks9.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-3W" + "'", str5, "P-3W");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(periodType42);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Weeks weeks11 = weeks0.dividedBy((int) ' ');
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType13 = weeks12.getFieldType();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        boolean boolean16 = weeks14.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        boolean boolean22 = weeks14.isLessThan(weeks20);
        org.joda.time.Weeks weeks23 = weeks20.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.MutablePeriod mutablePeriod26 = weeks25.toMutablePeriod();
        org.joda.time.Weeks weeks27 = weeks23.plus(weeks25);
        org.joda.time.Weeks weeks28 = weeks12.plus(weeks27);
        org.joda.time.Weeks weeks30 = weeks27.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.ONE;
        int int37 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks36);
        org.joda.time.Weeks weeks38 = weeks30.plus(weeks34);
        boolean boolean39 = weeks11.isGreaterThan(weeks34);
        org.joda.time.Weeks weeks41 = weeks34.minus(1);
        org.joda.time.Period period42 = weeks34.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(period42);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        int int4 = weeks3.size();
        java.lang.String str5 = weeks3.toString();
        java.lang.String str6 = weeks3.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks8.minus((int) '4');
        org.joda.time.Weeks weeks12 = weeks3.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.MutablePeriod mutablePeriod15 = weeks14.toMutablePeriod();
        org.joda.time.Weeks weeks16 = weeks14.negated();
        int int17 = weeks8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.MutablePeriod mutablePeriod22 = weeks21.toMutablePeriod();
        org.joda.time.Weeks weeks24 = weeks21.multipliedBy(0);
        org.joda.time.Weeks weeks25 = weeks19.minus(weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = weeks26.get(durationFieldType29);
        org.joda.time.Weeks weeks32 = weeks26.minus((int) ' ');
        org.joda.time.PeriodType periodType33 = weeks26.getPeriodType();
        org.joda.time.Weeks weeks34 = weeks25.minus(weeks26);
        boolean boolean35 = weeks8.isLessThan(weeks25);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-3W" + "'", str5, "P-3W");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int31 = weeks3.getValue((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType32 = weeks3.getFieldType();
        java.lang.Class<?> wildcardClass33 = weeks3.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.DurationFieldType durationFieldType22 = weeks21.getFieldType();
        org.joda.time.DurationFieldType durationFieldType24 = weeks21.getFieldType(0);
        int int25 = weeks15.get(durationFieldType24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks30 = weeks28.dividedBy((int) '4');
        org.joda.time.Weeks weeks32 = weeks28.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        boolean boolean35 = weeks33.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        java.lang.String str40 = weeks39.toString();
        boolean boolean41 = weeks33.isLessThan(weeks39);
        org.joda.time.Weeks weeks42 = weeks39.negated();
        org.joda.time.Weeks weeks43 = weeks32.plus(weeks42);
        int int44 = weeks15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks46 = null;
        boolean boolean47 = weeks45.isGreaterThan(weeks46);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "P-3W" + "'", str40, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.PeriodType periodType7 = weeks5.getPeriodType();
        boolean boolean8 = weeks1.isGreaterThan(weeks5);
        org.joda.time.PeriodType periodType9 = weeks1.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType11 = weeks1.getFieldType((int) (byte) 0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(durationFieldType11);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks0.multipliedBy(3);
        org.joda.time.Weeks weeks24 = weeks0.dividedBy((int) (byte) -1);
        org.joda.time.Weeks weeks26 = weeks24.minus((int) '4');
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType28 = weeks27.getPeriodType();
        org.joda.time.Weeks weeks30 = weeks27.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks32 = weeks27.dividedBy((int) 'a');
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        boolean boolean42 = weeks34.isLessThan(weeks40);
        org.joda.time.Weeks weeks43 = weeks33.plus(weeks34);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        java.lang.String str48 = weeks47.toString();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.ONE;
        int int50 = weeks47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks49);
        boolean boolean51 = weeks33.isGreaterThan(weeks49);
        int int52 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        boolean boolean55 = weeks53.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        java.lang.String str60 = weeks59.toString();
        boolean boolean61 = weeks53.isLessThan(weeks59);
        org.joda.time.Weeks weeks62 = weeks59.negated();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks64 = weeks63.negated();
        org.joda.time.MutablePeriod mutablePeriod65 = weeks64.toMutablePeriod();
        org.joda.time.Weeks weeks66 = weeks62.plus(weeks64);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        org.joda.time.Weeks weeks68 = weeks32.minus(weeks62);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        boolean boolean71 = weeks69.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        java.lang.String str76 = weeks75.toString();
        org.joda.time.Weeks weeks77 = weeks69.plus(weeks75);
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks79 = weeks78.negated();
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks79);
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks79);
        java.lang.String str82 = weeks81.toString();
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.ONE;
        int int84 = weeks81.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks83);
        org.joda.time.Weeks weeks86 = weeks83.plus((int) (short) -1);
        int int87 = weeks69.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks86);
        org.joda.time.Weeks weeks89 = weeks69.plus((int) (short) 100);
        org.joda.time.Weeks weeks91 = weeks69.multipliedBy(3);
        org.joda.time.Weeks weeks92 = weeks32.minus(weeks91);
        org.joda.time.Weeks weeks93 = weeks26.minus(weeks32);
        org.joda.time.MutablePeriod mutablePeriod94 = weeks93.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "P-3W" + "'", str48, "P-3W");
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "P-3W" + "'", str60, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "P-3W" + "'", str76, "P-3W");
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "P-3W" + "'", str82, "P-3W");
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertNotNull(weeks93);
        org.junit.Assert.assertNotNull(mutablePeriod94);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = weeks16.get(durationFieldType17);
        int int19 = weeks16.size();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.DurationFieldType durationFieldType23 = weeks22.getFieldType();
        boolean boolean24 = weeks16.isSupported(durationFieldType23);
        int int25 = weeks13.get(durationFieldType23);
        org.joda.time.Weeks weeks27 = weeks13.plus((int) (byte) 100);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.ONE;
        int int34 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        org.joda.time.Weeks weeks36 = weeks33.plus((int) (short) -1);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType38 = weeks37.getPeriodType();
        org.joda.time.Weeks weeks40 = weeks37.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks42 = weeks37.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod43 = weeks37.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType44 = weeks37.getFieldType();
        org.joda.time.PeriodType periodType45 = weeks37.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType46 = weeks37.getFieldType();
        boolean boolean47 = weeks36.isSupported(durationFieldType46);
        org.joda.time.Period period48 = weeks36.toPeriod();
        org.joda.time.Weeks weeks49 = weeks13.plus(weeks36);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(weeks49);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks12 = weeks10.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = weeks14.minus(weeks15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.PeriodType periodType20 = weeks18.getPeriodType();
        boolean boolean21 = weeks14.isGreaterThan(weeks18);
        org.joda.time.Weeks weeks23 = weeks18.minus((int) (byte) 0);
        org.joda.time.Duration duration24 = weeks23.toStandardDuration();
        boolean boolean25 = weeks10.equals((java.lang.Object) duration24);
        org.joda.time.DurationFieldType durationFieldType27 = weeks10.getFieldType(0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks16 = weeks13.multipliedBy(0);
        org.joda.time.Weeks weeks17 = weeks11.minus(weeks16);
        org.joda.time.Duration duration18 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks20 = weeks17.minus((int) (byte) 10);
        boolean boolean21 = weeks8.equals((java.lang.Object) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks24.dividedBy((int) '4');
        int int27 = weeks26.getWeeks();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((-1));
        int int30 = weeks29.size();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks35 = weeks33.dividedBy((int) '4');
        int int36 = weeks33.size();
        org.joda.time.Period period37 = weeks33.toPeriod();
        org.joda.time.DurationFieldType durationFieldType38 = weeks33.getFieldType();
        org.joda.time.Weeks weeks39 = weeks29.minus(weeks33);
        org.joda.time.Weeks weeks41 = weeks39.minus((-3));
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.MutablePeriod mutablePeriod53 = weeks52.toMutablePeriod();
        org.joda.time.Weeks weeks54 = weeks48.plus(weeks52);
        org.joda.time.Weeks weeks55 = weeks41.plus(weeks48);
        org.joda.time.Weeks weeks56 = weeks26.minus(weeks55);
        org.joda.time.Weeks weeks57 = null;
        org.joda.time.Weeks weeks58 = weeks55.plus(weeks57);
        org.joda.time.DurationFieldType durationFieldType59 = weeks55.getFieldType();
        int int60 = weeks20.get(durationFieldType59);
        java.lang.Class<?> wildcardClass61 = weeks20.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-10) + "'", int60 == (-10));
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 10);
        java.lang.String str2 = weeks1.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "P10W" + "'", str2, "P10W");
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P-1W");
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        java.lang.String str6 = weeks5.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((-1));
        int int9 = weeks8.size();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks14 = weeks12.dividedBy((int) '4');
        int int15 = weeks12.size();
        org.joda.time.Period period16 = weeks12.toPeriod();
        org.joda.time.DurationFieldType durationFieldType17 = weeks12.getFieldType();
        org.joda.time.Weeks weeks18 = weeks8.minus(weeks12);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        boolean boolean27 = weeks19.isLessThan(weeks25);
        org.joda.time.Weeks weeks28 = weeks25.negated();
        org.joda.time.Weeks weeks29 = weeks8.plus(weeks28);
        boolean boolean30 = weeks5.isLessThan(weeks29);
        boolean boolean31 = weeks1.equals((java.lang.Object) boolean30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        org.joda.time.Weeks weeks42 = weeks32.dividedBy(100);
        org.joda.time.Duration duration43 = weeks42.toStandardDuration();
        boolean boolean44 = weeks1.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(weeks45);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType(0);
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = weeks10.minus(weeks11);
        org.joda.time.DurationFieldType durationFieldType14 = weeks11.getFieldType();
        boolean boolean15 = weeks1.isLessThan(weeks11);
        org.joda.time.Weeks weeks17 = weeks11.dividedBy(3);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType19 = weeks18.getFieldType();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = weeks26.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.MutablePeriod mutablePeriod32 = weeks31.toMutablePeriod();
        org.joda.time.Weeks weeks33 = weeks29.plus(weeks31);
        org.joda.time.Weeks weeks34 = weeks18.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks33.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        int int43 = weeks40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks44 = weeks36.plus(weeks40);
        org.joda.time.MutablePeriod mutablePeriod45 = weeks40.toMutablePeriod();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        boolean boolean49 = weeks47.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        java.lang.String str54 = weeks53.toString();
        org.joda.time.Weeks weeks55 = weeks47.plus(weeks53);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        java.lang.String str60 = weeks59.toString();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.ONE;
        int int62 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks61);
        org.joda.time.Weeks weeks64 = weeks61.plus((int) (short) -1);
        int int65 = weeks47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks64);
        org.joda.time.Weeks weeks67 = weeks47.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod68 = weeks67.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType70 = weeks67.getFieldType(0);
        int int71 = weeks46.get(durationFieldType70);
        org.joda.time.Period period72 = weeks46.toPeriod();
        boolean boolean73 = weeks11.equals((java.lang.Object) weeks46);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "P-3W" + "'", str54, "P-3W");
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "P-3W" + "'", str60, "P-3W");
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(mutablePeriod68);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-3) + "'", int71 == (-3));
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 0);
        org.joda.time.Weeks weeks3 = weeks1.dividedBy((int) (byte) -1);
        org.joda.time.Weeks weeks4 = weeks1.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType6 = weeks4.getFieldType((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = weeks11.isSupported(durationFieldType15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        boolean boolean20 = weeks11.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks22 = weeks11.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        int int7 = weeks2.size();
        int int8 = weeks2.getWeeks();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        org.joda.time.Weeks weeks17 = weeks9.plus(weeks15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        int int24 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks23.plus((int) (short) -1);
        int int27 = weeks9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks9.plus((int) (short) 100);
        org.joda.time.Weeks weeks31 = weeks29.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType33 = weeks32.getFieldType();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        boolean boolean42 = weeks34.isLessThan(weeks40);
        org.joda.time.Weeks weeks43 = weeks40.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.MutablePeriod mutablePeriod46 = weeks45.toMutablePeriod();
        org.joda.time.Weeks weeks47 = weeks43.plus(weeks45);
        org.joda.time.Weeks weeks48 = weeks32.plus(weeks47);
        org.joda.time.Weeks weeks50 = weeks47.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks51 = weeks50.negated();
        boolean boolean52 = weeks31.isGreaterThan(weeks50);
        int int53 = weeks31.getWeeks();
        org.joda.time.Weeks weeks54 = weeks2.minus(weeks31);
        org.joda.time.Period period55 = weeks54.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-3) + "'", int8 == (-3));
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1030 + "'", int53 == 1030);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(period55);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.MutablePeriod mutablePeriod33 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks34 = weeks28.plus(weeks32);
        boolean boolean35 = weeks20.isLessThan(weeks32);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks40 = weeks37.multipliedBy((int) ' ');
        boolean boolean41 = weeks20.isLessThan(weeks37);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        int int47 = weeks42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks44);
        org.joda.time.Weeks weeks49 = weeks44.minus((-55));
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType51 = weeks50.getFieldType();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        boolean boolean54 = weeks52.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        boolean boolean60 = weeks52.isLessThan(weeks58);
        org.joda.time.Weeks weeks61 = weeks58.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.MutablePeriod mutablePeriod64 = weeks63.toMutablePeriod();
        org.joda.time.Weeks weeks65 = weeks61.plus(weeks63);
        org.joda.time.Weeks weeks66 = weeks50.plus(weeks65);
        org.joda.time.Weeks weeks68 = weeks65.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        java.lang.String str73 = weeks72.toString();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.ONE;
        int int75 = weeks72.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks74);
        org.joda.time.Weeks weeks76 = weeks68.plus(weeks72);
        org.joda.time.MutablePeriod mutablePeriod77 = weeks72.toMutablePeriod();
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        org.joda.time.Weeks weeks79 = weeks49.minus(weeks78);
        int int80 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks78);
        org.joda.time.Weeks weeks81 = weeks37.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "P-3W" + "'", str73, "P-3W");
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(mutablePeriod77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(weeks81);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = weeks16.get(durationFieldType17);
        int int19 = weeks16.size();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.DurationFieldType durationFieldType23 = weeks22.getFieldType();
        boolean boolean24 = weeks16.isSupported(durationFieldType23);
        int int25 = weeks13.get(durationFieldType23);
        org.joda.time.Weeks weeks27 = weeks13.plus((int) (byte) 100);
        org.joda.time.Weeks weeks29 = weeks27.dividedBy((-1));
        org.joda.time.Weeks weeks31 = weeks27.plus(0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int30 = weeks3.getWeeks();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType32 = weeks31.getPeriodType();
        org.joda.time.Weeks weeks34 = weeks31.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks36 = weeks31.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod37 = weeks31.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType38 = weeks31.getFieldType();
        org.joda.time.PeriodType periodType39 = weeks31.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType40 = weeks31.getFieldType();
        int int41 = weeks3.get(durationFieldType40);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.weeksIn(readableInterval42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        boolean boolean46 = weeks44.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        boolean boolean52 = weeks44.isLessThan(weeks50);
        org.joda.time.Weeks weeks53 = weeks43.minus(weeks50);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.MutablePeriod mutablePeriod58 = weeks57.toMutablePeriod();
        org.joda.time.Weeks weeks60 = weeks57.multipliedBy(0);
        org.joda.time.Weeks weeks61 = weeks55.minus(weeks60);
        int int62 = weeks53.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks61);
        org.joda.time.Weeks weeks63 = weeks61.negated();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.parseWeeks("P-4W");
        boolean boolean66 = weeks63.equals((java.lang.Object) "P-4W");
        int int67 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks63);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        boolean boolean70 = weeks68.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        java.lang.String str75 = weeks74.toString();
        boolean boolean76 = weeks68.isLessThan(weeks74);
        org.joda.time.Weeks weeks77 = weeks74.negated();
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks79 = weeks78.negated();
        org.joda.time.MutablePeriod mutablePeriod80 = weeks79.toMutablePeriod();
        org.joda.time.Weeks weeks81 = weeks77.plus(weeks79);
        int int82 = weeks79.size();
        org.joda.time.Weeks weeks84 = weeks79.minus((int) (byte) -1);
        org.joda.time.Weeks weeks86 = weeks79.dividedBy(100);
        org.joda.time.Weeks weeks87 = weeks86.negated();
        org.joda.time.Weeks weeks88 = weeks3.plus(weeks86);
        org.joda.time.Period period89 = weeks86.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-3) + "'", int41 == (-3));
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "P-3W" + "'", str75, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(mutablePeriod80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertNotNull(period89);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        org.joda.time.Weeks weeks9 = weeks0.plus((-927));
        org.joda.time.Weeks weeks10 = weeks0.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(300);
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        java.lang.Class<?> wildcardClass3 = weeks1.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.DurationFieldType durationFieldType22 = weeks21.getFieldType();
        org.joda.time.DurationFieldType durationFieldType24 = weeks21.getFieldType(0);
        int int25 = weeks15.get(durationFieldType24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks36 = weeks26.dividedBy(100);
        org.joda.time.Weeks weeks38 = weeks36.plus(1);
        org.joda.time.Weeks weeks39 = weeks15.minus(weeks36);
        org.joda.time.Weeks weeks41 = weeks39.plus((int) ' ');
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType28 = weeks27.getPeriodType();
        org.joda.time.Weeks weeks30 = weeks27.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks32 = weeks27.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod33 = weeks27.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType34 = weeks27.getFieldType();
        org.joda.time.PeriodType periodType35 = weeks27.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType36 = weeks27.getFieldType();
        org.joda.time.Weeks weeks37 = weeks26.minus(weeks27);
        org.joda.time.Weeks weeks39 = weeks27.minus((int) '4');
        org.joda.time.MutablePeriod mutablePeriod40 = weeks39.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        int int11 = weeks1.size();
        org.joda.time.DurationFieldType durationFieldType12 = weeks1.getFieldType();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = weeks16.minus(weeks17);
        boolean boolean20 = weeks13.isLessThan(weeks16);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType22 = weeks21.getPeriodType();
        org.joda.time.Weeks weeks24 = weeks21.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks26 = weeks21.dividedBy((int) 'a');
        boolean boolean27 = weeks13.isGreaterThan(weeks21);
        org.joda.time.Weeks weeks28 = weeks1.minus(weeks13);
        java.lang.String str29 = weeks28.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P0W" + "'", str29, "P0W");
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        java.lang.String str6 = weeks4.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((-1));
        int int9 = weeks8.size();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks14 = weeks12.dividedBy((int) '4');
        int int15 = weeks12.size();
        org.joda.time.Period period16 = weeks12.toPeriod();
        org.joda.time.DurationFieldType durationFieldType17 = weeks12.getFieldType();
        org.joda.time.Weeks weeks18 = weeks8.minus(weeks12);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.parseWeeks("P-3W");
        boolean boolean21 = weeks12.isLessThan(weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks26 = weeks23.minus(1030);
        org.joda.time.Weeks weeks27 = weeks22.plus(weeks23);
        boolean boolean28 = weeks4.isGreaterThan(weeks23);
        org.joda.time.Duration duration29 = weeks23.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-4W" + "'", str6, "P-4W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration29);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        int int7 = weeks2.size();
        org.joda.time.Weeks weeks9 = weeks2.dividedBy((int) (byte) 10);
        org.joda.time.Weeks weeks11 = weeks2.minus(101);
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType13 = weeks11.getFieldType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(durationFieldType13);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks42 = null;
        org.joda.time.Weeks weeks43 = weeks35.minus(weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks46 = weeks44.plus(900);
        org.joda.time.Period period47 = weeks44.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(period47);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P2W");
        org.joda.time.DurationFieldType durationFieldType3 = weeks1.getFieldType((int) (byte) 0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(durationFieldType3);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.DurationFieldType durationFieldType10 = weeks9.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(durationFieldType10);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        int int2 = weeks0.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Period period6 = weeks2.toPeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks2.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks2.getPeriodType();
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeksIn(readableInterval9);
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        boolean boolean12 = weeks2.isGreaterThan(weeks10);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        boolean boolean15 = weeks13.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        java.lang.String str20 = weeks19.toString();
        boolean boolean21 = weeks13.isLessThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.MutablePeriod mutablePeriod25 = weeks24.toMutablePeriod();
        org.joda.time.Weeks weeks26 = weeks22.plus(weeks24);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((-4));
        org.joda.time.DurationFieldType durationFieldType30 = weeks29.getFieldType();
        boolean boolean31 = weeks27.equals((java.lang.Object) durationFieldType30);
        int int32 = weeks2.get(durationFieldType30);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P-3W" + "'", str20, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeks((-1));
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.Weeks weeks10 = weeks8.dividedBy((int) '4');
        int int11 = weeks8.size();
        org.joda.time.Period period12 = weeks8.toPeriod();
        org.joda.time.DurationFieldType durationFieldType13 = weeks8.getFieldType();
        org.joda.time.Weeks weeks14 = weeks4.minus(weeks8);
        org.joda.time.Weeks weeks16 = weeks14.minus((-3));
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.MutablePeriod mutablePeriod28 = weeks27.toMutablePeriod();
        org.joda.time.Weeks weeks29 = weeks23.plus(weeks27);
        org.joda.time.Weeks weeks30 = weeks16.plus(weeks23);
        org.joda.time.Weeks weeks31 = weeks1.plus(weeks16);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        org.joda.time.Weeks weeks40 = weeks32.plus(weeks38);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.DurationFieldType durationFieldType44 = weeks43.getFieldType();
        int int45 = weeks40.get(durationFieldType44);
        org.joda.time.Weeks weeks47 = weeks40.multipliedBy((int) '4');
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.TWO;
        int int49 = weeks48.size();
        org.joda.time.Weeks weeks51 = weeks48.multipliedBy((int) (short) 1);
        boolean boolean52 = weeks40.equals((java.lang.Object) weeks48);
        boolean boolean53 = weeks1.isLessThan(weeks40);
        org.joda.time.PeriodType periodType54 = weeks1.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(periodType54);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks24 = weeks19.dividedBy((int) 'a');
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks25.plus(weeks26);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        java.lang.String str40 = weeks39.toString();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.ONE;
        int int42 = weeks39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks41);
        boolean boolean43 = weeks25.isGreaterThan(weeks41);
        int int44 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.DurationFieldType durationFieldType45 = weeks24.getFieldType();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks47 = weeks24.plus(weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks52 = weeks50.dividedBy((int) '4');
        int int53 = weeks50.size();
        org.joda.time.Period period54 = weeks50.toPeriod();
        org.joda.time.DurationFieldType durationFieldType55 = weeks50.getFieldType();
        org.joda.time.Weeks weeks56 = weeks46.plus(weeks50);
        boolean boolean57 = weeks18.isGreaterThan(weeks56);
        org.joda.time.Weeks weeks59 = weeks56.minus(0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "P-3W" + "'", str40, "P-3W");
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(weeks59);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 0);
        java.lang.String str2 = weeks1.toString();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType4 = weeks3.getFieldType();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks11.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.MutablePeriod mutablePeriod17 = weeks16.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks14.plus(weeks16);
        org.joda.time.Weeks weeks19 = weeks3.plus(weeks18);
        org.joda.time.Weeks weeks21 = weeks18.plus((int) (short) 10);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.DurationFieldType durationFieldType25 = weeks24.getFieldType();
        org.joda.time.DurationFieldType durationFieldType27 = weeks24.getFieldType(0);
        int int28 = weeks18.get(durationFieldType27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks31.dividedBy((int) '4');
        org.joda.time.Weeks weeks35 = weeks31.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks42.negated();
        org.joda.time.Weeks weeks46 = weeks35.plus(weeks45);
        int int47 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.Weeks weeks48 = weeks1.minus(weeks35);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "P0W" + "'", str2, "P0W");
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(weeks48);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = weeks19.getFieldType();
        int int21 = weeks16.get(durationFieldType20);
        org.joda.time.Weeks weeks23 = weeks16.minus((int) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod24 = weeks23.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = weeks4.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((-1));
        int int9 = weeks8.size();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks14 = weeks12.dividedBy((int) '4');
        int int15 = weeks12.size();
        org.joda.time.Period period16 = weeks12.toPeriod();
        org.joda.time.DurationFieldType durationFieldType17 = weeks12.getFieldType();
        org.joda.time.Weeks weeks18 = weeks8.minus(weeks12);
        boolean boolean19 = weeks6.isGreaterThan(weeks18);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks4.getWeeks();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((-1));
        int int8 = weeks7.size();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Period period15 = weeks11.toPeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks11.getFieldType();
        org.joda.time.Weeks weeks17 = weeks7.minus(weeks11);
        org.joda.time.Weeks weeks19 = weeks17.minus((-3));
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = weeks30.toMutablePeriod();
        org.joda.time.Weeks weeks32 = weeks26.plus(weeks30);
        org.joda.time.Weeks weeks33 = weeks19.plus(weeks26);
        org.joda.time.Weeks weeks34 = weeks4.minus(weeks33);
        org.joda.time.Weeks weeks35 = null;
        org.joda.time.Weeks weeks36 = weeks33.plus(weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        int int43 = weeks40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        java.lang.String str44 = weeks40.toString();
        org.joda.time.Weeks weeks46 = weeks40.dividedBy(1);
        org.joda.time.Weeks weeks48 = weeks40.minus((int) 'a');
        org.joda.time.Weeks weeks50 = weeks48.minus((int) (short) 1);
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = weeks36.minus(weeks50);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks55 = weeks54.negated();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks55);
        org.joda.time.DurationFieldType durationFieldType57 = weeks56.getFieldType();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType59 = weeks58.getFieldType();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        boolean boolean62 = weeks60.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks64 = weeks63.negated();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks64);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks64);
        java.lang.String str67 = weeks66.toString();
        boolean boolean68 = weeks60.isLessThan(weeks66);
        org.joda.time.Weeks weeks69 = weeks66.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks71 = weeks70.negated();
        org.joda.time.MutablePeriod mutablePeriod72 = weeks71.toMutablePeriod();
        org.joda.time.Weeks weeks73 = weeks69.plus(weeks71);
        org.joda.time.Weeks weeks74 = weeks58.plus(weeks73);
        org.joda.time.Weeks weeks76 = weeks73.dividedBy((int) (short) 100);
        boolean boolean77 = weeks56.isGreaterThan(weeks73);
        org.joda.time.DurationFieldType durationFieldType78 = weeks56.getFieldType();
        boolean boolean79 = weeks53.isGreaterThan(weeks56);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "P-3W" + "'", str67, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(mutablePeriod72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Weeks weeks11 = weeks4.plus(weeks7);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.DurationFieldType durationFieldType17 = weeks16.getFieldType();
        org.joda.time.DurationFieldType durationFieldType19 = weeks16.getFieldType(0);
        boolean boolean20 = weeks13.isSupported(durationFieldType19);
        boolean boolean21 = weeks7.isSupported(durationFieldType19);
        org.joda.time.Weeks weeks23 = weeks7.dividedBy((-2147483648));
        org.joda.time.PeriodType periodType24 = weeks7.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(periodType24);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = weeks11.minus(weeks12);
        boolean boolean15 = weeks0.equals((java.lang.Object) weeks14);
        org.joda.time.Duration duration16 = weeks14.toStandardDuration();
        org.joda.time.Period period17 = weeks14.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = weeks10.minus(10);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        boolean boolean27 = weeks17.equals((java.lang.Object) weeks24);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        org.joda.time.Weeks weeks36 = weeks28.plus(weeks34);
        org.joda.time.Weeks weeks38 = weeks34.dividedBy(3);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period40 = weeks39.toPeriod();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks43.dividedBy((int) '4');
        org.joda.time.Weeks weeks47 = weeks43.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks48 = weeks39.minus(weeks47);
        boolean boolean49 = weeks34.equals((java.lang.Object) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        org.joda.time.Weeks weeks54 = weeks52.dividedBy((int) '4');
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks59 = weeks57.dividedBy((int) '4');
        int int60 = weeks57.size();
        org.joda.time.Weeks weeks61 = weeks54.plus(weeks57);
        boolean boolean62 = weeks48.isLessThan(weeks57);
        boolean boolean63 = weeks17.equals((java.lang.Object) boolean62);
        org.joda.time.PeriodType periodType64 = weeks17.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(periodType64);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.weeksIn(readableInterval23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        boolean boolean33 = weeks25.isLessThan(weeks31);
        org.joda.time.Weeks weeks34 = weeks24.minus(weeks31);
        org.joda.time.Weeks weeks36 = weeks34.plus((int) 'a');
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = weeks38.minus(weeks39);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType43 = weeks42.getPeriodType();
        int int44 = weeks41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks36.plus(weeks42);
        org.joda.time.DurationFieldType durationFieldType46 = weeks36.getFieldType();
        boolean boolean47 = weeks22.isSupported(durationFieldType46);
        org.joda.time.PeriodType periodType48 = weeks22.getPeriodType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(periodType48);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks3 = weeks1.multipliedBy(1);
        org.joda.time.Weeks weeks5 = weeks3.dividedBy((int) (short) 1);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType7 = weeks6.getPeriodType();
        org.joda.time.Weeks weeks9 = weeks6.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks11 = weeks6.dividedBy((int) 'a');
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        boolean boolean15 = weeks13.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        java.lang.String str20 = weeks19.toString();
        boolean boolean21 = weeks13.isLessThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks12.plus(weeks13);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.ONE;
        int int29 = weeks26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        boolean boolean30 = weeks12.isGreaterThan(weeks28);
        int int31 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks12);
        java.lang.String str32 = weeks12.toString();
        org.joda.time.MutablePeriod mutablePeriod33 = weeks12.toMutablePeriod();
        int int34 = weeks12.size();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType36 = weeks35.getPeriodType();
        org.joda.time.Weeks weeks38 = weeks35.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks40 = weeks35.dividedBy((int) 'a');
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = weeks41.plus(weeks42);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        java.lang.String str56 = weeks55.toString();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.ONE;
        int int58 = weeks55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks57);
        boolean boolean59 = weeks41.isGreaterThan(weeks57);
        int int60 = weeks40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks41);
        org.joda.time.DurationFieldType durationFieldType61 = weeks40.getFieldType();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks63 = weeks40.plus(weeks62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks65 = weeks64.negated();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        org.joda.time.Weeks weeks68 = weeks66.dividedBy((int) '4');
        int int69 = weeks66.size();
        org.joda.time.Period period70 = weeks66.toPeriod();
        org.joda.time.DurationFieldType durationFieldType71 = weeks66.getFieldType();
        org.joda.time.Weeks weeks72 = weeks62.plus(weeks66);
        org.joda.time.Weeks weeks73 = weeks12.plus(weeks72);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType75 = weeks74.getFieldType();
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType77 = weeks76.getPeriodType();
        org.joda.time.Weeks weeks79 = weeks76.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks81 = weeks76.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod82 = weeks76.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType83 = weeks76.getFieldType();
        org.joda.time.PeriodType periodType84 = weeks76.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType85 = weeks76.getFieldType();
        org.joda.time.Weeks weeks86 = weeks76.negated();
        org.joda.time.Weeks weeks88 = weeks76.multipliedBy(300);
        boolean boolean89 = weeks74.equals((java.lang.Object) weeks76);
        org.joda.time.Weeks weeks91 = weeks74.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType92 = weeks74.getFieldType();
        boolean boolean93 = weeks72.isSupported(durationFieldType92);
        boolean boolean94 = weeks3.isSupported(durationFieldType92);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P-3W" + "'", str20, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P1W" + "'", str32, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(mutablePeriod82);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertNotNull(durationFieldType92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeks((-1));
        int int22 = weeks21.size();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks27 = weeks25.dividedBy((int) '4');
        int int28 = weeks25.size();
        org.joda.time.Period period29 = weeks25.toPeriod();
        org.joda.time.DurationFieldType durationFieldType30 = weeks25.getFieldType();
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks25);
        int int32 = weeks31.size();
        org.joda.time.Weeks weeks33 = weeks0.minus(weeks31);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType35 = weeks0.getFieldType(200);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 200");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(weeks33);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = weeks0.get(durationFieldType3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = weeks6.plus(weeks12);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks20.plus((int) (short) -1);
        int int24 = weeks6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks6.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod27 = weeks26.toMutablePeriod();
        org.joda.time.Weeks weeks28 = weeks26.negated();
        int int29 = weeks26.getWeeks();
        boolean boolean30 = weeks5.isLessThan(weeks26);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 103 + "'", int29 == 103);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        int int7 = weeks5.size();
        org.joda.time.Period period8 = weeks5.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod9 = weeks5.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType13 = weeks12.getFieldType();
        int int14 = weeks1.get(durationFieldType13);
        org.joda.time.MutablePeriod mutablePeriod15 = weeks1.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod15);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        boolean boolean5 = weeks3.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        java.lang.String str10 = weeks9.toString();
        org.joda.time.Weeks weeks11 = weeks3.plus(weeks9);
        org.joda.time.Weeks weeks13 = weeks9.dividedBy(3);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period15 = weeks14.toPeriod();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks18.dividedBy((int) '4');
        org.joda.time.Weeks weeks22 = weeks18.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks23 = weeks14.minus(weeks22);
        boolean boolean24 = weeks9.equals((java.lang.Object) weeks23);
        boolean boolean25 = weeks1.isLessThan(weeks23);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType27 = weeks1.getFieldType(29);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 29");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "P-3W" + "'", str10, "P-3W");
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        boolean boolean17 = weeks9.isLessThan(weeks15);
        org.joda.time.Weeks weeks18 = weeks8.plus(weeks9);
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = weeks21.minus(weeks22);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.PeriodType periodType27 = weeks25.getPeriodType();
        boolean boolean28 = weeks21.isGreaterThan(weeks25);
        org.joda.time.Weeks weeks30 = weeks25.minus((int) (byte) 0);
        org.joda.time.Weeks weeks31 = weeks18.plus(weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType33 = weeks32.getPeriodType();
        org.joda.time.Weeks weeks35 = weeks32.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks37 = weeks32.dividedBy((int) 'a');
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        boolean boolean41 = weeks39.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        boolean boolean47 = weeks39.isLessThan(weeks45);
        org.joda.time.Weeks weeks48 = weeks38.plus(weeks39);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        int int55 = weeks52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks54);
        boolean boolean56 = weeks38.isGreaterThan(weeks54);
        int int57 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks38);
        org.joda.time.DurationFieldType durationFieldType58 = weeks37.getFieldType();
        org.joda.time.Weeks weeks59 = weeks18.plus(weeks37);
        boolean boolean60 = weeks0.isGreaterThan(weeks59);
        int int61 = weeks59.size();
        int int62 = weeks59.getWeeks();
        org.joda.time.PeriodType periodType63 = weeks59.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 4 + "'", int62 == 4);
        org.junit.Assert.assertNotNull(periodType63);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks19.dividedBy((int) '4');
        int int22 = weeks19.size();
        org.joda.time.Weeks weeks23 = weeks19.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks26.dividedBy((int) '4');
        int int29 = weeks26.size();
        org.joda.time.Weeks weeks30 = weeks26.negated();
        boolean boolean31 = weeks23.isGreaterThan(weeks26);
        org.joda.time.DurationFieldType durationFieldType32 = weeks23.getFieldType();
        int int33 = weeks16.get(durationFieldType32);
        int int34 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.Weeks weeks36 = weeks16.minus(9);
        java.lang.String str37 = weeks36.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P91W" + "'", str37, "P91W");
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Weeks weeks11 = weeks4.plus(weeks7);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.DurationFieldType durationFieldType17 = weeks16.getFieldType();
        org.joda.time.DurationFieldType durationFieldType19 = weeks16.getFieldType(0);
        boolean boolean20 = weeks13.isSupported(durationFieldType19);
        boolean boolean21 = weeks7.isSupported(durationFieldType19);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeks((int) (byte) 1);
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        boolean boolean33 = weeks25.isLessThan(weeks31);
        org.joda.time.Weeks weeks34 = weeks31.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.MutablePeriod mutablePeriod37 = weeks36.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks34.plus(weeks36);
        int int39 = weeks36.size();
        org.joda.time.Weeks weeks41 = weeks36.minus((int) (byte) -1);
        org.joda.time.Weeks weeks43 = weeks36.dividedBy(100);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType45 = weeks44.getPeriodType();
        org.joda.time.Weeks weeks47 = weeks44.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        boolean boolean51 = weeks49.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        java.lang.String str56 = weeks55.toString();
        boolean boolean57 = weeks49.isLessThan(weeks55);
        org.joda.time.Weeks weeks58 = weeks48.plus(weeks49);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks60);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks60);
        java.lang.String str63 = weeks62.toString();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.ONE;
        int int65 = weeks62.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks64);
        boolean boolean66 = weeks48.isGreaterThan(weeks64);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType68 = weeks67.getFieldType();
        int int69 = weeks64.get(durationFieldType68);
        boolean boolean70 = weeks44.isSupported(durationFieldType68);
        boolean boolean71 = weeks36.isSupported(durationFieldType68);
        int int72 = weeks24.get(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType73 = weeks24.getFieldType();
        int int74 = weeks7.get(durationFieldType73);
        org.joda.time.Weeks weeks76 = weeks7.multipliedBy(29);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "P-3W" + "'", str63, "P-3W");
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-3) + "'", int74 == (-3));
        org.junit.Assert.assertNotNull(weeks76);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType10 = weeks0.getFieldType(0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType10);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType(0);
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = weeks10.minus(weeks11);
        org.joda.time.DurationFieldType durationFieldType14 = weeks11.getFieldType();
        boolean boolean15 = weeks1.isLessThan(weeks11);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((-1));
        int int18 = weeks17.size();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Period period25 = weeks21.toPeriod();
        org.joda.time.DurationFieldType durationFieldType26 = weeks21.getFieldType();
        org.joda.time.Weeks weeks27 = weeks17.minus(weeks21);
        org.joda.time.Weeks weeks29 = weeks17.minus((int) (byte) 100);
        org.joda.time.Duration duration30 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks31 = weeks1.minus(weeks17);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType33 = weeks32.getPeriodType();
        org.joda.time.Weeks weeks35 = weeks32.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        boolean boolean39 = weeks37.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        boolean boolean45 = weeks37.isLessThan(weeks43);
        org.joda.time.Weeks weeks46 = weeks36.plus(weeks37);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.ONE;
        int int53 = weeks50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks52);
        boolean boolean54 = weeks36.isGreaterThan(weeks52);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType56 = weeks55.getFieldType();
        int int57 = weeks52.get(durationFieldType56);
        boolean boolean58 = weeks32.isSupported(durationFieldType56);
        org.joda.time.Weeks weeks60 = weeks32.dividedBy((-1));
        boolean boolean61 = weeks1.isGreaterThan(weeks32);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks65 = weeks32.plus(weeks63);
        org.joda.time.Weeks weeks66 = weeks32.negated();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.PeriodType periodType4 = weeks3.getPeriodType();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(300);
        org.joda.time.Weeks weeks7 = null;
        org.joda.time.Weeks weeks8 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks10 = weeks8.dividedBy((-4));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P0W");
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType3 = weeks2.getPeriodType();
        org.joda.time.Weeks weeks5 = weeks2.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks7 = weeks2.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = weeks2.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = weeks2.getFieldType();
        org.joda.time.PeriodType periodType10 = weeks2.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType11 = weeks2.getFieldType();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        int int14 = weeks13.size();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks19 = weeks17.dividedBy((int) '4');
        int int20 = weeks17.size();
        org.joda.time.Period period21 = weeks17.toPeriod();
        org.joda.time.DurationFieldType durationFieldType22 = weeks17.getFieldType();
        org.joda.time.Weeks weeks23 = weeks13.minus(weeks17);
        org.joda.time.Weeks weeks25 = weeks13.minus((int) (byte) 100);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.DurationFieldType durationFieldType31 = weeks30.getFieldType();
        org.joda.time.DurationFieldType durationFieldType33 = weeks30.getFieldType(0);
        boolean boolean34 = weeks27.isSupported(durationFieldType33);
        boolean boolean35 = weeks13.equals((java.lang.Object) weeks27);
        boolean boolean36 = weeks2.isLessThan(weeks27);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks41 = weeks39.dividedBy((int) '4');
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks46 = weeks44.dividedBy((int) '4');
        int int47 = weeks44.size();
        org.joda.time.Weeks weeks48 = weeks41.plus(weeks44);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.DurationFieldType durationFieldType54 = weeks53.getFieldType();
        org.joda.time.DurationFieldType durationFieldType56 = weeks53.getFieldType(0);
        boolean boolean57 = weeks50.isSupported(durationFieldType56);
        boolean boolean58 = weeks44.isSupported(durationFieldType56);
        org.joda.time.PeriodType periodType59 = weeks44.getPeriodType();
        boolean boolean60 = weeks27.isLessThan(weeks44);
        org.joda.time.Weeks weeks62 = weeks27.plus((-3));
        boolean boolean63 = weeks1.equals((java.lang.Object) weeks27);
        java.lang.Class<?> wildcardClass64 = weeks1.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = weeks3.dividedBy(1);
        org.joda.time.Weeks weeks11 = weeks3.minus((int) 'a');
        org.joda.time.Weeks weeks13 = weeks11.minus((int) (short) 1);
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.DurationFieldType durationFieldType18 = weeks17.getFieldType();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = weeks19.getFieldType();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        boolean boolean29 = weeks21.isLessThan(weeks27);
        org.joda.time.Weeks weeks30 = weeks27.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.MutablePeriod mutablePeriod33 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks34 = weeks30.plus(weeks32);
        org.joda.time.Weeks weeks35 = weeks19.plus(weeks34);
        org.joda.time.Weeks weeks37 = weeks34.dividedBy((int) (short) 100);
        boolean boolean38 = weeks17.isGreaterThan(weeks34);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = weeks42.minus(weeks43);
        org.joda.time.DurationFieldType durationFieldType46 = weeks43.getFieldType();
        boolean boolean47 = weeks40.isSupported(durationFieldType46);
        int int48 = weeks17.get(durationFieldType46);
        boolean boolean49 = weeks13.isSupported(durationFieldType46);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = weeks13.getValue((-55));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -55");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-3) + "'", int48 == (-3));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = weeks3.dividedBy(1);
        org.joda.time.Weeks weeks11 = weeks3.minus((int) 'a');
        org.joda.time.Weeks weeks13 = weeks11.minus((int) (short) 1);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        boolean boolean17 = weeks15.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        boolean boolean23 = weeks15.isLessThan(weeks21);
        org.joda.time.Weeks weeks24 = weeks14.plus(weeks15);
        org.joda.time.Weeks weeks26 = weeks24.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks27 = weeks11.minus(weeks26);
        int int28 = weeks26.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType();
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.Weeks weeks10 = weeks1.multipliedBy((int) (short) 100);
        java.lang.String str11 = weeks1.toString();
        org.joda.time.Weeks weeks13 = weeks1.minus(3);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        int int19 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.Weeks weeks20 = weeks13.minus(weeks16);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        org.joda.time.Weeks weeks27 = weeks23.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = weeks34.negated();
        org.joda.time.Weeks weeks38 = weeks27.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks43 = weeks41.plus(9);
        org.joda.time.Weeks weeks44 = weeks37.minus(weeks41);
        org.joda.time.Weeks weeks45 = weeks20.minus(weeks44);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P32W" + "'", str11, "P32W");
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = weeks10.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = weeks10.isSupported(durationFieldType15);
        org.joda.time.Weeks weeks17 = weeks9.minus(weeks10);
        org.joda.time.Weeks weeks19 = weeks9.dividedBy(10);
        org.joda.time.DurationFieldType durationFieldType20 = weeks19.getFieldType();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        int int27 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        java.lang.String str28 = weeks24.toString();
        org.joda.time.Period period29 = weeks24.toPeriod();
        org.joda.time.PeriodType periodType30 = weeks24.getPeriodType();
        org.joda.time.Weeks weeks31 = weeks19.minus(weeks24);
        java.lang.Class<?> wildcardClass32 = weeks19.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = weeks11.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = weeks14.negated();
        org.joda.time.DurationFieldType durationFieldType17 = weeks16.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(durationFieldType17);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Period period11 = weeks0.toPeriod();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks16 = weeks14.dividedBy((int) '4');
        org.joda.time.Weeks weeks18 = weeks14.multipliedBy((int) (short) 0);
        int int19 = weeks14.size();
        boolean boolean20 = weeks0.isLessThan(weeks14);
        java.lang.String str21 = weeks0.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P1W" + "'", str21, "P1W");
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        boolean boolean29 = weeks21.isLessThan(weeks27);
        org.joda.time.Weeks weeks30 = weeks20.plus(weeks21);
        int int31 = weeks21.size();
        org.joda.time.DurationFieldType durationFieldType32 = weeks21.getFieldType();
        org.joda.time.Weeks weeks33 = weeks13.plus(weeks21);
        boolean boolean34 = weeks8.isGreaterThan(weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks35.plus(weeks36);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        boolean boolean53 = weeks35.isGreaterThan(weeks51);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType55 = weeks54.getFieldType();
        int int56 = weeks51.get(durationFieldType55);
        org.joda.time.Weeks weeks57 = weeks33.minus(weeks51);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.weeks((-1));
        int int60 = weeks59.size();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks62 = weeks61.negated();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        org.joda.time.Weeks weeks65 = weeks63.dividedBy((int) '4');
        int int66 = weeks63.size();
        org.joda.time.Period period67 = weeks63.toPeriod();
        org.joda.time.DurationFieldType durationFieldType68 = weeks63.getFieldType();
        org.joda.time.Weeks weeks69 = weeks59.minus(weeks63);
        org.joda.time.MutablePeriod mutablePeriod70 = weeks69.toMutablePeriod();
        org.joda.time.Weeks weeks71 = weeks69.negated();
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks74 = weeks73.negated();
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks74);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks74);
        int int77 = weeks72.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks74);
        org.joda.time.DurationFieldType durationFieldType78 = weeks72.getFieldType();
        int int79 = weeks71.get(durationFieldType78);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.THREE;
        boolean boolean82 = weeks80.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks84 = weeks83.negated();
        org.joda.time.Weeks weeks85 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks84);
        org.joda.time.Weeks weeks86 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks84);
        java.lang.String str87 = weeks86.toString();
        boolean boolean88 = weeks80.isLessThan(weeks86);
        org.joda.time.Weeks weeks89 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks90 = weeks89.negated();
        org.joda.time.MutablePeriod mutablePeriod91 = weeks90.toMutablePeriod();
        org.joda.time.Weeks weeks92 = weeks86.plus(weeks90);
        int int93 = weeks90.getWeeks();
        org.joda.time.Weeks weeks94 = weeks71.minus(weeks90);
        org.joda.time.Weeks weeks95 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks90);
        org.joda.time.Weeks weeks96 = weeks57.minus(weeks95);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-2) + "'", int79 == (-2));
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "P-3W" + "'", str87, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(mutablePeriod91);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-3) + "'", int93 == (-3));
        org.junit.Assert.assertNotNull(weeks94);
        org.junit.Assert.assertNotNull(weeks95);
        org.junit.Assert.assertNotNull(weeks96);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks11.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        int int19 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.DurationFieldType durationFieldType20 = weeks14.getFieldType();
        int int21 = weeks13.get(durationFieldType20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.MutablePeriod mutablePeriod33 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks34 = weeks28.plus(weeks32);
        int int35 = weeks32.getWeeks();
        org.joda.time.Weeks weeks36 = weeks13.minus(weeks32);
        org.joda.time.Weeks weeks38 = weeks32.minus((-10));
        java.lang.Class<?> wildcardClass39 = weeks38.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2) + "'", int21 == (-2));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-3) + "'", int35 == (-3));
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = weeks10.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = weeks10.isSupported(durationFieldType15);
        org.joda.time.Weeks weeks17 = weeks9.minus(weeks10);
        org.joda.time.Weeks weeks19 = weeks9.dividedBy(10);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks22 = weeks9.multipliedBy((-100));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks12 = weeks2.multipliedBy((int) (short) -1);
        boolean boolean13 = weeks1.isLessThan(weeks2);
        int int14 = weeks1.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-3) + "'", int14 == (-3));
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks12 = weeks10.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = weeks14.minus(weeks15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.PeriodType periodType20 = weeks18.getPeriodType();
        boolean boolean21 = weeks14.isGreaterThan(weeks18);
        org.joda.time.Weeks weeks23 = weeks18.minus((int) (byte) 0);
        org.joda.time.Duration duration24 = weeks23.toStandardDuration();
        boolean boolean25 = weeks10.equals((java.lang.Object) duration24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = weeks26.plus(weeks32);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        int int41 = weeks38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks40);
        org.joda.time.Weeks weeks43 = weeks40.plus((int) (short) -1);
        int int44 = weeks26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks43);
        org.joda.time.Weeks weeks46 = weeks26.plus((int) (short) 100);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = weeks48.minus(weeks49);
        java.lang.String str52 = weeks51.toString();
        int int53 = weeks26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        org.joda.time.DurationFieldType durationFieldType55 = weeks51.getFieldType(0);
        java.lang.String str56 = weeks51.toString();
        int int57 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        int int62 = weeks61.size();
        java.lang.String str63 = weeks61.toString();
        java.lang.String str64 = weeks61.toString();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks69 = weeks66.minus((int) '4');
        org.joda.time.Weeks weeks70 = weeks61.minus(weeks66);
        org.joda.time.Weeks weeks72 = weeks61.minus((int) (byte) 100);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks74 = weeks73.negated();
        org.joda.time.Weeks weeks75 = weeks72.plus(weeks73);
        int int76 = weeks72.getWeeks();
        boolean boolean77 = weeks51.isGreaterThan(weeks72);
        org.joda.time.Weeks weeks78 = null;
        org.joda.time.Weeks weeks79 = weeks51.minus(weeks78);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "P-4W" + "'", str52, "P-4W");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-4W" + "'", str56, "P-4W");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "P-3W" + "'", str63, "P-3W");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-103) + "'", int76 == (-103));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(weeks79);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType6 = weeks5.getPeriodType();
        int int7 = weeks4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType9 = weeks8.getPeriodType();
        org.joda.time.Weeks weeks11 = weeks8.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks13 = weeks8.dividedBy((int) 'a');
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        boolean boolean17 = weeks15.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        boolean boolean23 = weeks15.isLessThan(weeks21);
        org.joda.time.Weeks weeks24 = weeks14.plus(weeks15);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        int int31 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks30);
        boolean boolean32 = weeks14.isGreaterThan(weeks30);
        int int33 = weeks13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        boolean boolean42 = weeks34.isLessThan(weeks40);
        org.joda.time.Weeks weeks43 = weeks40.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.MutablePeriod mutablePeriod46 = weeks45.toMutablePeriod();
        org.joda.time.Weeks weeks47 = weeks43.plus(weeks45);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks49 = weeks13.minus(weeks43);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.weeks((-1));
        int int52 = weeks51.size();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        org.joda.time.Weeks weeks57 = weeks55.dividedBy((int) '4');
        int int58 = weeks55.size();
        org.joda.time.Period period59 = weeks55.toPeriod();
        org.joda.time.DurationFieldType durationFieldType60 = weeks55.getFieldType();
        org.joda.time.Weeks weeks61 = weeks51.minus(weeks55);
        org.joda.time.Weeks weeks63 = weeks51.minus((int) (byte) 100);
        org.joda.time.Duration duration64 = weeks51.toStandardDuration();
        org.joda.time.Weeks weeks65 = weeks13.minus(weeks51);
        org.joda.time.Weeks weeks67 = weeks51.plus((int) (short) -1);
        org.joda.time.Weeks weeks68 = weeks4.minus(weeks51);
        org.joda.time.Weeks weeks70 = weeks4.dividedBy((-55));
        org.joda.time.ReadableInterval readableInterval71 = null;
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.weeksIn(readableInterval71);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        boolean boolean75 = weeks73.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks77 = weeks76.negated();
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        java.lang.String str80 = weeks79.toString();
        boolean boolean81 = weeks73.isLessThan(weeks79);
        org.joda.time.Weeks weeks82 = weeks72.minus(weeks79);
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks85 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks86 = weeks85.negated();
        org.joda.time.MutablePeriod mutablePeriod87 = weeks86.toMutablePeriod();
        org.joda.time.Weeks weeks89 = weeks86.multipliedBy(0);
        org.joda.time.Weeks weeks90 = weeks84.minus(weeks89);
        int int91 = weeks82.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks90);
        org.joda.time.Weeks weeks92 = weeks90.negated();
        org.joda.time.MutablePeriod mutablePeriod93 = weeks92.toMutablePeriod();
        boolean boolean94 = weeks4.equals((java.lang.Object) weeks92);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "P-3W" + "'", str80, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(mutablePeriod87);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertNotNull(mutablePeriod93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.DurationFieldType durationFieldType24 = weeks23.getFieldType();
        org.joda.time.DurationFieldType durationFieldType26 = weeks23.getFieldType(0);
        boolean boolean27 = weeks20.isSupported(durationFieldType26);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = weeks29.minus(weeks30);
        org.joda.time.DurationFieldType durationFieldType33 = weeks30.getFieldType();
        boolean boolean34 = weeks20.isLessThan(weeks30);
        org.joda.time.Weeks weeks36 = weeks30.dividedBy(3);
        boolean boolean37 = weeks15.equals((java.lang.Object) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType39 = weeks38.getFieldType();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType41 = weeks40.getPeriodType();
        org.joda.time.Weeks weeks43 = weeks40.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks45 = weeks40.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod46 = weeks40.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType47 = weeks40.getFieldType();
        org.joda.time.PeriodType periodType48 = weeks40.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType49 = weeks40.getFieldType();
        org.joda.time.Weeks weeks50 = weeks40.negated();
        org.joda.time.Weeks weeks52 = weeks40.multipliedBy(300);
        boolean boolean53 = weeks38.equals((java.lang.Object) weeks40);
        org.joda.time.PeriodType periodType54 = weeks38.getPeriodType();
        boolean boolean55 = weeks36.equals((java.lang.Object) weeks38);
        org.joda.time.ReadableInterval readableInterval56 = null;
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.weeksIn(readableInterval56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        boolean boolean60 = weeks58.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks62 = weeks61.negated();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        java.lang.String str65 = weeks64.toString();
        boolean boolean66 = weeks58.isLessThan(weeks64);
        org.joda.time.Weeks weeks67 = weeks57.minus(weeks64);
        org.joda.time.Weeks weeks69 = weeks67.plus((int) 'a');
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.Weeks weeks74 = weeks71.minus(weeks72);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType76 = weeks75.getPeriodType();
        int int77 = weeks74.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks75);
        org.joda.time.Weeks weeks78 = weeks69.plus(weeks75);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType80 = weeks79.getPeriodType();
        java.lang.String str81 = weeks79.toString();
        org.joda.time.DurationFieldType durationFieldType82 = weeks79.getFieldType();
        boolean boolean83 = weeks75.isLessThan(weeks79);
        org.joda.time.Weeks weeks84 = weeks36.minus(weeks79);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "P-3W" + "'", str65, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "P3W" + "'", str81, "P3W");
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(weeks84);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.DurationFieldType durationFieldType12 = weeks11.getFieldType();
        int int13 = weeks8.get(durationFieldType12);
        org.joda.time.Weeks weeks15 = weeks8.multipliedBy((int) '4');
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.TWO;
        int int17 = weeks16.size();
        org.joda.time.Weeks weeks19 = weeks16.multipliedBy((int) (short) 1);
        boolean boolean20 = weeks8.equals((java.lang.Object) weeks16);
        org.joda.time.Period period21 = weeks8.toPeriod();
        org.joda.time.Weeks weeks23 = weeks8.dividedBy((int) (byte) 10);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(weeks23);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks17.plus((int) (byte) 1);
        boolean boolean22 = weeks20.equals((java.lang.Object) 1.0d);
        org.joda.time.Weeks weeks24 = weeks20.plus((int) (byte) 100);
        org.joda.time.Weeks weeks25 = weeks20.negated();
        java.lang.Class<?> wildcardClass26 = weeks25.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Period period11 = weeks0.toPeriod();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks16 = weeks14.dividedBy((int) '4');
        org.joda.time.Weeks weeks18 = weeks14.multipliedBy((int) (short) 0);
        int int19 = weeks14.size();
        boolean boolean20 = weeks0.isLessThan(weeks14);
        org.joda.time.PeriodType periodType21 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.ONE;
        int int28 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks27);
        org.joda.time.Weeks weeks30 = weeks27.plus((int) (short) -1);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType32 = weeks31.getPeriodType();
        org.joda.time.Weeks weeks34 = weeks31.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks36 = weeks31.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod37 = weeks31.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType38 = weeks31.getFieldType();
        org.joda.time.PeriodType periodType39 = weeks31.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType40 = weeks31.getFieldType();
        boolean boolean41 = weeks30.isSupported(durationFieldType40);
        org.joda.time.Period period42 = weeks30.toPeriod();
        org.joda.time.DurationFieldType durationFieldType43 = weeks30.getFieldType();
        boolean boolean44 = weeks0.isSupported(durationFieldType43);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = weeks1.minus((int) (byte) 100);
        org.joda.time.Duration duration14 = weeks1.toStandardDuration();
        org.joda.time.PeriodType periodType15 = weeks1.getPeriodType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(periodType15);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(97);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType3 = weeks1.getFieldType((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.Weeks weeks24 = weeks22.minus(1030);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = weeks25.plus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        int int40 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks39.plus((int) (short) -1);
        int int43 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks25.plus((int) (short) 100);
        org.joda.time.Weeks weeks47 = weeks25.multipliedBy(3);
        int int48 = weeks47.getWeeks();
        int int49 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        org.joda.time.Weeks weeks51 = weeks24.plus((int) '4');
        org.joda.time.PeriodType periodType52 = weeks51.getPeriodType();
        java.lang.Class<?> wildcardClass53 = periodType52.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 9 + "'", int48 == 9);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks21 = weeks19.negated();
        org.joda.time.MutablePeriod mutablePeriod22 = weeks21.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int24 = weeks21.getValue((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = weeks11.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = weeks14.negated();
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.weeksIn(readableInterval17);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        boolean boolean27 = weeks19.isLessThan(weeks25);
        org.joda.time.Weeks weeks28 = weeks18.minus(weeks25);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.MutablePeriod mutablePeriod33 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks32.multipliedBy(0);
        org.joda.time.Weeks weeks36 = weeks30.minus(weeks35);
        int int37 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks36);
        org.joda.time.Weeks weeks38 = weeks36.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.parseWeeks("P-4W");
        boolean boolean41 = weeks38.equals((java.lang.Object) "P-4W");
        org.joda.time.Weeks weeks43 = weeks38.multipliedBy(0);
        int int44 = weeks38.getWeeks();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = weeks48.minus(weeks49);
        org.joda.time.DurationFieldType durationFieldType52 = weeks49.getFieldType();
        boolean boolean53 = weeks46.isSupported(durationFieldType52);
        org.joda.time.Weeks weeks55 = weeks46.multipliedBy((int) (short) 100);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        int int60 = weeks59.size();
        java.lang.String str61 = weeks59.toString();
        java.lang.String str62 = weeks59.toString();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks64);
        org.joda.time.Weeks weeks67 = weeks64.minus((int) '4');
        org.joda.time.Weeks weeks68 = weeks59.minus(weeks64);
        org.joda.time.Weeks weeks70 = weeks59.minus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType71 = weeks59.getFieldType();
        int int72 = weeks55.get(durationFieldType71);
        int int73 = weeks38.get(durationFieldType71);
        int int74 = weeks14.get(durationFieldType71);
        int int75 = weeks14.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "P-3W" + "'", str61, "P-3W");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 3200 + "'", int72 == 3200);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks16 = weeks11.minus((int) (byte) -1);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks17.plus(weeks18);
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = weeks30.minus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.PeriodType periodType36 = weeks34.getPeriodType();
        boolean boolean37 = weeks30.isGreaterThan(weeks34);
        org.joda.time.Weeks weeks39 = weeks34.minus((int) (byte) 0);
        org.joda.time.Weeks weeks40 = weeks27.plus(weeks39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType42 = weeks41.getPeriodType();
        org.joda.time.Weeks weeks44 = weeks41.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks46 = weeks41.dividedBy((int) 'a');
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        boolean boolean50 = weeks48.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        boolean boolean56 = weeks48.isLessThan(weeks54);
        org.joda.time.Weeks weeks57 = weeks47.plus(weeks48);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.ONE;
        int int64 = weeks61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks63);
        boolean boolean65 = weeks47.isGreaterThan(weeks63);
        int int66 = weeks46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        org.joda.time.DurationFieldType durationFieldType67 = weeks46.getFieldType();
        org.joda.time.Weeks weeks68 = weeks27.plus(weeks46);
        org.joda.time.Weeks weeks69 = weeks11.plus(weeks46);
        org.joda.time.Period period70 = weeks46.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(period70);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P-2W");
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = weeks5.get(durationFieldType6);
        org.joda.time.Weeks weeks9 = weeks5.plus((-1));
        int int10 = weeks1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks9);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        int int24 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        java.lang.String str25 = weeks21.toString();
        org.joda.time.Weeks weeks27 = weeks21.dividedBy(1);
        org.joda.time.Weeks weeks29 = weeks21.minus((int) 'a');
        int int30 = weeks17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks21);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.ONE;
        int int37 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks36);
        org.joda.time.Weeks weeks39 = weeks36.plus((int) (short) -1);
        org.joda.time.Weeks weeks41 = weeks36.multipliedBy((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType43 = weeks41.getFieldType((int) (byte) 0);
        org.joda.time.Weeks weeks45 = weeks41.multipliedBy((int) (byte) -1);
        boolean boolean46 = weeks17.equals((java.lang.Object) weeks41);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) ' ');
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        int int8 = weeks1.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        boolean boolean16 = weeks14.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        boolean boolean22 = weeks14.isLessThan(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.MutablePeriod mutablePeriod25 = weeks24.toMutablePeriod();
        org.joda.time.Weeks weeks26 = weeks20.plus(weeks24);
        org.joda.time.PeriodType periodType27 = weeks24.getPeriodType();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = weeks34.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        boolean boolean40 = weeks38.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = weeks38.get(durationFieldType41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        boolean boolean44 = weeks38.isSupported(durationFieldType43);
        org.joda.time.Weeks weeks45 = weeks37.minus(weeks38);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.DurationFieldType durationFieldType51 = weeks50.getFieldType();
        org.joda.time.DurationFieldType durationFieldType53 = weeks50.getFieldType(0);
        boolean boolean54 = weeks47.isSupported(durationFieldType53);
        boolean boolean55 = weeks45.isSupported(durationFieldType53);
        boolean boolean56 = weeks24.equals((java.lang.Object) durationFieldType53);
        boolean boolean57 = weeks13.isGreaterThan(weeks24);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod4 = weeks0.toMutablePeriod();
        int int5 = weeks0.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        int int8 = weeks3.size();
        org.joda.time.Weeks weeks9 = null;
        org.joda.time.Weeks weeks10 = weeks3.plus(weeks9);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(weeks10);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.minus(0);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = weeks19.minus(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType24 = weeks23.getPeriodType();
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        org.joda.time.Duration duration26 = weeks22.toStandardDuration();
        org.joda.time.Weeks weeks28 = weeks22.plus(100);
        int int29 = weeks6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        boolean boolean31 = weeks6.isSupported(durationFieldType30);
        org.joda.time.Weeks weeks33 = weeks6.multipliedBy((-2));
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType35 = weeks34.getFieldType();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType37 = weeks36.getPeriodType();
        org.joda.time.Weeks weeks39 = weeks36.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks41 = weeks36.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod42 = weeks36.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType43 = weeks36.getFieldType();
        org.joda.time.PeriodType periodType44 = weeks36.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType45 = weeks36.getFieldType();
        org.joda.time.Weeks weeks46 = weeks36.negated();
        org.joda.time.Weeks weeks48 = weeks36.multipliedBy(300);
        boolean boolean49 = weeks34.equals((java.lang.Object) weeks36);
        org.joda.time.Weeks weeks51 = weeks34.plus((int) (short) 1);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks56 = weeks54.dividedBy((int) '4');
        int int57 = weeks54.size();
        org.joda.time.Period period58 = weeks54.toPeriod();
        org.joda.time.Weeks weeks60 = weeks54.plus(9);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.weeks((-1));
        int int63 = weeks62.size();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks65 = weeks64.negated();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        org.joda.time.Weeks weeks68 = weeks66.dividedBy((int) '4');
        int int69 = weeks66.size();
        org.joda.time.Period period70 = weeks66.toPeriod();
        org.joda.time.DurationFieldType durationFieldType71 = weeks66.getFieldType();
        org.joda.time.Weeks weeks72 = weeks62.minus(weeks66);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.parseWeeks("P-3W");
        boolean boolean75 = weeks66.isLessThan(weeks74);
        org.joda.time.PeriodType periodType76 = weeks66.getPeriodType();
        boolean boolean77 = weeks60.equals((java.lang.Object) weeks66);
        org.joda.time.Weeks weeks78 = weeks34.minus(weeks66);
        org.joda.time.Weeks weeks79 = weeks6.plus(weeks66);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        boolean boolean18 = weeks16.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        boolean boolean24 = weeks16.isLessThan(weeks22);
        org.joda.time.Weeks weeks25 = weeks22.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.MutablePeriod mutablePeriod28 = weeks27.toMutablePeriod();
        org.joda.time.Weeks weeks29 = weeks25.plus(weeks27);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.DurationFieldType durationFieldType31 = weeks25.getFieldType();
        boolean boolean32 = weeks15.isSupported(durationFieldType31);
        boolean boolean33 = weeks0.isSupported(durationFieldType31);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = weeks10.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = weeks10.isSupported(durationFieldType15);
        org.joda.time.Weeks weeks17 = weeks9.minus(weeks10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.DurationFieldType durationFieldType23 = weeks22.getFieldType();
        org.joda.time.DurationFieldType durationFieldType25 = weeks22.getFieldType(0);
        boolean boolean26 = weeks19.isSupported(durationFieldType25);
        boolean boolean27 = weeks17.isSupported(durationFieldType25);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = weeks17.getValue(400);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 400");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = weeks1.plus(0);
        java.lang.String str5 = weeks1.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-3W" + "'", str5, "P-3W");
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        boolean boolean20 = weeks15.equals((java.lang.Object) 1L);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks23 = weeks15.minus((int) (short) 1);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) 'a');
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.DurationFieldType durationFieldType12 = weeks11.getFieldType();
        int int13 = weeks8.get(durationFieldType12);
        org.joda.time.Weeks weeks15 = weeks8.multipliedBy((int) '4');
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.TWO;
        int int17 = weeks16.size();
        org.joda.time.Weeks weeks19 = weeks16.multipliedBy((int) (short) 1);
        boolean boolean20 = weeks8.equals((java.lang.Object) weeks16);
        org.joda.time.Weeks weeks22 = weeks8.multipliedBy((-55));
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.weeks((-1));
        int int25 = weeks24.size();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks30 = weeks28.dividedBy((int) '4');
        int int31 = weeks28.size();
        org.joda.time.Period period32 = weeks28.toPeriod();
        org.joda.time.DurationFieldType durationFieldType33 = weeks28.getFieldType();
        org.joda.time.Weeks weeks34 = weeks24.minus(weeks28);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.parseWeeks("P-3W");
        boolean boolean37 = weeks28.isLessThan(weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType40 = weeks39.getPeriodType();
        org.joda.time.Weeks weeks42 = weeks39.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks44 = weeks39.dividedBy((int) 'a');
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        boolean boolean48 = weeks46.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        boolean boolean54 = weeks46.isLessThan(weeks52);
        org.joda.time.Weeks weeks55 = weeks45.plus(weeks46);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        java.lang.String str60 = weeks59.toString();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.ONE;
        int int62 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks61);
        boolean boolean63 = weeks45.isGreaterThan(weeks61);
        int int64 = weeks44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        org.joda.time.DurationFieldType durationFieldType65 = weeks44.getFieldType();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks67 = weeks44.plus(weeks66);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks72 = weeks70.dividedBy((int) '4');
        int int73 = weeks70.size();
        org.joda.time.Period period74 = weeks70.toPeriod();
        org.joda.time.DurationFieldType durationFieldType75 = weeks70.getFieldType();
        org.joda.time.Weeks weeks76 = weeks66.plus(weeks70);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks79);
        org.joda.time.Weeks weeks82 = weeks79.minus((int) '4');
        org.joda.time.Weeks weeks83 = weeks77.plus(weeks82);
        boolean boolean84 = weeks28.equals((java.lang.Object) weeks83);
        org.joda.time.Weeks weeks85 = weeks8.minus(weeks83);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "P-3W" + "'", str60, "P-3W");
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(weeks85);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.MutablePeriod mutablePeriod24 = weeks2.toMutablePeriod();
        org.joda.time.Weeks weeks25 = weeks2.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType27 = weeks2.getFieldType((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(weeks25);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.DurationFieldType durationFieldType24 = weeks23.getFieldType();
        org.joda.time.DurationFieldType durationFieldType26 = weeks23.getFieldType(0);
        boolean boolean27 = weeks20.isSupported(durationFieldType26);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = weeks29.minus(weeks30);
        org.joda.time.DurationFieldType durationFieldType33 = weeks30.getFieldType();
        boolean boolean34 = weeks20.isLessThan(weeks30);
        org.joda.time.Weeks weeks36 = weeks30.dividedBy(3);
        boolean boolean37 = weeks15.equals((java.lang.Object) weeks36);
        org.joda.time.DurationFieldType durationFieldType38 = weeks15.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(durationFieldType38);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.DurationFieldType durationFieldType5 = weeks2.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.DurationFieldType durationFieldType10 = weeks9.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = weeks11.getFieldType();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        boolean boolean15 = weeks13.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        java.lang.String str20 = weeks19.toString();
        boolean boolean21 = weeks13.isLessThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.MutablePeriod mutablePeriod25 = weeks24.toMutablePeriod();
        org.joda.time.Weeks weeks26 = weeks22.plus(weeks24);
        org.joda.time.Weeks weeks27 = weeks11.plus(weeks26);
        org.joda.time.Weeks weeks29 = weeks26.dividedBy((int) (short) 100);
        boolean boolean30 = weeks9.isGreaterThan(weeks26);
        org.joda.time.DurationFieldType durationFieldType31 = weeks9.getFieldType();
        org.joda.time.Weeks weeks32 = null;
        org.joda.time.Weeks weeks33 = weeks9.plus(weeks32);
        java.lang.String str34 = weeks9.toString();
        boolean boolean35 = weeks2.isLessThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType36 = weeks9.getFieldType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P-3W" + "'", str20, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "P-3W" + "'", str34, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(durationFieldType36);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.MutablePeriod mutablePeriod24 = weeks2.toMutablePeriod();
        org.joda.time.Weeks weeks25 = weeks2.negated();
        org.joda.time.Duration duration26 = weeks2.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(duration26);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = weeks10.minus(10);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        boolean boolean27 = weeks17.equals((java.lang.Object) weeks24);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        org.joda.time.Weeks weeks36 = weeks28.plus(weeks34);
        org.joda.time.Weeks weeks38 = weeks34.dividedBy(3);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period40 = weeks39.toPeriod();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks43.dividedBy((int) '4');
        org.joda.time.Weeks weeks47 = weeks43.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks48 = weeks39.minus(weeks47);
        boolean boolean49 = weeks34.equals((java.lang.Object) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        org.joda.time.Weeks weeks54 = weeks52.dividedBy((int) '4');
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks59 = weeks57.dividedBy((int) '4');
        int int60 = weeks57.size();
        org.joda.time.Weeks weeks61 = weeks54.plus(weeks57);
        boolean boolean62 = weeks48.isLessThan(weeks57);
        boolean boolean63 = weeks17.equals((java.lang.Object) boolean62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        boolean boolean66 = weeks64.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        java.lang.String str71 = weeks70.toString();
        org.joda.time.Weeks weeks72 = weeks64.plus(weeks70);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks74 = weeks73.negated();
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks74);
        org.joda.time.DurationFieldType durationFieldType76 = weeks75.getFieldType();
        int int77 = weeks72.get(durationFieldType76);
        org.joda.time.Weeks weeks79 = weeks72.multipliedBy((int) '4');
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.TWO;
        int int81 = weeks80.size();
        org.joda.time.Weeks weeks83 = weeks80.multipliedBy((int) (short) 1);
        boolean boolean84 = weeks72.equals((java.lang.Object) weeks80);
        boolean boolean85 = weeks17.isGreaterThan(weeks72);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "P-3W" + "'", str71, "P-3W");
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-3));
        org.joda.time.Weeks weeks3 = weeks1.plus(0);
        org.joda.time.DurationFieldType durationFieldType4 = weeks3.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod5 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = weeks6.plus(weeks12);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType18 = weeks17.getPeriodType();
        org.joda.time.Weeks weeks20 = weeks17.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks22 = weeks17.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod23 = weeks17.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType24 = weeks17.getFieldType();
        int int25 = weeks16.get(durationFieldType24);
        int int26 = weeks12.get(durationFieldType24);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = weeks28.minus(weeks29);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType33 = weeks32.getPeriodType();
        int int34 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.Duration duration35 = weeks31.toStandardDuration();
        boolean boolean36 = weeks12.isLessThan(weeks31);
        org.joda.time.Weeks weeks37 = weeks12.negated();
        org.joda.time.Weeks weeks38 = weeks3.plus(weeks37);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-3) + "'", int26 == (-3));
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks15 = weeks5.minus(weeks12);
        org.joda.time.Period period16 = weeks5.toPeriod();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType18 = weeks17.getPeriodType();
        org.joda.time.Weeks weeks20 = weeks17.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.plus(weeks22);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        java.lang.String str36 = weeks35.toString();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.ONE;
        int int38 = weeks35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks37);
        boolean boolean39 = weeks21.isGreaterThan(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = weeks40.getFieldType();
        int int42 = weeks37.get(durationFieldType41);
        boolean boolean43 = weeks17.isSupported(durationFieldType41);
        org.joda.time.MutablePeriod mutablePeriod44 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.weeks((-1));
        int int52 = weeks51.size();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        org.joda.time.Weeks weeks57 = weeks55.dividedBy((int) '4');
        int int58 = weeks55.size();
        org.joda.time.Period period59 = weeks55.toPeriod();
        org.joda.time.DurationFieldType durationFieldType60 = weeks55.getFieldType();
        org.joda.time.Weeks weeks61 = weeks51.minus(weeks55);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        boolean boolean64 = weeks62.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks66 = weeks65.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        java.lang.String str69 = weeks68.toString();
        boolean boolean70 = weeks62.isLessThan(weeks68);
        org.joda.time.Weeks weeks71 = weeks68.negated();
        org.joda.time.Weeks weeks72 = weeks51.plus(weeks71);
        boolean boolean73 = weeks48.isLessThan(weeks72);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks75 = weeks74.negated();
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        org.joda.time.Weeks weeks78 = weeks76.dividedBy((int) '4');
        int int79 = weeks76.size();
        org.joda.time.Period period80 = weeks76.toPeriod();
        org.joda.time.DurationFieldType durationFieldType81 = weeks76.getFieldType();
        boolean boolean82 = weeks48.isSupported(durationFieldType81);
        boolean boolean83 = weeks17.isSupported(durationFieldType81);
        org.joda.time.Weeks weeks84 = weeks5.plus(weeks17);
        org.joda.time.Weeks weeks85 = weeks5.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "P-3W" + "'", str36, "P-3W");
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "P-3W" + "'", str69, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks85);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(100);
        org.joda.time.Weeks weeks3 = weeks1.dividedBy((-2147483648));
        // The following exception was thrown during execution in test generation
        try {
            int int5 = weeks1.getValue((-10));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType3 = weeks2.getPeriodType();
        org.joda.time.Weeks weeks5 = weeks2.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks7 = weeks2.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = weeks2.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = weeks2.getFieldType();
        int int10 = weeks1.get(durationFieldType9);
        org.joda.time.Weeks weeks12 = weeks1.plus(100);
        org.joda.time.MutablePeriod mutablePeriod13 = weeks1.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType9 = weeks8.getPeriodType();
        org.joda.time.Weeks weeks11 = weeks8.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks13 = weeks8.dividedBy((int) 'a');
        boolean boolean14 = weeks0.isGreaterThan(weeks8);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType16 = weeks0.getFieldType((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Weeks weeks25 = weeks21.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks30 = weeks28.dividedBy((int) '4');
        int int31 = weeks28.size();
        org.joda.time.Weeks weeks32 = weeks28.negated();
        boolean boolean33 = weeks25.isGreaterThan(weeks28);
        org.joda.time.DurationFieldType durationFieldType34 = weeks25.getFieldType();
        org.joda.time.Weeks weeks36 = weeks25.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        boolean boolean39 = weeks37.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        boolean boolean45 = weeks37.isLessThan(weeks43);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.MutablePeriod mutablePeriod48 = weeks47.toMutablePeriod();
        org.joda.time.Weeks weeks49 = weeks43.plus(weeks47);
        int int50 = weeks47.getWeeks();
        org.joda.time.DurationFieldType durationFieldType51 = weeks47.getFieldType();
        boolean boolean52 = weeks25.isSupported(durationFieldType51);
        int int53 = weeks17.get(durationFieldType51);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType57 = weeks56.getFieldType();
        int int58 = weeks55.get(durationFieldType57);
        org.joda.time.Duration duration59 = weeks55.toStandardDuration();
        org.joda.time.Weeks weeks60 = weeks55.negated();
        boolean boolean61 = weeks17.isGreaterThan(weeks60);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-3) + "'", int50 == (-3));
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.MutablePeriod mutablePeriod6 = weeks5.toMutablePeriod();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((-1));
        int int9 = weeks8.size();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks14 = weeks12.dividedBy((int) '4');
        int int15 = weeks12.size();
        org.joda.time.Period period16 = weeks12.toPeriod();
        org.joda.time.DurationFieldType durationFieldType17 = weeks12.getFieldType();
        org.joda.time.Weeks weeks18 = weeks8.minus(weeks12);
        org.joda.time.Weeks weeks20 = weeks18.minus((-3));
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        boolean boolean29 = weeks21.isLessThan(weeks27);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.MutablePeriod mutablePeriod32 = weeks31.toMutablePeriod();
        org.joda.time.Weeks weeks33 = weeks27.plus(weeks31);
        org.joda.time.Weeks weeks34 = weeks20.plus(weeks27);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        int int36 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        org.joda.time.Weeks weeks37 = weeks5.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType39 = weeks38.getPeriodType();
        org.joda.time.Weeks weeks41 = weeks38.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks43 = weeks38.dividedBy((int) 'a');
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        boolean boolean47 = weeks45.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        java.lang.String str52 = weeks51.toString();
        boolean boolean53 = weeks45.isLessThan(weeks51);
        org.joda.time.Weeks weeks54 = weeks44.plus(weeks45);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.ONE;
        int int61 = weeks58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks60);
        boolean boolean62 = weeks44.isGreaterThan(weeks60);
        int int63 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks44);
        org.joda.time.DurationFieldType durationFieldType64 = weeks43.getFieldType();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks66 = weeks43.plus(weeks65);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        org.joda.time.Weeks weeks71 = weeks69.dividedBy((int) '4');
        int int72 = weeks69.size();
        org.joda.time.Period period73 = weeks69.toPeriod();
        org.joda.time.DurationFieldType durationFieldType74 = weeks69.getFieldType();
        org.joda.time.Weeks weeks75 = weeks65.plus(weeks69);
        boolean boolean76 = weeks5.isLessThan(weeks75);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "P-3W" + "'", str52, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType5 = weeks4.getPeriodType();
        org.joda.time.Weeks weeks7 = weeks4.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks9 = weeks4.dividedBy((int) 'a');
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks10.plus(weeks11);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        int int27 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        boolean boolean28 = weeks10.isGreaterThan(weeks26);
        int int29 = weeks9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks10);
        org.joda.time.DurationFieldType durationFieldType30 = weeks9.getFieldType();
        int int31 = weeks3.get(durationFieldType30);
        org.joda.time.MutablePeriod mutablePeriod32 = weeks3.toMutablePeriod();
        org.joda.time.PeriodType periodType33 = weeks3.getPeriodType();
        int int34 = weeks3.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType23 = weeks20.getFieldType(0);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        int int30 = weeks27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks29.plus((int) (short) -1);
        boolean boolean33 = weeks20.equals((java.lang.Object) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeksIn(readableInterval24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks25.minus(weeks32);
        org.joda.time.Weeks weeks36 = weeks19.plus(weeks25);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks39 = weeks25.dividedBy((-1027));
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Duration duration41 = weeks40.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(duration41);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        int int7 = weeks2.size();
        org.joda.time.Weeks weeks9 = weeks2.dividedBy((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod10 = weeks9.toMutablePeriod();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = weeks11.plus(weeks17);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        int int26 = weeks23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks25.plus((int) (short) -1);
        int int29 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.Weeks weeks31 = weeks11.plus((int) (short) 100);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        int int35 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        org.joda.time.Weeks weeks37 = weeks33.minus((int) (short) 1);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = weeks39.minus(weeks40);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        boolean boolean45 = weeks43.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        boolean boolean51 = weeks43.isLessThan(weeks49);
        int int52 = weeks40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks49);
        org.joda.time.Duration duration53 = weeks49.toStandardDuration();
        org.joda.time.Weeks weeks55 = weeks49.minus(1030);
        int int56 = weeks33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks55);
        boolean boolean57 = weeks9.isLessThan(weeks33);
        org.joda.time.PeriodType periodType58 = weeks33.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(periodType58);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        boolean boolean29 = weeks21.isLessThan(weeks27);
        org.joda.time.Weeks weeks30 = weeks20.plus(weeks21);
        int int31 = weeks21.size();
        org.joda.time.DurationFieldType durationFieldType32 = weeks21.getFieldType();
        org.joda.time.Weeks weeks33 = weeks13.plus(weeks21);
        boolean boolean34 = weeks8.isGreaterThan(weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType36 = weeks35.getFieldType();
        int int37 = weeks8.get(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-3) + "'", int37 == (-3));
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType8 = weeks7.getFieldType();
        org.joda.time.DurationFieldType durationFieldType10 = weeks7.getFieldType(0);
        int int11 = weeks0.get(durationFieldType10);
        org.joda.time.Weeks weeks13 = weeks0.minus((int) (byte) 10);
        org.joda.time.Weeks weeks15 = weeks0.dividedBy((-2));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        boolean boolean15 = weeks13.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        java.lang.String str20 = weeks19.toString();
        boolean boolean21 = weeks13.isLessThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        boolean boolean25 = weeks23.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = weeks23.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = weeks23.isSupported(durationFieldType28);
        org.joda.time.Weeks weeks30 = weeks22.minus(weeks23);
        boolean boolean31 = weeks6.isLessThan(weeks23);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType33 = weeks6.getFieldType((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P-3W" + "'", str20, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks12.getWeeks();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        int int16 = weeks15.size();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks19.dividedBy((int) '4');
        int int22 = weeks19.size();
        org.joda.time.Period period23 = weeks19.toPeriod();
        org.joda.time.DurationFieldType durationFieldType24 = weeks19.getFieldType();
        org.joda.time.Weeks weeks25 = weeks15.minus(weeks19);
        org.joda.time.Weeks weeks27 = weeks25.minus((-3));
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.MutablePeriod mutablePeriod39 = weeks38.toMutablePeriod();
        org.joda.time.Weeks weeks40 = weeks34.plus(weeks38);
        org.joda.time.Weeks weeks41 = weeks27.plus(weeks34);
        org.joda.time.Weeks weeks42 = weeks12.minus(weeks41);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks45 = weeks12.minus(weeks44);
        org.joda.time.DurationFieldType durationFieldType47 = weeks44.getFieldType((int) (byte) 0);
        boolean boolean48 = weeks3.isSupported(durationFieldType47);
        org.joda.time.Weeks weeks50 = weeks3.plus((-13));
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType52 = weeks51.getPeriodType();
        org.joda.time.Weeks weeks54 = weeks51.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks56 = weeks51.dividedBy((int) 'a');
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        boolean boolean60 = weeks58.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks62 = weeks61.negated();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        java.lang.String str65 = weeks64.toString();
        boolean boolean66 = weeks58.isLessThan(weeks64);
        org.joda.time.Weeks weeks67 = weeks57.plus(weeks58);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        int int74 = weeks71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks73);
        boolean boolean75 = weeks57.isGreaterThan(weeks73);
        int int76 = weeks56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks57);
        java.lang.String str77 = weeks57.toString();
        org.joda.time.Weeks weeks78 = weeks50.minus(weeks57);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType80 = weeks79.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod81 = weeks79.toMutablePeriod();
        boolean boolean82 = weeks50.isGreaterThan(weeks79);
        int int83 = weeks50.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "P-3W" + "'", str65, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "P1W" + "'", str77, "P1W");
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(mutablePeriod81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-14) + "'", int83 == (-14));
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks12.getWeeks();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        int int16 = weeks15.size();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks19.dividedBy((int) '4');
        int int22 = weeks19.size();
        org.joda.time.Period period23 = weeks19.toPeriod();
        org.joda.time.DurationFieldType durationFieldType24 = weeks19.getFieldType();
        org.joda.time.Weeks weeks25 = weeks15.minus(weeks19);
        org.joda.time.Weeks weeks27 = weeks25.minus((-3));
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.MutablePeriod mutablePeriod39 = weeks38.toMutablePeriod();
        org.joda.time.Weeks weeks40 = weeks34.plus(weeks38);
        org.joda.time.Weeks weeks41 = weeks27.plus(weeks34);
        org.joda.time.Weeks weeks42 = weeks12.minus(weeks41);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks45 = weeks12.minus(weeks44);
        org.joda.time.DurationFieldType durationFieldType47 = weeks44.getFieldType((int) (byte) 0);
        boolean boolean48 = weeks3.isSupported(durationFieldType47);
        org.joda.time.Weeks weeks50 = weeks3.dividedBy((int) (byte) 1);
        int int52 = weeks3.getValue(0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = weeks4.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        boolean boolean10 = weeks8.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        boolean boolean16 = weeks8.isLessThan(weeks14);
        org.joda.time.Weeks weeks17 = weeks7.plus(weeks8);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        int int24 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        boolean boolean25 = weeks7.isGreaterThan(weeks23);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.Period period27 = weeks7.toPeriod();
        boolean boolean28 = weeks6.equals((java.lang.Object) weeks7);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = weeks7.getValue((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483648");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int30 = weeks3.getWeeks();
        org.joda.time.Weeks weeks32 = weeks3.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks37 = weeks35.minus((int) 'a');
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        java.lang.String str42 = weeks41.toString();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeks((-1));
        int int45 = weeks44.size();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks50 = weeks48.dividedBy((int) '4');
        int int51 = weeks48.size();
        org.joda.time.Period period52 = weeks48.toPeriod();
        org.joda.time.DurationFieldType durationFieldType53 = weeks48.getFieldType();
        org.joda.time.Weeks weeks54 = weeks44.minus(weeks48);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        boolean boolean57 = weeks55.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        boolean boolean63 = weeks55.isLessThan(weeks61);
        org.joda.time.Weeks weeks64 = weeks61.negated();
        org.joda.time.Weeks weeks65 = weeks44.plus(weeks64);
        boolean boolean66 = weeks41.isLessThan(weeks65);
        org.joda.time.MutablePeriod mutablePeriod67 = weeks41.toMutablePeriod();
        int int68 = weeks41.getWeeks();
        org.joda.time.Duration duration69 = weeks41.toStandardDuration();
        boolean boolean70 = weeks35.isLessThan(weeks41);
        boolean boolean71 = weeks3.isLessThan(weeks41);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P-3W" + "'", str42, "P-3W");
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-3) + "'", int68 == (-3));
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.MutablePeriod mutablePeriod33 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks34 = weeks28.plus(weeks32);
        boolean boolean35 = weeks20.isLessThan(weeks32);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks40 = weeks37.multipliedBy((int) ' ');
        boolean boolean41 = weeks20.isLessThan(weeks37);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        int int47 = weeks42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks44);
        org.joda.time.Weeks weeks49 = weeks44.minus((-55));
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType51 = weeks50.getFieldType();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        boolean boolean54 = weeks52.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        boolean boolean60 = weeks52.isLessThan(weeks58);
        org.joda.time.Weeks weeks61 = weeks58.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.MutablePeriod mutablePeriod64 = weeks63.toMutablePeriod();
        org.joda.time.Weeks weeks65 = weeks61.plus(weeks63);
        org.joda.time.Weeks weeks66 = weeks50.plus(weeks65);
        org.joda.time.Weeks weeks68 = weeks65.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        java.lang.String str73 = weeks72.toString();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.ONE;
        int int75 = weeks72.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks74);
        org.joda.time.Weeks weeks76 = weeks68.plus(weeks72);
        org.joda.time.MutablePeriod mutablePeriod77 = weeks72.toMutablePeriod();
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        org.joda.time.Weeks weeks79 = weeks49.minus(weeks78);
        int int80 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks78);
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period82 = weeks81.toPeriod();
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks84 = weeks83.negated();
        org.joda.time.Weeks weeks85 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks84);
        org.joda.time.Weeks weeks87 = weeks85.dividedBy((int) '4');
        org.joda.time.Weeks weeks89 = weeks85.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks90 = weeks81.minus(weeks89);
        org.joda.time.Weeks weeks92 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks93 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks94 = weeks93.negated();
        org.joda.time.Weeks weeks95 = weeks92.minus(weeks93);
        boolean boolean96 = weeks81.equals((java.lang.Object) weeks95);
        org.joda.time.Duration duration97 = weeks95.toStandardDuration();
        int int98 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks95);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "P-3W" + "'", str73, "P-3W");
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(mutablePeriod77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertNotNull(weeks93);
        org.junit.Assert.assertNotNull(weeks94);
        org.junit.Assert.assertNotNull(weeks95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(duration97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1 + "'", int98 == 1);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        java.lang.String str8 = weeks0.toString();
        org.joda.time.MutablePeriod mutablePeriod9 = weeks0.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P3W" + "'", str8, "P3W");
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks0.multipliedBy(3);
        org.joda.time.Weeks weeks24 = weeks0.dividedBy((-927));
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.weeks((-1));
        int int27 = weeks26.size();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks30.dividedBy((int) '4');
        int int33 = weeks30.size();
        org.joda.time.Period period34 = weeks30.toPeriod();
        org.joda.time.DurationFieldType durationFieldType35 = weeks30.getFieldType();
        org.joda.time.Weeks weeks36 = weeks26.minus(weeks30);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        boolean boolean39 = weeks37.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        boolean boolean45 = weeks37.isLessThan(weeks43);
        org.joda.time.Weeks weeks46 = weeks43.negated();
        org.joda.time.Weeks weeks47 = weeks26.plus(weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.Weeks weeks55 = weeks52.minus(weeks53);
        boolean boolean56 = weeks49.isLessThan(weeks52);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType58 = weeks57.getPeriodType();
        org.joda.time.Weeks weeks60 = weeks57.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks62 = weeks57.dividedBy((int) 'a');
        boolean boolean63 = weeks49.isGreaterThan(weeks57);
        boolean boolean64 = weeks47.isLessThan(weeks57);
        org.joda.time.Weeks weeks65 = weeks0.minus(weeks47);
        org.joda.time.DurationFieldType durationFieldType66 = weeks47.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(durationFieldType66);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Weeks weeks8 = weeks4.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        boolean boolean16 = weeks8.isGreaterThan(weeks11);
        org.joda.time.DurationFieldType durationFieldType17 = weeks8.getFieldType();
        int int18 = weeks1.get(durationFieldType17);
        org.joda.time.Weeks weeks20 = weeks1.plus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType21 = weeks1.getFieldType();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.DurationFieldType durationFieldType27 = weeks26.getFieldType();
        org.joda.time.DurationFieldType durationFieldType29 = weeks26.getFieldType(0);
        boolean boolean30 = weeks23.isSupported(durationFieldType29);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = weeks32.minus(weeks33);
        org.joda.time.DurationFieldType durationFieldType36 = weeks33.getFieldType();
        boolean boolean37 = weeks23.isLessThan(weeks33);
        org.joda.time.Weeks weeks39 = weeks33.dividedBy(3);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.MutablePeriod mutablePeriod46 = weeks45.toMutablePeriod();
        int int47 = weeks33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        boolean boolean48 = weeks1.isGreaterThan(weeks33);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType18 = weeks17.getPeriodType();
        java.lang.String str19 = weeks17.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P3W" + "'", str19, "P3W");
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        int int4 = weeks3.size();
        java.lang.String str5 = weeks3.toString();
        java.lang.String str6 = weeks3.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks8.minus((int) '4');
        org.joda.time.Weeks weeks12 = weeks3.minus(weeks8);
        org.joda.time.Weeks weeks14 = weeks3.minus((int) (byte) 100);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = weeks14.plus(weeks15);
        int int18 = weeks14.getWeeks();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks27 = weeks25.dividedBy((int) '4');
        int int28 = weeks27.getWeeks();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeks((-1));
        int int31 = weeks30.size();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.Weeks weeks36 = weeks34.dividedBy((int) '4');
        int int37 = weeks34.size();
        org.joda.time.Period period38 = weeks34.toPeriod();
        org.joda.time.DurationFieldType durationFieldType39 = weeks34.getFieldType();
        org.joda.time.Weeks weeks40 = weeks30.minus(weeks34);
        org.joda.time.Weeks weeks42 = weeks40.minus((-3));
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        boolean boolean45 = weeks43.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        boolean boolean51 = weeks43.isLessThan(weeks49);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.MutablePeriod mutablePeriod54 = weeks53.toMutablePeriod();
        org.joda.time.Weeks weeks55 = weeks49.plus(weeks53);
        org.joda.time.Weeks weeks56 = weeks42.plus(weeks49);
        org.joda.time.Weeks weeks57 = weeks27.minus(weeks56);
        org.joda.time.Weeks weeks58 = weeks22.plus(weeks27);
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        boolean boolean63 = weeks61.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks65 = weeks64.negated();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        java.lang.String str68 = weeks67.toString();
        org.joda.time.Weeks weeks69 = weeks61.plus(weeks67);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks72 = weeks70.minus((int) (byte) 10);
        int int73 = weeks60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks70);
        int int74 = weeks58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks60);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks60);
        int int76 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks75);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-3W" + "'", str5, "P-3W");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-103) + "'", int18 == (-103));
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "P-3W" + "'", str68, "P-3W");
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = weeks10.minus(10);
        org.joda.time.Duration duration18 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        org.joda.time.Weeks weeks27 = weeks19.plus(weeks25);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks30 = weeks28.minus((int) (byte) 10);
        org.joda.time.Weeks weeks31 = weeks17.minus(weeks30);
        int int32 = weeks30.size();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = weeks30.minus(weeks34);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType37 = weeks35.getFieldType(1030);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1030");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P-4W");
        org.joda.time.Weeks weeks3 = weeks1.dividedBy((int) (short) 1);
        org.joda.time.Weeks weeks5 = weeks3.dividedBy((int) (byte) 1);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
    }
}

